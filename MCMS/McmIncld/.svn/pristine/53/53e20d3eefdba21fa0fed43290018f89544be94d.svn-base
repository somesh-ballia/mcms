/*
********************************************************************************
*
* Copyright (C) 2003 Polycom Israel Ltd.
* This file contains confidential information proprietary to POLYCOM ISRAEL Ltd.
* The use or disclosure of any information contained In this file without the
* written consent of an officer of POLYCOM ISRAEL Ltd is expressly forbidden.
*
********************************************************************************

*****************************************************************************

 General Description: File contains the definitions of the RTP requests structures

 Generated By: Eyal Leviav      Date: 7/25/2005

*****************************************************************************/

#ifndef __FWK_RTP_INDICATION_STRUCTS_H
#define __FWK_RTP_INDICATION_STRUCTS_H

/***** Include Files *****/
#include "DataTypes.h"
#include "IpChannelParams.h"

/***** Constants *****/

/***** Macros *****/

/***** Type Definition *****/

////////////////////////////////////
//Intra request
//IP_RTP_VIDEO_UPDATE_PIC_IND 
////////////////////////////////////
typedef struct  {
	APIU32							unChannelType;		// kChanneltype enam Video/Audio/Content/FECC
	APIU32							unChannelDirection;	// cmCapDirection ename
	APIU32      					uSeqNumber;
	APIU32  				 		unSsrcID;			// SSRC is required by Lync2013
	APIU32  				 		unPrID;				// Priority ID is required by Lync2013

} TRtpVideoUpdatePictureInd;

////////////////////////////////////
//Bad spontaneous indication
//IP_RTP_BAD_SPONTAN_IND
////////////////////////////////////
typedef struct {
	APIU32							unChannelType;				// kChanneltype enam Video/Audio/Content/FECC
	APIU32							unChannelDirection;			// cmCapDirection ename
	APIU32							unBadSpontReason;           // from the enum BadSpontanIndReason
} TRtpBadSpontaneousInd;

////////////////////////////////////
//Stream status
//IP_RTP_STREAM_STATUS_IND 
////////////////////////////////////
typedef struct {
	APIU32							unChannelType;				// kChanneltype enam Video/Audio/Content/FECC
	APIU32							unChannelDirection;			// cmCapDirection ename
	APIU32							unStreamStatus;				//stream status 0 - OK, 1 Violate.
	APIU32							bunViolation;				//Violation flag - After the NewChannelMode timeout if there is no violation
																//the BV is set to 1 and FrameRate and Resolution to 0.
	APIU32							unFramesPerSec;				//Frames per second
	APIU32							unResolution;				//Resolution
	APIU32							unPayloadType;				//Payload type																
	APIU32							unBitRate;					// Bit Rate <= 2000k
	APIU32							unAnnexesAndResolutionMask; // Annexes according to the annexesListEn in cap263an.h
} TRtpStreamStatusInd;

////////////////////////////////////
//Token request
//IP_RTP_FECC_TOKEN_REQUEST_IND 
////////////////////////////////////
typedef struct {
	APIU32							unChannelType;				// kChanneltype enam Video/Audio/Content/FECC
	APIU32							unChannelDirection;			// cmCapDirection ename
	APIU32							unTokenOpcode;				// Requets/Release
    APIU32                          unIsCameraControl;          // 0 false , 1 - true 
} TRtpFeccTokenRequestInd;

////////////////////////////////////
//DTMF indication (Rfc 2833)
//IP_RTP_DTMF_INPUT_IND 
////////////////////////////////////
typedef struct {
	APIU32							unDigit;					// DTMF detected value
} TRtpDtmfRequestInd;

////////////////////////////////////
// LPR Mode Change Command Ind
////////////////////////////////////
typedef struct  
{
	APIU32							unChannelType;				// kChanneltype enam Video/Audio/Content/FECC
	APIU32							unChannelDirection;			// cmCapDirection ename
	APIU16							usLossProtection;			// % packet loss
	APIU32							unMTBF;						// time [msec]
	APIU32							unCongestionCeiling;		// 
	APIU16							usFill;						// 
	APIU16							usModeTimeout;				// 
	APIU16							usAlignment;				// 
	
} TLprModeChangeInd;

/////////////////////////////////////////////////
// DBA (Dynamic Bandwidth Allocation) Indication
/////////////////////////////////////////////////
typedef struct  
{
	APIU32							unChannelType;				// kChanneltype enam Video/Audio/Content/FECC
	APIU32							unChannelDirection;			// cmCapDirection ename
	APIU16							usReductionExpansion;		// 1-Reduction, 2-Expansion
	APIU16							usRateFactor;				// 0-100

} TDbaInd;

////////////////////////////////////
//Different payload type arrive to RTP channel
//IP_RTP_DIFF_PAYLOAD_TYPE_IND 
////////////////////////////////////
typedef struct {
     APIU32							unChannelType;              // kChanneltype enam Video/Audio/Content/FECC
     APIU32                         unChannelDirection;			// cmCapDirection ename
     APIU32                         unPayloadType;              // Payload type                                                                                    
} TRtpDiffPayloadTypeInd;


////////////////////////////////////
//Mute indication arrive to RTP on Fecc channel
//IP_RTP_FECC_MUTE_IND
////////////////////////////////////
typedef struct {
     APIU16                         unIsMuteOn;              // 1 for mute on, 0 for mute off
} TRtpFeccMuteInd;


/*************************************************************************/
typedef struct
{
	APIU32  status;
} ENCODER_SYNC_IND_S;

/*************************************************************************/

#endif

