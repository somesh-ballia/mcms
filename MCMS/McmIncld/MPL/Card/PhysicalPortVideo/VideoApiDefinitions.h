/*
********************************************************************************
*
* Copyright (C) 2003 Polycom Israel Ltd.
* This file contains confidential information proprietary to POLYCOM ISRAEL Ltd.
* The use or disclosure of any information contained In this file without the
* written consent of an officer of POLYCOM ISRAEL Ltd is expressly forbidden.
*
********************************************************************************

*****************************************************************************

 General Description:

 Generated By:


*****************************************************************************

// Feilds in Video API between MCMS and MFA
//=========================================
//	APIS32		nBitRate;			// 0-2048000
//	APIS32		nFrameRate;			// enum Gal
//	APIS32		nProtocol;			// enum eVideoProtocol
//	APIS32		nResolution;        // enum Gal
//	APIS32		nIntraRefreshRate;  // Gal to check - (CURRENTLY ALWAYS INVALID 0xFFFFFF DBC2 not supported)
//
//	APIS32		nDecoderSizeInLayout;// enum eRelativeSizeOfImageInLayout
//	APIS32		nDecoder_xX_CoordinatorInLayout;// 0-120 (CURRENTLY ALWAYS INVALID 0xFFFFFF Stereo not supported)
//
//	APIS32		nColor;				// number (in YUV format)
//	APIS32		nThickness;         // enum ELayoutBorderWidth
//	APIS32		nTexture;           // enum ETexture
//	APIS32		nSpeakerImageID;    // 1-16
//	APIS32		nLayoutType;        // enum ELayoutType

*****************************************************************************/

#ifndef __VIDEO_API_DEFINITIONS_H
#define __VIDEO_API_DEFINITIONS_H

typedef enum
{
	E_FPS_MODE_DUMMY,
		E_FPS_PAL_25,		//Encoder FR always 25 FPS
		E_FPS_NTSC_30,		//Encoder FR always 30 FPS
		E_FPS_AUTO,			//Encoder FR - follow one decoder (according to layout type) indication
		E_FPS_LAST
} EFpsMode;


typedef enum
{
	E_VIDEO_ENCODER_DUMMY,
    E_VIDEO_ENCODER_NORMAL,
    E_VIDEO_ENCODER_MASTER_LB_ONLY,					//The MPM cards master video encoder for SD30/HD720 asymmetric calls
    E_VIDEO_ENCODER_SLAVE_FULL_ENCODER,				//The MPM cards slave video encoder for SD30/HD720 asymmetric calls
    E_VIDEO_ENCODER_MASTER_SPLIT_ENCODER,			//The MPM+ cards master video encoder for HD1080 asymmetric calls
    E_VIDEO_ENCODER_SLAVE_SPLIT_ENCODER,			//The MPM+ cards slave video encoder for HD1080asymmetric calls
	E_VIDEO_ENCODER_MASTER_SPLIT_ENCODER_HALF_DSP,	//The MPM+ cards master video encoder for HD720 symmetric calls
	E_VIDEO_ENCODER_SLAVE_SPLIT_ENCODER_HALF_DSP,	//The MPM+ cards slave video encoder for HD720 symmetric calls
            E_VIDEO_ENCODER_PCM,
    E_VIDEO_ENCODER_LAST
} EVideoEncoderType;

typedef enum
{
            E_VIDEO_DECODER_DUMMY,
            E_VIDEO_DECODER_NORMAL,
            E_VIDEO_DECODER_CONTENT,    //The Decoder allocated to support Legacy conference
            E_VIDEO_DECODER_LAST
} EVideoDecoderType;

typedef enum
{
	E_VIDEO_PROTOCOL_DUMMY,
	E_VIDEO_PROTOCOL_H261,                                        // 1
	E_VIDEO_PROTOCOL_DUMMY2,
	E_VIDEO_PROTOCOL_H263,                                        // 3
	E_VIDEO_PROTOCOL_H264,                                        // 4
	E_VIDEO_PROTOCOL_RTV,
	E_VIDEO_PROTOCOL_SVC,
	E_VIDEO_PROTOCOL_MS_SVC,
	E_VIDEO_PROTOCOL_VP8,
	E_VIDEO_PROTOCOL_LAST
} EVideoProtocol;

typedef enum
{
    E_VIDEO_RES_DUMMY,
	E_VIDEO_RES_QCIF,
	E_VIDEO_RES_CIF,
	E_VIDEO_RES_VGA,
	E_VIDEO_RES_4CIF,
	E_VIDEO_RES_525SD,
	E_VIDEO_RES_625SD,
	E_VIDEO_RES_SVGA,
	E_VIDEO_RES_XGA,
	E_VIDEO_RES_HD,
	E_VIDEO_RES_16CIF,
	E_VIDEO_RES_SIF,
	E_VIDEO_RES_QVGA,
	E_VIDEO_RES_SQCIF,
    E_VIDEO_RES_1080HD,
	E_VIDEO_RES_LAST
} EVideoResolution;


typedef enum
{
	E_VIDEO_FPS_DUMMY,
	E_VIDEO_60_FPS,
	E_VIDEO_50_FPS,
	E_VIDEO_30_FPS,
	E_VIDEO_25_FPS,
	E_VIDEO_20_FPS,
	E_VIDEO_15_FPS,
	E_VIDEO_12_5_FPS,
	E_VIDEO_10_FPS,
	E_VIDEO_7_5_FPS,
	E_VIDEO_6_FPS,
	E_VIDEO_5_FPS,
	E_VIDEO_3_FPS,
	E_VIDEO_FPS_LAST
} EVideoFrameRate;


typedef enum
{
	E_VIDEO_LAYOUT_DUMMY,
	E_VIDEO_LAYOUT_1X1,
	E_VIDEO_LAYOUT_1X2,
	E_VIDEO_LAYOUT_2X1,
	E_VIDEO_LAYOUT_2X2,
	E_VIDEO_LAYOUT_3X3,
	E_VIDEO_LAYOUT_4X4,
	E_VIDEO_LAYOUT_1P5,
	E_VIDEO_LAYOUT_1P7,
	E_VIDEO_LAYOUT_1X2HOR,
	E_VIDEO_LAYOUT_1X2VER,
	E_VIDEO_LAYOUT_1P2VER,
	E_VIDEO_LAYOUT_1P2HOR,
	E_VIDEO_LAYOUT_1P3HOR_UP,
	E_VIDEO_LAYOUT_1P3VER,
	E_VIDEO_LAYOUT_1P4HOR,
	E_VIDEO_LAYOUT_1P4VER,
	E_VIDEO_LAYOUT_1P8CENT,
	E_VIDEO_LAYOUT_1P8UP,
	E_VIDEO_LAYOUT_1P8HOR_UP,
	E_VIDEO_LAYOUT_1P2HOR_UP,
	E_VIDEO_LAYOUT_1P3HOR,
	E_VIDEO_LAYOUT_1P4HOR_UP,
	E_VIDEO_LAYOUT_1P12,
	E_VIDEO_LAYOUT_2P8,
	E_VIDEO_LAYOUT_1X1_QCIF,
	E_VIDEO_LAYOUT_FLEX_1X2,
	E_VIDEO_LAYOUT_FLEX_1P2HOR_RIGHT,
	E_VIDEO_LAYOUT_FLEX_1P2HOR_LEFT,
	E_VIDEO_LAYOUT_FLEX_1P2HOR_UP_RIGHT,
	E_VIDEO_LAYOUT_FLEX_1P2HOR_UP_LEFT,
	E_VIDEO_LAYOUT_FLEX_2X2_UP_RIGHT,
	E_VIDEO_LAYOUT_FLEX_2X2_UP_LEFT,
	E_VIDEO_LAYOUT_FLEX_2X2_DOWN_RIGHT,
	E_VIDEO_LAYOUT_FLEX_2X2_DOWN_LEFT,
	E_VIDEO_LAYOUT_FLEX_2X2_RIGHT,
	E_VIDEO_LAYOUT_FLEX_2X2_LEFT,
	E_VIDEO_LAYOUT_OVERLAY_1P1,
	E_VIDEO_LAYOUT_OVERLAY_1P2,
	E_VIDEO_LAYOUT_OVERLAY_1P3,
	E_VIDEO_LAYOUT_OVERLAY_ITP_1P2,
	E_VIDEO_LAYOUT_OVERLAY_ITP_1P3,
	E_VIDEO_LAYOUT_OVERLAY_ITP_1P4,
	E_VIDEO_LAYOUT_1TOP_LEFT_P8,
	E_VIDEO_LAYOUT_2TOP_P8,
	E_VIDEO_NO_LAYOUT,
	E_VIDEO_LAYOUT_LAST
}	ELayoutType;

typedef enum
{
	E_LAYOUT_BORDER_WIDTH_DUMMY,
	E_LAYOUT_BORDER_WIDTH_THIN,
	E_LAYOUT_BORDER_WIDTH_NORMAL,
	E_LAYOUT_BORDER_WIDTH_THICK,
	E_LAYOUT_BORDER_WIDTH_LAST
} ELayoutBorderWidth;

typedef enum
{
	E_TEXTURE_DUMMY,
	//...
	E_TEXTURE_LAST
} ETexture;

//Resolution Ratio is using 1 Byte, hence max value is 256.
//Otherwise, we will need to change the defines to enum.
#define RESOLUTION_RATIO_0 0 	//Up to and include QCIF
#define RESOLUTION_RATIO_1 1 	//Up to and include CIF
#define RESOLUTION_RATIO_4 4 	//Up to and include SD
#define RESOLUTION_RATIO_16 16 	//Up to and include HD720
#define RESOLUTION_RATIO_64 64 	//HD1080 (Greater then HD720)

typedef enum
{
	E_NOT_IN_LAYOUT		= 0,
	E_QQUARTER_SCREEN	= 1,
	E_QUARTER_SCREEN	= 4,
	E_FULL_SCREEN		= 16
} ERelativeSizeOfImageInLayout;

typedef enum
{
	E_PARSING_MODE_DUMMY,
	E_PARSING_MODE_CP,
	E_PARSING_MODE_PSEUDO_VSW,
	E_PARSING_MODE_LAST
} EParsingMode;

typedef enum
{
	E_TELEPRESENCE_MODE_DUMMY,
	E_TELEPRESENCE_MODE_NONE,
	E_TELEPRESENCE_MODE_RPX,
	E_TELEPRESENCE_MODE_FLEX,
	E_TELEPRESENCE_MODE_LAST
} ETelePresenceMode;

typedef enum
{
	E_TEXT_ALIGNMENT_DUMMY = 0,
	E_TEXT_ALIGNMENT_RIGHT,
	E_TEXT_ALIGNMENT_LEFT,
	E_TEXT_ALIGNMENT_CENTER
} ETextAlignment;

typedef enum
{
	E_TEXT_BOX_PRESENTATION_MODE_DUMMY = 0,
	E_TEXT_BOX_PRESENTATION_MODE_STATIC,
	E_TEXT_BOX_PRESENTATION_MODE_SCROLL_DOWN,
	E_TEXT_BOX_PRESENTATION_MODE_SCROLL_UP
} ETextBoxPresentationMode;

typedef enum
{
	E_TEXT_BOX_POSITION_UP_LEFT = 0,
	E_TEXT_BOX_POSITION_UP_CENTER,
	E_TEXT_BOX_POSITION_UP_RIGHT,
	E_TEXT_BOX_POSITION_MIDDLE_LEFT,
	E_TEXT_BOX_POSITION_MIDDLE_CENTER,
	E_TEXT_BOX_POSITION_MIDDLE_RIGHT,
	E_TEXT_BOX_POSITION_DOWN_LEFT,
	E_TEXT_BOX_POSITION_DOWN_CENTER,
	E_TEXT_BOX_POSITION_DOWN_RIGHT
} ETextBoxPosition;

#define TEXT_FONT_TYPE_NULL			0x00
#define TEXT_FONT_TYPE_BOLD			0x01
#define TEXT_FONT_TYPE_ITALIC		0x02
#define TEXT_FONT_TYPE_UNDERLINE	0x04
#define TEXT_FONT_TYPE_STRIKEOUT	0x08

#define QCIF_RESOLUTION_FS		1
#define CIF_RESOLUTION_FS		2
#define SD_RESOLUTION_FS		7
#define FS_MULTIPLIER_BITS		8	//FS is in multiples of 256
#define W4CIF_RESOLUTION_FS		9
#define HD_RESOLUTION_FS		15
#define HD_1080_RESOLUTION_FS	32
#define CIF_MBPS				24
#define SD_MBPS	    			81
#define HD_MBPS	    			216
#define FS_MULTIPLIER_RESIDUE ((1<<FS_MULTIPLIER_BITS)-1)

typedef enum
{
	E_VIDEO_QUALITY_DUMMY,
    E_VIDEO_QUALITY_SHARPNESS,
    E_VIDEO_QUALITY_MOTION,
    E_VIDEO_QUALITY_LAST
} EVideoQualityType;

typedef enum
{
    E_VIDEO_RESOLUTION_TABLE_DUMMY,
	E_VIDEO_RESOLUTION_TABLE_REGULAR,
	E_VIDEO_RESOLUTION_TABLE_ALTERNATIVE,
	E_VIDEO_RESOLUTION_TABLE_LAST
} EVideoResolutionTableType;

typedef enum
{
      E_VIDEO_CONF_TYPE_DUMMY,
      E_VIDEO_CONF_TYPE_CP,
      E_VIDEO_CONF_TYPE_VSW,
      E_VIDEO_CONF_TYPE_COP_HD1080_25FPS,
      E_VIDEO_CONF_TYPE_COP_HD720_50FPS,
      E_VIDEO_CONF_TYPE_LAST
} EVideoConfType;


typedef enum
{
	E_VIDEO_RES_ASPECT_RATIO_DUMMY,
	E_VIDEO_RES_ASPECT_RATIO_4_3,
	E_VIDEO_RES_ASPECT_RATIO_16_9,
	E_VIDEO_RES_ASPECT_RATIO_LAST
} EVideoResolutionAspectRatio;

typedef enum
{
	E_TEXT_BOX_TYPE_DUMMY,
    E_TEXT_BOX_TYPE_IN_CELL,
    E_TEXT_BOX_TYPE_MESSAGE_OVERLAY,
	E_TEXT_BOX_TYPE_LAST
} ETextBoxType;

typedef enum
{
	E_TEXT_DISPLAY_SPEED_DUMMY,
    E_TEXT_DISPLAY_SPEED_STATIC,
    E_TEXT_DISPLAY_SPEED_SLOW,
    E_TEXT_DISPLAY_SPEED_FAST,
	E_TEXT_DISPLAY_SPEED_LAST
} ETextDisplaySpeed;

typedef enum
{
	E_TEXT_FONT_SIZE_DUMMY,
    E_TEXT_FONT_SIZE_SMALL,
    E_TEXT_FONT_SIZE_MEDIUM,
    E_TEXT_FONT_SIZE_LARGE,
	E_TEXT_FONT_SIZE_LAST
} ETextFontSize;

#define COLOR_YUV_LIGHT_BLUE	0x00BF8C6C
#define COLOR_YUV_BLACK			0x00108080
#define COLOR_YUV_GREY			0x00708080
#define COLOR_YUV_RED			0x00405AE0
#define COLOR_YUV_ORANGE		0x007D53C4
#define COLOR_YUV_BLUE			0x0028EF6D
#define COLOR_YUV_OLIVE			0x00614789
#define COLOR_YUV_GREEN			0x00505A50
#define COLOR_YUV_PURPLE		0x003DA5AF
#define COLOR_YUV_WHITE			0x00EB8080
#define COLOR_YUV_LIGHT_GREEN	0x00D00000

typedef enum
{
	E_SITE_NAMES_LOCATION_DUMMY,
	E_SITE_NAMES_LOCATION_AUTO,
	E_SITE_NAMES_LOCATION_DOWN_CENTER,
	E_SITE_NAMES_LOCATION_DOWN_LEFT,
	E_SITE_NAMES_LOCATION_DOWN_RIGHT,
	E_SITE_NAMES_LOCATION_UP_CENTER,
	E_SITE_NAMES_LOCATION_UP_LEFT,
	E_SITE_NAMES_LOCATION_UP_RIGHT,
	E_SITE_NAMES_LOCATION_LAST
} ESiteNamesLocation;

typedef enum  {
	E_PACKET_PAYLOAD_FORMAT_DUMMY,
	E_PACKET_PAYLOAD_FORMAT_SINGLE_UNIT,
	E_PACKET_PAYLOAD_FORMAT_FRAGMENTATION_UNIT,
	E_PACKET_PAYLOAD_FORMAT_LAST
}EPacketPayloadFormat;

typedef enum  {
	E_PROFILE_DUMMY,
	E_PROFILE_BASELINE,
	E_PROFILE_HIGH,
	E_PROFILE_RTV_ADVANCED,
	E_PROFILE_MAIN,
	E_PROFILE_LAST
}EProfileType;

#define DSP_SMART_SWITCH_DUMMY_ID 0xFFFFFFF0

typedef enum
{
  E_ICON_DUMMY,
  E_ICON_REC_OFF, // No Icon
  E_ICON_REC_ON,
  E_ICON_REC_PAUSE,
  E_ICON_LAST
}EIconType;

#endif //__VIDEO_API_DEFINITIONS_H


