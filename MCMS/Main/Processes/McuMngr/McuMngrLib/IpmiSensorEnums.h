#ifndef __IPMI_SENSOR_ENUMS_H__
#define __IPMI_SENSOR_ENUMS_H__

enum EventReadType
{
      EVENT_READ_TYPE_NO_COLOR = 111
    , EVENT_READ_TYPE_COLOR = 1
};

enum
{
      LAN_STATUS_INACTIVE = 0
    , LAN_STATUS_ACTIVE = 1
    , LAN_STATUS_STANDBY = 2
};

enum
{
      IPMI_ENTITY_TYPE_UNSPECIFIED = 160
    , IPMI_ENTITY_TYPE_PROCESSOR = 3
    , IPMI_ENTITY_TYPE_DISK = 4
    , IPMI_ENTITY_TYPE_PERIPHERAL = 5
    , IPMI_ENTITY_TYPE_SYSTEM_MANAGEMENT = 6
    , IPMI_ENTITY_TYPE_SYSTEM_BOARD = 7
    , IPMI_ENTITY_TYPE_MEMORY_MODULE = 8
    , IPMI_ENTITY_TYPE_PROCESSOR_MODULE = 9
    , IPMI_ENTITY_TYPE_POWER_SUPPLY = 10
    , IPMI_ENTITY_TYPE_ADDIN_CARD = 11
    , IPMI_ENTITY_TYPE_FRONT_PANEL_BOARD = 12
    , IPMI_ENTITY_TYPE_REAR_PANEL_BOARD = 13
    , IPMI_ENTITY_TYPE_POWER_SYSTEM_BOARD = 14
    , IPMI_ENTITY_TYPE_DRIVE_BACKPLANE = 15
    , IPMI_ENTITY_TYPE_SYSTEM_INTERNAL = 16
    , IPMI_ENTITY_TYPE_OTHER_SYSTEM_BOARD = 17
    , IPMI_ENTITY_TYPE_PROCESSOR_BOARD = 18
    , IPMI_ENTITY_TYPE_POWER_SUPPLY_UNIT = 19
    , IPMI_ENTITY_TYPE_POWER_SUPPLY_MODULE = 20
    , IPMI_ENTITY_TYPE_POWER_MANAGEMENT = 21
    , IPMI_ENTITY_TYPE_CHASSIS_BACK_PANEL = 22
    , IPMI_ENTITY_TYPE_SYSTEM_CHASSIS = 23
    , IPMI_ENTITY_TYPE_SUB_CHASSIS = 24
    , IPMI_ENTITY_TYPE_OTHER_CHASSIS_CARDS = 25
    , IPMI_ENTITY_TYPE_DISK_DRIVE = 26
    , IPMI_ENTITY_TYPE_PERIPHERAL2 = 27
    , IPMI_ENTITY_TYPE_DEVICE_BAY = 28
    , IPMI_ENTITY_TYPE_FAN_COOLING_DEVICE = 29
    , IPMI_ENTITY_TYPE_COOLING_UNIT = 30
    , IPMI_ENTITY_TYPE_CABEL_OR_INTERCONNECT = 31
    , IPMI_ENTITY_TYPE_MEMORY_DEVICE = 32
    , IPMI_ENTITY_TYPE_SYSTEM_MANAGEMENT2 = 33
    , IPMI_ENTITY_TYPE_BIOS = 34
    , IPMI_ENTITY_TYPE_OS = 35
    , IPMI_ENTITY_TYPE_SYSTEM_BUS = 36
    , IPMI_ENTITY_TYPE_GROUP = 37
    , IPMI_ENTITY_TYPE_REMOTE_OOB = 38
    , IPMI_ENTITY_TYPE_EXTERNAL_ENV = 39
    , IPMI_ENTITY_TYPE_BATTERY = 40
    , IPMI_ENTITY_TYPE_PROCESSING_BLADE = 41
    , IPMI_ENTITY_TYPE_CONNECTIVITY_SWITCH = 42
    , IPMI_ENTITY_TYPE_PROCESSOR_OR_MEMORY = 43
    , IPMI_ENTITY_TYPE_IO_MODULE = 44
    , IPMI_ENTITY_TYPE_PROCESSOR_IO_MODULE = 45
    , IPMI_ENTITY_TYPE_MANAGEMENT_CONTROLLER = 46
    , IPMI_ENTITY_TYPE_IPMI_CHANNEL = 47
    , IPMI_ENTITY_TYPE_PCI_BUS = 48
    , IPMI_ENTITY_TYPE_PCI_EXPRESS_BUS = 49
    , IPMI_ENTITY_TYPE_SCSI_BUS_PARALLEL = 50
    , IPMI_ENTITY_TYPE_SATA_OR_SAS_BUS = 51
    , IPMI_ENTITY_TYPE_PROCESSOR_FR_BUS = 52
};

enum
{
      IPMI_SENSOR_TYPE_RESERVED = 0
    , IPMI_SENSOR_TYPE_TEMPERATURE = 1
    , IPMI_SENSOR_TYPE_VOLTAGE = 2
    , IPMI_SENSOR_TYPE_CURRENT = 3
    , IPMI_SENSOR_TYPE_FAN = 4
    , IPMI_SENSOR_TYPE_PHYSICAL_SECURITY = 5
    , IPMI_SENSOR_TYPE_PLATFORM_SECURITY = 6
    , IPMI_SENSOR_TYPE_PROCESSOR = 7
    , IPMI_SENSOR_TYPE_POWER_SUPPLY = 8
    , IPMI_SENSOR_TYPE_POWER_UNIT = 9
    , IPMI_SENSOR_TYPE_COOLING_DEVICE = 10
    , IPMI_SENSOR_TYPE_OTHER_UNITS = 11
    , IPMI_SENSOR_TYPE_MEMORY = 12
    , IPMI_SENSOR_TYPE_DRIVE_SLOT = 13
    , IPMI_SENSOR_TYPE_POST_MEMORY_RESIZE = 14
    , IPMI_SENSOR_TYPE_SYSTEM_FIRM_PROGRESS = 15
    , IPMI_SENSOR_TYPE_EVENT_LOGGING_DISABLED = 16
    , IPMI_SENSOR_TYPE_WATCHDOG_1 = 17
    , IPMI_SENSOR_TYPE_SYSTEM_EVENT = 18
    , IPMI_SENSOR_TYPE_CRITICAL_INTERRUPT = 19
    , IPMI_SENSOR_TYPE_BUTTON_SWITCH = 20
    , IPMI_SENSOR_TYPE_MODULE_BOARD = 21
    , IPMI_SENSOR_TYPE_MICROCONTROLLER = 22
    , IPMI_SENSOR_TYPE_ADD_IN_CARD = 23
    , IPMI_SENSOR_TYPE_CHASSIS = 24
    , IPMI_SENSOR_TYPE_CHIP_SET = 25
    , IPMI_SENSOR_TYPE_OTHER_FRU = 26
    , IPMI_SENSOR_TYPE_CABLE_INTERCONNECT = 27
    , IPMI_SENSOR_TYPE_TERMINATOR = 28
    , IPMI_SENSOR_TYPE_SYSTEM_BOOT_INITIATED = 29
    , IPMI_SENSOR_TYPE_BOOT_ERROR = 30
    , IPMI_SENSOR_TYPE_OS_BOOT = 31
    , IPMI_SENSOR_TYPE_OS_CRITICAL_STOP = 32
    , IPMI_SENSOR_TYPE_SLOT_CONNECTOR = 33
    , IPMI_SENSOR_TYPE_SYSTEM_ACPI = 34
    , IPMI_SENSOR_TYPE_WATCHDOG_2 = 35
    , IPMI_SENSOR_TYPE_PLATFORM_ALERT = 36
    , IPMI_SENSOR_TYPE_ENTITY_PRESENCE = 37
    , IPMI_SENSOR_TYPE_MONITOR_ASIC_IC = 38
    , IPMI_SENSOR_TYPE_LAN = 39
    , IPMI_SENSOR_TYPE_MNGMNT_SUBS_HEALTH = 40
    , IPMI_SENSOR_TYPE_BATTERY = 41
    , IPMI_SENSOR_TYPE_SESSION_AUDIT = 42
    , IPMI_SENSOR_TYPE_VERSION_CHANGE = 43
    , IPMI_SENSOR_TYPE_FRU_STATE = 44
    , IPMI_SENSOR_TYPE_HOT_SWAP = 240
    , IPMI_SENSOR_TYPE_IPMB_LINK = 241
};

enum
{
      IPMI_SENSOR_STATE1_NORMAL = 255    // "Normal";
    , IPMI_SENSOR_STATE1_LOWER_MAJOR_GOING_LOW = 0  // "Major {0} Problem. {0} is decreasing.";
    , IPMI_SENSOR_STATE1_LOWER_MAJOR_GOING_HIGH = 1  // "Major {0} Problem. {0} is increasing.";
    , IPMI_SENSOR_STATE1_LOWER_CRITICAL_GOING_LOW = 2  // "Critical {0} Problem. {0} is decreasing.";
    , IPMI_SENSOR_STATE1_LOWER_CRITICAL_GOING_HIGH = 3  // "Critical {0} Problem. {0} is increasing.";
    , IPMI_SENSOR_STATE1_LOWER_NON_RECOVERABLE_GOING_LOW = 4  // "Non-recoverable {0} Problem. {0} is decreasing.";
    , IPMI_SENSOR_STATE1_LOWER_NON_RECOVERABLE_GOING_HIGH = 5  // "Non-recoverable {0}e Problem. {0} is increasing.";
    , IPMI_SENSOR_STATE1_UPPER_MAJOR_GOING_LOW = 6  // Upper Major {0} Problem. {0} is decreasing.";
    , IPMI_SENSOR_STATE1_UPPER_MAJOR_GOING_HIGH = 7 // "Upper Major {0} Problem. {0} is increasing.";
    , IPMI_SENSOR_STATE1_UPPER_CRITICAL_GOING_LOW = 8 // "Upper Critical {0} Problem. {0} is decreasing.";
    , IPMI_SENSOR_STATE1_UPPER_CRITICAL_GOING_HIGH = 9 // "Upper Critical {0} Problem. {0} is increasing.";
    , IPMI_SENSOR_STATE1_UPPER_NON_RECOVERABLE_GOING_LOW = 10 // "Upper Non-recoverable {0} Problem. {0} is decreasing.";
    , IPMI_SENSOR_STATE1_UPPER_NON_RECOVERABLE_GOING_HIGH = 11 // "Upper Non-recoverable {0} Problem. {0} is increasing."; 
};

#endif

