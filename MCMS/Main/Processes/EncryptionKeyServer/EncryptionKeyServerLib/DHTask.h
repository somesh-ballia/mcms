
#ifndef _DHTASK
#define _DHTASK

#include <map>
#include "TaskApi.h"
#include  "TaskApp.h"
//#include "ConfPartyGlobals.h"
#include "DHTable.h"
//#ifndef __TASKLOAD
//#include <TaskLoad.h>
//#endif



static BYTE polycomPrime[]      = {0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc9,0xf,0xda,0xa2,0x21,0x68,0xc2,0x34,0xc4,0xc6,0x62,0x8b,0x80,0xdc,0x1c,0xd1,0x29,0x2,0x4e,0x8,0x8a,0x67,0xcc,0x74,0x2,0xb,0xbe,0xa6,0x3b,0x13,0x9b,0x22,0x51,0x4a,0x8,0x79,0x8e,0x34,0x4,0xdd,0xef,0x95,0x19,0xb3,0xcd,0x3a,0x43,0x1b,0x30,0x2b,0xa,0x6d,0xf2,0x5f,0x14,0x37,0x4f,0xe1,0x35,0x6d,0x6d,0x51,0xc2,0x45,0xe4,0x85,0xb5,0x76,0x62,0x5e,0x7e,0xc6,0xf4,0x4c,0x42,0xe9,0xa6,0x37,0xed,0x6b,0xb,0xff,0x5c,0xb6,0xf4,0x6,0xb7,0xed,0xee,0x38,0x6b,0xfb,0x5a,0x89,0x9f,0xa5,0xae,0x9f,0x24,0x11,0x7c,0x4b,0x1f,0xe6,0x49,0x28,0x66,0x51,0xec,0xe6,0x53,0x81,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
static BYTE tandbergH320Prime[] = {0xa4,0x78,0x8e,0x21,0x84,0xb8,0xd6,0x8b,0xfe,0x2,0x69,0xe,0x4d,0xbe,0x48,0x5b,0x17,0xa8,0xb,0xc5,0xf2,0x1d,0x68,0xf,0x1a,0x84,0x13,0x13,0x97,0x34,0xf7,0xf2,0xb0,0xdb,0x4e,0x25,0x37,0x50,0x1,0x8a,0xad,0x9e,0x86,0xd4,0x9b,0x60,0x4,0xbb,0xbc,0xf0,0x51,0xf5,0x2f,0xcb,0x66,0xd0,0xc5,0xfc,0xa6,0x3f,0xbf,0xe6,0x34,0x17,0x34,0x85,0xbb,0xbf,0x76,0x42,0xe9,0xdf,0x9c,0x74,0xb8,0x5b,0x68,0x55,0xe9,0x42,0x13,0xb8,0xc2,0xd8,0x91,0x62,0xab,0xef,0xf4,0x34,0x24,0x35,0xe,0x96,0xbe,0x41,0xed,0xd4,0x2d,0xe9,0x9a,0x69,0x61,0x63,0x8c,0x1d,0xac,0x59,0x8b,0xc9,0xd,0xa0,0x69,0xb5,0xc,0x41,0x4d,0x8e,0xb8,0x65,0x2a,0xdc,0xff,0x4a,0x27,0xd,0x56,0x7f};


extern "C" void DHEntryPoint(void* appParam);

class CDiffieHelman : public CTaskApp
{
CLASS_TYPE_1(CDiffieHelman, CTaskApp)
public:

// Constructors
  CDiffieHelman();
 ~CDiffieHelman();

 // Initializations
  void  InitTask();
  BOOL  IsSingleton() const {return YES;}
  void Create(CSegment& appParam);
  void Destroy();
  virtual void  SelfKill();

  // Operations
  virtual const char*  NameOf() const;
  virtual const char * GetTaskName() const;
    virtual int GetTaskPrioirty()const {return 19;}
private:
	//Events
	void OnReqToNewKey(CSegment * pSeg);

	//private methods
	void SendKeyToManager(DWORD fips140Status, BYTE bIsGenKeyFromStartup, DWORD gen,CdhEntry * pDHEntry);
	BOOL IsValidGenerator(DWORD gen)const;

	PDECLAR_MESSAGE_MAP
};


/////////////////////////////////////////////////////////////////////////////
class CDHApi : public CTaskApi
{
CLASS_TYPE_1(CDHApi,CTaskApi )
public:
    							// Constructors
	CDHApi() {};
	~CDHApi() {};

	void  Create(void (*entryPoint)(void*),COsQueue& creatorRcvMbx);
	virtual const char*  NameOf() const;
	void GetNewKey(DWORD gen, BYTE bIsGenKeyFromStartup);
};

#endif /* _DHTASK  */
