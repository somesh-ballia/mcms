// IceMonitor.cpp: implementation of the IceMonitor class.
//
//////////////////////////////////////////////////////////////////////

#include "IceMonitor.h"
#include "TaskApi.h"
#include "Trace.h"
#include "OpcodesMcmsCommon.h"
#include "Macros.h"

////////////////////////////////////////////////////////////////////////////
//               Message Map
////////////////////////////////////////////////////////////////////////////

PBEGIN_MESSAGE_MAP(CIceMonitor)
  ONEVENT(XML_REQUEST    ,IDLE    , CIceMonitor::HandlePostRequest )
PEND_MESSAGE_MAP(CIceMonitor,CAlarmableTask);

////////////////////////////////////////////////////////////////////////////
//               Transaction Map
////////////////////////////////////////////////////////////////////////////

BEGIN_GET_TRANSACTION_FACTORY(CIceMonitor)
//ON_TRANS("TRANS_MCU","LOGIN",COperCfg,CSipIceMonitor::HandleOperLogin)
END_TRANSACTION_FACTORY


////////////////////////////////////////////////////////////////////////////
//               Entry point
////////////////////////////////////////////////////////////////////////////
void IceMonitorEntryPoint(void* appParam)
{  
	CIceMonitor *monitorTask = new CIceMonitor();
	monitorTask->Create(*(CSegment*)appParam);
}

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

CIceMonitor::CIceMonitor()
{

}

CIceMonitor::~CIceMonitor()
{

}


