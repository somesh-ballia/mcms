// DNSAgentMonitor.cpp: implementation of the DNSAgentMonitor class.
//
//////////////////////////////////////////////////////////////////////

#include "DNSAgentMonitor.h"
#include "TaskApi.h"
#include "Trace.h"
#include "OpcodesMcmsCommon.h"
#include "Macros.h"

////////////////////////////////////////////////////////////////////////////
//               Message Map
////////////////////////////////////////////////////////////////////////////

PBEGIN_MESSAGE_MAP(CDNSAgentMonitor)
  ONEVENT(XML_REQUEST    ,IDLE    , CDNSAgentMonitor::HandlePostRequest )
PEND_MESSAGE_MAP(CDNSAgentMonitor,CAlarmableTask);

////////////////////////////////////////////////////////////////////////////
//               Transaction Map
////////////////////////////////////////////////////////////////////////////

BEGIN_GET_TRANSACTION_FACTORY(CDNSAgentMonitor)
//ON_TRANS("TRANS_MCU","LOGIN",COperCfg,CDNSAgentMonitor::HandleOperLogin)
END_TRANSACTION_FACTORY


////////////////////////////////////////////////////////////////////////////
//               Entry point
////////////////////////////////////////////////////////////////////////////
void DNSAgentMonitorEntryPoint(void* appParam)
{  
	CDNSAgentMonitor *monitorTask = new CDNSAgentMonitor();
	monitorTask->Create(*(CSegment*)appParam);
}

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

CDNSAgentMonitor::CDNSAgentMonitor()
{

}

CDNSAgentMonitor::~CDNSAgentMonitor()
{

}


