// SipProxyMonitor.cpp: implementation of the SipProxyMonitor class.
//
//////////////////////////////////////////////////////////////////////

#include "SipProxyMonitor.h"
#include "TaskApi.h"
#include "Trace.h"
#include "OpcodesMcmsCommon.h"
#include "Macros.h"

////////////////////////////////////////////////////////////////////////////
//               Message Map
////////////////////////////////////////////////////////////////////////////

PBEGIN_MESSAGE_MAP(CSipProxyMonitor)
  ONEVENT(XML_REQUEST    ,IDLE    , CSipProxyMonitor::HandlePostRequest )
PEND_MESSAGE_MAP(CSipProxyMonitor,CAlarmableTask);

////////////////////////////////////////////////////////////////////////////
//               Transaction Map
////////////////////////////////////////////////////////////////////////////

BEGIN_GET_TRANSACTION_FACTORY(CSipProxyMonitor)
//ON_TRANS("TRANS_MCU","LOGIN",COperCfg,CSipProxyMonitor::HandleOperLogin)
END_TRANSACTION_FACTORY


////////////////////////////////////////////////////////////////////////////
//               Entry point
////////////////////////////////////////////////////////////////////////////
void SipProxyMonitorEntryPoint(void* appParam)
{  
	CSipProxyMonitor *monitorTask = new CSipProxyMonitor();
	monitorTask->Create(*(CSegment*)appParam);
}

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

CSipProxyMonitor::CSipProxyMonitor()
{

}

CSipProxyMonitor::~CSipProxyMonitor()
{

}


