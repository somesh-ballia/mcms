// TestClientMonitor.cpp: implementation of the TestClientMonitor class.
//
//////////////////////////////////////////////////////////////////////

#include "TestClientMonitor.h"
#include "TaskApi.h"
#include "OpcodesMcmsCommon.h"
#include "LogInConfirm.h"
#include "Request.h"
#include "OperCfg.h"
#include "DummyEntry.h"
#include "Macros.h"
#include "StatusesGeneral.h"


////////////////////////////////////////////////////////////////////////////
//               Message Map
////////////////////////////////////////////////////////////////////////////

PBEGIN_MESSAGE_MAP(CTestClientMonitor)
  ONEVENT(XML_REQUEST    ,IDLE    ,  CTestClientMonitor::HandlePostRequest)
PEND_MESSAGE_MAP(CTestClientMonitor,CAlarmableTask);

////////////////////////////////////////////////////////////////////////////
//               Transaction Map
////////////////////////////////////////////////////////////////////////////

BEGIN_GET_TRANSACTION_FACTORY(CTestClientMonitor)
ON_TRANS("TRANS_MCU","LOGIN",COperCfg,CTestClientMonitor::HandleOperLogin)
END_TRANSACTION_FACTORY


////////////////////////////////////////////////////////////////////////////
//               Entry point
////////////////////////////////////////////////////////////////////////////
void TestClientMonitorEntryPoint(void* appParam)
{  
	CTestClientMonitor *monitorTask = new CTestClientMonitor;
	monitorTask->Create(*(CSegment*)appParam);
}

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
CTestClientMonitor::CTestClientMonitor()
{

}

//////////////////////////////////////////////////////////////////////
CTestClientMonitor::~CTestClientMonitor()
{

}

//////////////////////////////////////////////////////////////////////
STATUS CTestClientMonitor::HandleOperLogin(CRequest *p)
{
	const COperCfg* pCOperCfg = (const COperCfg*) p->GetRequestObject();
//	PASSERT(pCOperCfg == NULL)

	p->SetConfirmObject(new CLogInConfirm(TRUE, TRUE));

	return STATUS_OK;
}


