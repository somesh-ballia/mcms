// OpcodeStringConverter.cpp

#include "OpcodeStringConverter.h"

#include "OpcodesRanges.h"
#include "IpCsOpcodes.h"
#include "IpMfaOpcodes.h"
#include "IpMngrOpcodes.h"
#include "OpcodesMcmsCommon.h"
#include "OpcodesMcmsInternal.h"
#include "OpcodesMcmsCardMngrMaintenance.h"
#include "OpcodesMcmsCardMngrIvrCntl.h"
#include "OpcodesMcmsCardMngrRecording.h"
#include "OpcodesMcmsCardMngrTB.h"
#include "OpcodesMcmsAudio.h"
#include "OpcodesMcmsAudioCntl.h"
#include "OpcodesMcmsVideo.h"
#include "OpcodesMcmsShelfMngr.h"
#include "OpcodesMcmsCardMngrIpMedia.h"
#include "OpcodesMcmsRtmIsdnMaintenance.h"
#include "ConfigManagerOpcodes.h"
#include "ApiStatuses.h"
#include "IPMCInterfaceOpcodes.h"
#include "OpcodesMcmsNetQ931.h"
#include "SimApi.h"
#include "OpcodesMcmsBonding.h"
#include "OpcodesMcmsMux.h"
#include "SystemFunctions.h"
#include "SocketApi.h"
#include "Opcodes802_1x.h"

#include "TraceStream.h"
#include "OpcodesMcmsCardMngrICE.h"
#include "OpcodesMcmsPCM.h"
#include "OpcodesMcmsCardMngrTIP.h"
#include "OpcodesMcmsCardMngrBFCP.h"
#include "OpcodesMrmcCardMngrMrc.h"

#define ADD_OPCODE(opcode) (AddOpcodeString(opcode, #opcode))

COpcodeStringConverter::COpcodeStringConverter()
{
  InitAllOpcodeString();
}

void COpcodeStringConverter::AddOpcodeString(OPCODE opcode,
                                             const std::string& str)
{
  Add(opcode, str);
}

const std::string& COpcodeStringConverter::GetStringByOpcode(OPCODE opcode)
{
  return GetStr(opcode);
}

void COpcodeStringConverter::InitAllOpcodeString()
{
  InitOpcodeStringCommon();
  InitOpcodeStringProcessApacheModule();
  InitOpcodeStringProcessAuditor();
  InitOpcodeStringProcessAuthentication();
  InitOpcodeStringProcessBackupRestore();
  InitOpcodeStringProcessCards();
  InitOpcodeStringProcessCDR();
  InitOpcodeStringProcessCertMngr();
  InitOpcodeStringProcessClientLogger();
  InitOpcodeStringProcessCollector();
  InitOpcodeStringProcessConfigurator();
  InitOpcodeStringProcessConfParty();
  InitOpcodeStringProcessCS();
  InitOpcodeStringProcessCSApi();
  InitOpcodeStringProcessCSMngr();
  InitOpcodeStringProcessDemo();
  InitOpcodeStringProcessDiagnostics();
  InitOpcodeStringProcessDNSAgent();
  InitOpcodeStringProcessEncryptionKeyServer();
  InitOpcodeStringProcessEndpointsSim();
  InitOpcodeStringProcessExchangeModule();
  InitOpcodeStringProcessFailover();
  InitOpcodeStringProcessGideonSim();
  InitOpcodeStringProcessGatekeeper();
  InitOpcodeStringProcessInstaller();
  InitOpcodeStringProcessIPMCInterface();
  InitOpcodeStringProcessLdapModule();
  InitOpcodeStringProcessLogger();
  InitOpcodeStringProcessMcmsDaemon();
  InitOpcodeStringProcessMcmsFaults();
  InitOpcodeStringProcessMcuCmd();
  InitOpcodeStringProcessMcuMngr();
  InitOpcodeStringProcessMediaMngr();
  InitOpcodeStringProcessMplApi();
  InitOpcodeStringProcessQAAPI();
  InitOpcodeStringProcessResource();
  InitOpcodeStringProcessRtmIsdnMngr();
  InitOpcodeStringProcessSipProxy();
  InitOpcodeStringProcessSNMPProcess();
  InitOpcodeStringProcessSystemMonitoring();
  InitOpcodeStringProcessTestClient();
  InitOpcodeStringProcessTestServer();
  InitOpcodeStringProcessUtility();
  InitOpcodeStringProcessMCCFMngr();
  InitOpcodeStringProcessLicenseServer();
}

void COpcodeStringConverter::InitOpcodeStringCommon()
{
  ADD_OPCODE(TASK_CHANGE_STATE_FAULT_IND);
  ADD_OPCODE(DESTROY);
  ADD_OPCODE(TIMER);
  ADD_OPCODE(SET_SYS_ID);
  ADD_OPCODE(TERMINAL_COMMAND);
  ADD_OPCODE(TRACE_MESSAGE);
  ADD_OPCODE(STARTUP_EVENT);
  ADD_OPCODE(MANAGER_ALIVE);
  ADD_OPCODE(KILLED_BY_TWIN);
  ADD_OPCODE(CLOSE_SOCKET_BY_TWIN);
  ADD_OPCODE(RESETMCU_REQUEST);
  ADD_OPCODE(OPEN_SOCKET_CONNECTION);
  ADD_OPCODE(CLOSE_SOCKET_CONNECTION);
  ADD_OPCODE(CS_GKMNGR_IP_SERVICE_PARAM_REQ);
  ADD_OPCODE(TO_MCUMNGR_STATE_CHANGED);
  ADD_OPCODE(MCUMNGR_TO_ALL_PROCESSES_STATE_REQ);
  ADD_OPCODE(DNSAGENT_MCUMNGR_CONFIGURATION_REQ);
  ADD_OPCODE(SIPPROXY_MCUMNGR_CONFIGURATION_REQ);
  ADD_OPCODE(SIPPROXY_MCUMNGR_CONFIGURATION_IND);
  ADD_OPCODE(SIPPROXY_CONFIG_CS_IND);
  ADD_OPCODE(INSTALLER_TO_MCUMNGR_CFS_PARAMS_REQ);
  ADD_OPCODE(MCUMNGR_TO_CDR_PARAMS_IND);
  ADD_OPCODE(XML_REQUEST);
  ADD_OPCODE(INFORM_HTTP_GET_FILE);
  ADD_OPCODE(XML_RESPONSE);
  ADD_OPCODE(REMOVE_ALL_AA);
  ADD_OPCODE(SET_ENABLE_DISABLE_AA);
  ADD_OPCODE(SYNC_TERMINAL_COMMAND);
  ADD_OPCODE(IS_STARTUP_FINISHED_TIMER);
  ADD_OPCODE(PROCESS_CPU_USAGE_TIMER);
  ADD_OPCODE(MANAGER_STARTUP_TIMER);
  ADD_OPCODE(PROCESS_IDLE_TIMER);
  ADD_OPCODE(PROCESS_MEMORY_USAGE_TIMER);
  ADD_OPCODE(SOCKET_CONNECTED);
  ADD_OPCODE(SOCKET_FAILED);
  ADD_OPCODE(SOCKET_DROPPED);
  ADD_OPCODE(SOCKET_WRITE);
  ADD_OPCODE(SOCKET_RCV_MSG);
  ADD_OPCODE(SOCKET_CONNECT);
  ADD_OPCODE(SOCKET_SND_MSG);
  ADD_OPCODE(RESUME_SOCKET);
  ADD_OPCODE(PAUSE_SOCKET);
  ADD_OPCODE(SOCKET_CORRUPTED_MSG);
  ADD_OPCODE(SYSTEM_MONITORING_MCUMNGR_CPU_INFO);


  AddOpcodeString(1008/*WATCH_DOG_TIMER*/, "WATCH_DOG_TIMER");
}


void COpcodeStringConverter::InitOpcodeStringProcessApacheModule()
{
  ADD_OPCODE(APACHE_MODULE_INTERNAL_MCMS_FIRST_OPCODE);
  ADD_OPCODE(APACHE_MODULE_AUTHENTICATION_STRUCT_AND_LICENSING_REQ);
  ADD_OPCODE(INSTALLER_FIPS_140_TEST_RESULT_IND);
  ADD_OPCODE(ENCRYPTION_KEY_SERVER_FIPS_140_TEST_RESULT_IND);
  ADD_OPCODE(HTTPD_TO_CERTMNGR_LINK_FILE);
  ADD_OPCODE(APACHE_MODULE_INTERNAL_MCMS_LAST_OPCODE);
}

void COpcodeStringConverter::InitOpcodeStringProcessAuditor()
{
  ADD_OPCODE(AUDIT_FILE_SYSTEM_WARNING_TIMER);
}

void COpcodeStringConverter::InitOpcodeStringProcessAuthentication()
{
  ADD_OPCODE(AUTHENTICATION_FIRST_OPCODE_IN_RANGE);
  ADD_OPCODE(AUTHENTICATION_USERS_LIST_REQ);
  ADD_OPCODE(DAILY_TIMER_TOUT);
  ADD_OPCODE(AUTHETICATION_FIRST_JITC_TIMER);
  ADD_OPCODE(LOCK_TIMER_TOUT);
  AddOpcodeString(SWITCH_LDAP_LOGIN_REQ, "SWITCH_LDAP_LOGIN_REQ");
  ADD_OPCODE(AUTHENTICATION_LAST_OPCODE_IN_RANGE);
}

void COpcodeStringConverter::InitOpcodeStringProcessBackupRestore()
{
  ADD_OPCODE(BACKUP_TIMEOUT);
  ADD_OPCODE(RESTORE_TIMEOUT);
  ADD_OPCODE(BACKUP_INPROGRESS_REQ);
  ADD_OPCODE(RESTORE_INPROGRESS_REQ);
  ADD_OPCODE(BACKUP_START);
}

#ifndef RESCUE_CARD_REQ
#define  RESCUE_CARD_REQ                             5010018
#endif

void COpcodeStringConverter::InitOpcodeStringProcessCards()
{
	AddOpcodeString(CARDS_FIRST_OPCODE_IN_RANGE     			, "CARDS_FIRST_OPCODE_IN_RANGE");
	AddOpcodeString(RSRCALLOC_UNIT_CONFIG_REQ               	, "RSRCALLOC_UNIT_CONFIG_REQ");
	AddOpcodeString(CM_UNIT_CONFIG_REQ                      	, "CM_UNIT_CONFIG_REQ");
	AddOpcodeString(CM_CS_EXTERNAL_IP_CONFIG_REQ               	, "CM_CS_EXTERNAL_IP_CONFIG_REQ");
	AddOpcodeString(CM_CS_INTERNAL_IP_CONFIG_REQ               	, "CM_CS_INTERNAL_IP_CONFIG_REQ");
	AddOpcodeString(CM_MEDIA_CONFIGURATION_COMPLETED_REQ        , "CM_MEDIA_CONFIGURATION_COMPLETED_REQ");
	AddOpcodeString(CM_MEDIA_CONFIGURATION_COMPLETED_IND        , "CM_MEDIA_CONFIGURATION_COMPLETED_IND");
	AddOpcodeString(CM_MEDIA_IP_CONFIG_REQ                  	, "CM_MEDIA_IP_CONFIG_REQ");
	AddOpcodeString(RSRCALLOC_IP_CONFIG_FAIL_IND				, "RSRCALLOC_IP_CONFIG_FAIL_IND");// for DUP_IP
	AddOpcodeString(CM_RTM_MEDIA_IP_CONFIG_REQ                  , "CM_RTM_MEDIA_IP_CONFIG_REQ");
	AddOpcodeString(CM_MEDIA_IP_CONFIG_END_REQ              	, "CM_MEDIA_IP_CONFIG_END_REQ");
	AddOpcodeString(CM_KEEP_ALIVE_REQ                       	, "CM_KEEP_ALIVE_REQ");
	AddOpcodeString(CM_DNAT_CONFIG_REQ                       	, "CM_DNAT_CONFIG_REQ");
	AddOpcodeString(ART_FIPS_140_REQ                         	, "ART_FIPS_140_REQ");
	AddOpcodeString(RSRCALLOC_UNIT_CONFIG_IND               	, "RSRCALLOC_UNIT_CONFIG_IND");
	AddOpcodeString(CARD_CONFIG_REQ               				, "CARD_CONFIG_REQ");//2 modes cop/cp
	AddOpcodeString(CM_DNS_MEDIA_CONFIG_REQ               		, "CM_DNS_MEDIA_CONFIG_REQ");
	AddOpcodeString(CM_UNIT_LOADED_IND                      	, "CM_UNIT_LOADED_IND");
	AddOpcodeString(CM_MEDIA_IP_CONFIG_IND                  	, "CM_MEDIA_IP_CONFIG_IND");
	AddOpcodeString(CM_KEEP_ALIVE_IND                       	, "CM_KEEP_ALIVE_IND");
	AddOpcodeString(CM_CARD_MNGR_LOADED_IND                 	, "CM_CARD_MNGR_LOADED_IND");
	AddOpcodeString(ART_FIPS_140_IND                 			, "ART_FIPS_140_IND");
	AddOpcodeString(CM_DELETE_IP_SERVICE_REQ					, "CM_DELETE_IP_SERVICE_REQ");
	AddOpcodeString(SM_KEEP_ALIVE_REQ							, "SM_KEEP_ALIVE_REQ");
	AddOpcodeString(CM_DELETE_IP_SERVICE_IND					, "CM_DELETE_IP_SERVICE_IND");
	AddOpcodeString(SM_FATAL_FAILURE_IND						, "SM_FATAL_FAILURE_IND");
	AddOpcodeString(SM_KEEP_ALIVE_IND							, "SM_KEEP_ALIVE_IND");
	AddOpcodeString(SM_MFA_FAILURE_IND							, "SM_MFA_FAILURE_IND");
	AddOpcodeString(CARDS_NEW_MEDIA_IP_IND						, "CARDS_NEW_MEDIA_IP_IND");
	AddOpcodeString(CM_CARD_MNGR_RECONNECT_IND					, "CM_CARD_MNGR_RECONNECT_IND");
	AddOpcodeString(SM_CARD_MNGR_RECONNECT_IND					, "SM_CARD_MNGR_RECONNECT_IND");
	AddOpcodeString(CARDS_RESTART_AUTHENTICATION_PROCEDURE_REQ	, "CARDS_RESTART_AUTHENTICATION_PROCEDURE_REQ");
	AddOpcodeString(SLOTS_NUMBERING_CONVERSION_REQ				, "SLOTS_NUMBERING_CONVERSION_REQ");
	AddOpcodeString(SLOTS_NUMBERING_CONVERSION_IND				, "SLOTS_NUMBERING_CONVERSION_IND");
	AddOpcodeString(CARDS_LAST_OPCODE_IN_RANGE					, "CARDS_LAST_OPCODE_IN_RANGE");
	AddOpcodeString(CARDS_RSRC_MFA_STARTUP_COMPLETE_IND			, "CARDS_RSRC_MFA_STARTUP_COMPLETE_IND");
	AddOpcodeString(CARDS_RSRC_IVR_MOUNT_READ_STATUS_IND		, "CARDS_RSRC_IVR_MOUNT_READ_STATUS_IND");
	AddOpcodeString(MFA_STARTUP_TIMER							, "MFA_STARTUP_TIMER");
	AddOpcodeString(CM_CARD_FOLDER_MOUNT_IND					, "CM_CARD_FOLDER_MOUNT_IND");
	AddOpcodeString(CM_IVR_FOLDER_MOUNT_IND						, "CM_IVR_FOLDER_MOUNT_IND");
	AddOpcodeString(CARDS_NOT_READY_REQ							, "CARDS_NOT_READY_REQ");
	AddOpcodeString(MFA_TASK_NOT_CREATED_REQ					, "MFA_TASK_NOT_CREATED_REQ");
	AddOpcodeString(DEBUG_MODE_YES_REQ							, "DEBUG_MODE_YES_REQ");
	AddOpcodeString(DEBUG_MODE_NO_REQ							, "DEBUG_MODE_NO_REQ");
	AddOpcodeString(CM_UPGRADE_NEW_VERSION_READY_REQ					, "CM_UPGRADE_NEW_VERSION_READY_REQ");
	AddOpcodeString(CM_UPGRADE_NEW_VERSION_READY_ACK_IND      				, "CM_UPGRADE_NEW_VERSION_READY_ACK_IND");
	AddOpcodeString(CM_UPGRADE_PROGRESS_IND					, "CM_UPGRADE_PROGRESS_IND");
	AddOpcodeString(CM_UPGRADE_IPMC_IND 					, "CM_UPGRADE_IPMC_IND");
	AddOpcodeString(CM_UPGRADE_START_WRITE_IPMC_REQ				, "CM_UPGRADE_START_WRITE_IPMC_REQ");
	AddOpcodeString(CM_UPGRADE_IPMC_PROGRESS_IND				, "CM_UPGRADE_IPMC_PROGRESS_IND");
	AddOpcodeString(SYSCFG_PARAMS_REQ					, "SYSCFG_PARAMS_REQ");
	AddOpcodeString(OLD_SYSCFG_PARAMS_IND						, "OLD_SYSCFG_PARAMS_IND");
	AddOpcodeString(RESET_CARD_REQ								, "RESET_CARD_REQ");
	AddOpcodeString(RESCUE_CARD_REQ								, "RESCUE_CARD_REQ");
	AddOpcodeString(STARTUP_DEBUG_RECORDING_PARAM_REQ			, "STARTUP_DEBUG_RECORDING_PARAM_REQ");
	AddOpcodeString(START_DEBUG_RECORDING_REQ					, "START_DEBUG_RECORDING_REQ");
	AddOpcodeString(STOP_ALL_DEBUG_RECORDING_REQ				, "STOP_ALL_DEBUG_RECORDING_REQ");
	AddOpcodeString(RSRC_SYSTEM_MEDIA_RECORDING_REQ   			, "RSRC_SYSTEM_MEDIA_RECORDING_REQ");
	AddOpcodeString(COLLECTOR_COLLECTING_INFO_REQ  				, "COLLECTOR_COLLECTING_INFO_REQ");
	AddOpcodeString(SPEC_MFA_ACTIVE_ALARMS_REQ  				, "SPEC_MFA_ACTIVE_ALARMS_REQ");
	AddOpcodeString(SPEC_MFA_ACTIVE_ALARMS_IND  				, "SPEC_MFA_ACTIVE_ALARMS_IND");
	AddOpcodeString(BAD_SPONTANEOUS_IND  						, "BAD_SPONTANEOUS_IND");
	AddOpcodeString(EMB_USER_MSG_IND  							, "EMB_USER_MSG_IND");
	AddOpcodeString(HOT_SWAP_RTM_REMOVED  						, "HOT_SWAP_RTM_REMOVED");
	AddOpcodeString(CARD_REMOVED_IND			  				, "CARD_REMOVED_IND	");
	AddOpcodeString(SYSTEM_CARDS_MODE_STARTUP_TIMER				, "SYSTEM_CARDS_MODE_STARTUP_TIMER");
	AddOpcodeString(MFA_TASK_ALREADY_EXIST_TIMER				, "MFA_TASK_ALREADY_EXIST_TIMER");
	AddOpcodeString(MFA1_HOT_SWAP_TIMER				, "MFA1_HOT_SWAP_TIMER");
	AddOpcodeString(MFA2_HOT_SWAP_TIMER				, "MFA2_HOT_SWAP_TIMER");
	AddOpcodeString(MFA3_HOT_SWAP_TIMER				, "MFA3_HOT_SWAP_TIMER");
	AddOpcodeString(MFA4_HOT_SWAP_TIMER				, "MFA4_HOT_SWAP_TIMER");
	AddOpcodeString(RESOURCE_SYSTEM_CARDS_MODE_REQ				, "RESOURCE_SYSTEM_CARDS_MODE_REQ");
	AddOpcodeString(CONFPARTY_SYSTEM_CARDS_MODE_REQ				, "CONFPARTY_SYSTEM_CARDS_MODE_REQ");
//	AddOpcodeString(SYSTEM_CARDS_MODE_REQ						, "SYSTEM_CARDS_MODE_REQ");
	AddOpcodeString(MCMS_SYSTEM_CARDS_MODE_IND					, "MCMS_SYSTEM_CARDS_MODE_IND");
	AddOpcodeString(RESOURCE_UNIT_RECONFIG_REQ					, "RESOURCE_UNIT_RECONFIG_REQ");
	AddOpcodeString(RESOURCE_UNIT_RECONFIG_IND					, "RESOURCE_UNIT_RECONFIG_IND");
	AddOpcodeString(SM_COMP_SLOT_ID_IND							, "SM_COMP_SLOT_ID_IND");
	AddOpcodeString(CARDS_SLOTS_NUMBERING_CONVERSION_TABLE_IND	, "CARDS_SLOTS_NUMBERING_CONVERSION_TABLE_IND");

	AddOpcodeString(CARDS_RESET_MFA_REQ							, "CARDS_RESET_MFA_REQ");
	AddOpcodeString(CM_UNIT_RECONFIG_REQ						, "CM_UNIT_RECONFIG_REQ");
	AddOpcodeString(CM_UNIT_RECONFIG_IND						, "CM_UNIT_RECONFIG_IND");
	AddOpcodeString(SYSTEM_CARDS_MODE_REQ						, "SYSTEM_CARDS_MODE_REQ");
	AddOpcodeString(IVR_MUSIC_ADD_SOURCE_RECEIVED_IND			, "IVR_MUSIC_ADD_SOURCE_RECEIVED_IND");

	AddOpcodeString(BOARDS_EXPECTED_IND							, "BOARDS_EXPECTED_IND");
    AddOpcodeString(RESTART_STARTUP_TIMER						, "RESTART_STARTUP_TIMER");
    AddOpcodeString(UPDATE_SYSTEM_STARTUP_DURATION_IND			, "UPDATE_SYSTEM_STARTUP_DURATION_IND");

	AddOpcodeString(ETHERNET_SETTINGS_ACTIVE_PORTS_SWITCH_IND		, "ETHERNET_SETTINGS_ACTIVE_PORTS_SWITCH_IND");
	AddOpcodeString(ETHERNET_SETTINGS_MONITORING_SWITCH_IND			, "ETHERNET_SETTINGS_MONITORING_SWITCH_IND");
	AddOpcodeString(ETHERNET_SETTINGS_CLEAR_MAX_COUNTERS_SWITCH_IND	, "ETHERNET_SETTINGS_CLEAR_MAX_COUNTERS_SWITCH_IND");
	AddOpcodeString(ETHERNET_SETTINGS_ACTIVE_PORTS_SWITCH_REQ		, "ETHERNET_SETTINGS_ACTIVE_PORTS_SWITCH_REQ");
	AddOpcodeString(ETHERNET_SETTINGS_MONITORING_SWITCH_REQ			, "ETHERNET_SETTINGS_MONITORING_SWITCH_REQ");
	AddOpcodeString(ETHERNET_SETTINGS_CLEAR_MAX_COUNTERS_SWITCH_REQ	, "ETHERNET_SETTINGS_CLEAR_MAX_COUNTERS_SWITCH_REQ");
	AddOpcodeString(ETHERNET_SETTINGS_IND							, "ETHERNET_SETTINGS_IND");
	AddOpcodeString(ETHERNET_SETTINGS_CLEAR_MAX_COUNTERS_REQ		, "ETHERNET_SETTINGS_CLEAR_MAX_COUNTERS_REQ");
	AddOpcodeString(ETHERNET_SETTINGS_CLEAR_MAX_COUNTERS_IND		, "ETHERNET_SETTINGS_CLEAR_MAX_COUNTERS_IND");
	
	AddOpcodeString(IS_USER_EXIST_ON_ACTIVE_DIRECTORY_IND			, "IS_USER_EXIST_ON_ACTIVE_DIRECTORY_IND");
	AddOpcodeString(IS_USER_EXIST_ON_ACTIVE_DIRECTORY_REQ			, "IS_USER_EXIST_ON_ACTIVE_DIRECTORY_REQ");
	AddOpcodeString(ACTIVE_DIRECTORY_STATUS_REQ					, "ACTIVE_DIRECTORY_STATUS_REQ");
	
	
	AddOpcodeString(UPGRADE_STARTED_IND ,"UPGRADE_STARTED_IND");

	// rtmIsdn related opcodes
	AddOpcodeString(RTM_ISDN_PARAMETERS_REQ						, "RTM_ISDN_PARAMETERS_REQ");
	AddOpcodeString(RTM_ISDN_SPAN_CONFIG_REQ					, "RTM_ISDN_SPAN_CONFIG_REQ");
	AddOpcodeString(RTM_ISDN_SPAN_DISABLE_REQ					, "RTM_ISDN_SPAN_DISABLE_REQ");
	AddOpcodeString(RTM_ISDN_SPAN_STATUS_IND					, "RTM_ISDN_SPAN_STATUS_IND");
	AddOpcodeString(RTM_ISDN_KEEP_ALIVE_REQ						, "RTM_ISDN_KEEP_ALIVE_REQ");
	AddOpcodeString(RTM_ISDN_KEEP_ALIVE_IND						, "RTM_ISDN_KEEP_ALIVE_IND");
	AddOpcodeString(RTM_ISDN_VLAN_ID_REQ						, "RTM_ISDN_VLAN_ID_REQ");

	// ice related opcodes
	AddOpcodeString(ICE_INIT_REQ								, "ICE_INIT_REQ");
	AddOpcodeString(ICE_INIT_IND								, "ICE_INIT_IND");
	AddOpcodeString(ICE_INIT_TIMER								, "ICE_INIT_TIMER");
	AddOpcodeString(ICE_INIT_IND_RECEIVED, "ICE_INIT_IND_RECEIVED");
	AddOpcodeString(ICE_STATUS_IND_RECEIVED, "ICE_STATUS_IND_RECEIVED"); //N.A. DEBUG
	AddOpcodeString(CARDS_TO_CS_ICE_DETAILS						, "CARDS_TO_CS_ICE_DETAILS");
	AddOpcodeString(CARDS_TO_UTILITY_START_TCP_DUMP_STATUS      ,"CARDS_TO_UTILITY_START_TCP_DUMP_STATUS");
	AddOpcodeString(CARDS_TO_UTILITY_STOP_TCP_DUMP_STATUS     ,"CARDS_TO_UTILITY_STOP_TCP_DUMP_STATUS");

	AddOpcodeString(SET_LOG_LEVEL_REQ, "SET_LOG_LEVEL_REQ");
	AddOpcodeString(SET_LOG_LEVEL_IND, "SET_LOG_LEVEL_IND");
	AddOpcodeString(NACK_LOG_LEVEL_OUT_OF_RANGE, "NACK_LOG_LEVEL_OUT_OF_RANGE");

	AddOpcodeString(RTM_LANS_AND_ISDN_SLOT_IND , "RTM_LANS_AND_ISDN_SLOT_IND");
	AddOpcodeString(MODE_DETECTION_IND, "MODE_DETECTION_IND");
	AddOpcodeString(CARDS_SIPPROXY_ICE_INIT_IND, "CARDS_SIPPROXY_ICE_INIT_IND");

	AddOpcodeString(RTM_LANS_IND, "RTM_LANS_IND");
	AddOpcodeString(CARDS_LICENSE_IND, "CARDS_LICENSE_IND");

	AddOpcodeString(MPL_SW_SET_NTP_DSCP_REQ, "MPL_SW_SET_NTP_DSCP_REQ");
}

void COpcodeStringConverter::InitOpcodeStringProcessCDR()
{
  ADD_OPCODE(CDR_FILE_SYSTEM_WARNING_TIMER);
}

void COpcodeStringConverter::InitOpcodeStringProcessCertMngr()
{
  ADD_OPCODE(CERTMNGR_TO_MCUMNGR_CERTIFICATE_UPDATE_IND);
  ADD_OPCODE(CERTMNGR_GET_CERT_DETAILS);
  ADD_OPCODE(CERTMNGR_VERIFY_CERTIFICATE);
  ADD_OPCODE(CERTMNGR_REMOVE_ACTIVE_ALARM);
  ADD_OPCODE(STATUS_CAN_NOT_SECURE_CONNECTION_WITHOUT_CERTIFICATE);
}

void COpcodeStringConverter::InitOpcodeStringProcessClientLogger()
{}

void COpcodeStringConverter::InitOpcodeStringProcessCollector()
{
  ADD_OPCODE(COLLECTOR_PROCESS_INFO_REQ);
  ADD_OPCODE(COLLECT_INFO_REQ);
}

void COpcodeStringConverter::InitOpcodeStringProcessConfigurator()
{
	AddOpcodeString(CONFIGURATOR_ADD_USER, "CONFIGURATOR_ADD_USER");
	AddOpcodeString(CONFIGURATOR_REMOVE_IP_INTERFACE, "CONFIGURATOR_REMOVE_IP_INTERFACE");
	AddOpcodeString(CONFIGURATOR_GET_NEW_VERSION_NUMBER, "CONFIGURATOR_GET_NEW_VERSION_NUMBER");
	AddOpcodeString(CONFIGURATOR_DNS_SERVIER, "CONFIGURATOR_DNS_SERVIER");
	AddOpcodeString(CONFIGURATOR_RUN_DHCP, "CONFIGURATOR_RUN_DHCP");
	AddOpcodeString(CONFIGURATOR_REMOUNT_VERSIONS, "CONFIGURATOR_REMOUNT_VERSIONS");
	AddOpcodeString(CONFIGURATOR_REMOUNT_PARTITION, "CONFIGURATOR_REMOUNT_PARTITION");
	AddOpcodeString(CONFIGURATOR_CYCLE_VERSION, "CONFIGURATOR_CYCLE_VERSION");
	AddOpcodeString(CONFIGURATOR_ENABLE_DISABLE_PING, "CONFIGURATOR_ENABLE_DISABLE_PING");
	AddOpcodeString(CONFIGURATOR_ENABLE_DISABLE_PING_BROADCAST, "CONFIGURATOR_ENABLE_DISABLE_PING_BROADCAST");
	AddOpcodeString(CONFIGURATOR_DEL_USER, "CONFIGURATOR_DEL_USER");
	AddOpcodeString(CONFIGURATOR_CHANGE_PASSWORD, "CONFIGURATOR_CHANGE_PASSWORD");
	AddOpcodeString(CONFIGURATOR_ADD_VLAN_INTERFACE, "CONFIGURATOR_ADD_VLAN_INTERFACE");
	AddOpcodeString(CONFIGURATOR_RESTART_APACHE, "CONFIGURATOR_RESTART_APACHE");

	AddOpcodeString(CONFIGURATOR_FINISH_SYNC_OPER_DB, "CONFIGURATOR_FINISH_SYNC_OPER_DB");
	AddOpcodeString(CONFIGURATOR_SYNC_TIME, "CONFIGURATOR_SYNC_TIME");
	AddOpcodeString(CONFIGURATOR_TEST_DMA, "CONFIGURATOR_TEST_DMA");
	AddOpcodeString(CONFIGURATOR_TEST_ETH_SETTINGS, "CONFIGURATOR_TEST_ETH_SETTINGS");
	AddOpcodeString(CONFIGURATOR_NTP_PEER_STATUS, "CONFIGURATOR_NTP_PEER_STATUS");
	AddOpcodeString(CONFIGURATOR_SET_ETH_SETTINGS, "CONFIGURATOR_SET_ETH_SETTINGS");
	AddOpcodeString(CONFIGURATOR_GET_SMART_ERRORS, "CONFIGURATOR_GET_SMART_ERRORS");
	AddOpcodeString(CONFIGURATOR_RUN_SMART_SELFTEST, "CONFIGURATOR_RUN_SMART_SELFTEST");
	AddOpcodeString(CONFIGURATOR_KILL_DHCP, "CONFIGURATOR_KILL_DHCP");
	AddOpcodeString(CONFIGURATOR_GET_DHCP, "CONFIGURATOR_GET_DHCP");
	AddOpcodeString(CONFIGURATOR_NS_UPDATE, "CONFIGURATOR_NS_UPDATE");
	AddOpcodeString(CONFIGURATOR_RESTART_SSHD, "CONFIGURATOR_RESTART_SSHD");
	AddOpcodeString(CONFIGURATOR_SET_TCP_STACK_PARAMS, "CONFIGURATOR_SET_TCP_STACK_PARAMS");
	AddOpcodeString(STATUS_NTP_PEER_SYS_PEER, "STATUS_NTP_PEER_SYS_PEER");
	AddOpcodeString(STATUS_NTP_PEER_CANDIDAT, "STATUS_NTP_PEER_CANDIDAT");
	AddOpcodeString(CONFIGURATOR_GET_HD_TEMPERATURE, "CONFIGURATOR_GET_HD_TEMPERATURE");
	AddOpcodeString(CONFIGURATOR_WRITE_FILE, "CONFIGURATOR_WRITE_FILE");
	AddOpcodeString(CONFIGURATOR_WRITE_FILE_ROOT_ONLY, "CONFIGURATOR_WRITE_FILE_ROOT_ONLY");	
	AddOpcodeString(CONFIGURATOR_KILL_SSHD, "CONFIGURATOR_KILL_SSHD");

	// 19000002
	AddOpcodeString(CONFIGURATOR_ADD_IP_INTERFACE,			"CONFIGURATOR_ADD_IP_INTERFACE");
	// 19000028
	AddOpcodeString(CONFIGURATOR_RESTART_SNMPD,				"CONFIGURATOR_RESTART_SNMPD");
	// 19000029
	AddOpcodeString(CONFIGURATOR_START_SNMPD,				"CONFIGURATOR_START_SNMPD");
	// 19000030
	AddOpcodeString(CONFIGURATOR_STOP_SNMPD,				"CONFIGURATOR_STOP_SNMPD");
	// 19000040
	AddOpcodeString(CONFIGURATOR_ADD_DEFAULT_GW_ROUTE_RULE,	"CONFIGURATOR_ADD_DEFAULT_GW_ROUTE_RULE");
	// 19000044
	AddOpcodeString(CONFIGURATOR_EVOKE_NETWORK_INTERFACES,	"CONFIGURATOR_EVOKE_NETWORK_INTERFACES");
	// 19000047
	AddOpcodeString(CONFIGURATOR_ETH_SETTINGS_MONITORING,	"CONFIGURATOR_ETH_SETTINGS_MONITORING");
	// 19000052
	AddOpcodeString(CONFIGURATOR_DEL_DEFAULT_GW_ROUTE_RULE,	"CONFIGURATOR_DEL_DEFAULT_GW_ROUTE_RULE");
	// 314314314 CONFIG_SSHD_TIMER
	AddOpcodeString(314314314/*CONFIG_SSHD_TIMER*/,		"CONFIG_SSHD_TIMER");

	AddOpcodeString(CONFIGURATOR_SET_SPECIAL_PRODUCT_TYPE,			"CONFIGURATOR_SET_SPECIAL_PRODUCT_TYPE");
	AddOpcodeString(CONFIGURATOR_CHECK_CS_IP_CONFIG,			"CONFIGURATOR_CHECK_CS_IP_CONFIG");

	AddOpcodeString(CONFIGURATOR_NTP_SERVICE,                       "CONFIGURATOR_NTP_SERVICE");
	AddOpcodeString(CONFIGURATOR_CONFIG_NTP_SERVERS,                        "CONFIGURATOR_CONFIG_NTP_SERVERS");


    ADD_OPCODE(CONFIGURATOR_ENABLE_DISABLE_PING_IPTABLES);
}

void COpcodeStringConverter::InitOpcodeStringProcessConfParty()
{
  AddOpcodeString(CONF_MPL_CREATE_PARTY_REQ						,"CONF_MPL_CREATE_PARTY_REQ");
  AddOpcodeString(CONF_MPL_DELETE_PARTY_REQ                     ,"CONF_MPL_DELETE_PARTY_REQ");

  AddOpcodeString(TB_MSG_OPEN_PORT_REQ							,"TB_MSG_OPEN_PORT_REQ");
  AddOpcodeString(TB_MSG_CLOSE_PORT_REQ                         ,"TB_MSG_CLOSE_PORT_REQ");
  AddOpcodeString(TB_MSG_CONNECT_REQ                            ,"TB_MSG_CONNECT_REQ");
  AddOpcodeString(TB_MSG_DISCONNECT_REQ                         ,"TB_MSG_DISCONNECT_REQ");

  AddOpcodeString(TB_MSG_CONNECT_PCM_REQ                        ,"TB_MSG_CONNECT_PCM_REQ");
  AddOpcodeString(TB_MSG_DISCONNECT_PCM_REQ                     ,"TB_MSG_DISCONNECT_PCM_REQ");
  AddOpcodeString(PCM_COMMAND 			                        ,"PCM_COMMAND");
  AddOpcodeString(PCM_INDICATION		                        ,"PCM_INDICATION");
  AddOpcodeString(PCM_CONFIRM 			                        ,"PCM_CONFIRM");

  AddOpcodeString(AUDIO_OPEN_ENCODER_REQ						,"AUDIO_OPEN_ENCODER_REQ");
  AddOpcodeString(AUDIO_OPEN_DECODER_REQ                        ,"AUDIO_OPEN_DECODER_REQ");
  AddOpcodeString(AUDIO_CLOSE_ENCODER_REQ                       ,"AUDIO_CLOSE_ENCODER_REQ");
  AddOpcodeString(AUDIO_CLOSE_DECODER_REQ                       ,"AUDIO_CLOSE_DECODER_REQ");
  AddOpcodeString(AUDIO_UPDATE_ALGORITHM_REQ                    ,"AUDIO_UPDATE_ALGORITHM_REQ");
  AddOpcodeString(AUDIO_UPDATE_DECODER_REQ                      ,"AUDIO_UPDATE_DECODER_REQ");
  AddOpcodeString(AUDIO_UPDATE_GAIN_REQ                         ,"AUDIO_UPDATE_GAIN_REQ");
  AddOpcodeString(AUDIO_UPDATE_USE_SPEAKER_SSRC_FOR_TX_REQ      ,"AUDIO_UPDATE_USE_SPEAKER_SSRC_FOR_TX_REQ");
  AddOpcodeString(AUDIO_UPDATE_MUTE_REQ                         ,"AUDIO_UPDATE_MUTE_REQ");
  AddOpcodeString(AUDIO_UPDATE_CONNECTION_STATUS_REQ            ,"AUDIO_UPDATE_CONNECTION_STATUS_REQ");
  AddOpcodeString(AUDIO_UPDATE_ERROR_CONCEALMENT_REQ            ,"AUDIO_UPDATE_ERROR_CONCEALMENT_REQ");
  AddOpcodeString(AUDIO_UPDATE_AGC_REQ							,"AUDIO_UPDATE_AGC_REQ");
  AddOpcodeString(AUDIO_UPDATE_TONE_REMOVE_REQ					,"AUDIO_UPDATE_TONE_REMOVE_REQ");
  AddOpcodeString(AUDIO_UPDATE_NOISE_REDUCTION_REQ				,"AUDIO_UPDATE_NOISE_REDUCTION_REQ");
  AddOpcodeString(AUDIO_UPDATE_DTMF_DETECTION_REQ				,"AUDIO_UPDATE_DTMF_DETECTION_REQ");
  AddOpcodeString(AUDIO_UPDATE_NOISE_DETECTION_REQ				,"AUDIO_UPDATE_NOISE_DETECTION_REQ");
  AddOpcodeString(AUDIO_UPDATE_ECHO_CANCEL_REQ					,"AUDIO_UPDATE_ECHO_CANCEL_REQ");
  AddOpcodeString(AUDIO_PLAY_TONE_REQ							,"AUDIO_PLAY_TONE_REQ");
  AddOpcodeString(AUDIO_UPDATE_COMPRESSED_AUDIO_DELAY_REQ		,"AUDIO_UPDATE_COMPRESSED_AUDIO_DELAY_REQ");
  AddOpcodeString(AUDIO_UPDATE_RELAY_DEC_PARAMS_REQ             ,"AUDIO_UPDATE_RELAY_DEC_PARAMS_REQ");
  AddOpcodeString(AUDIO_UPDATE_RELAY_ENC_PARAMS_REQ             ,"AUDIO_UPDATE_RELAY_ENC_PARAMS_REQ");
  AddOpcodeString(ART_UPDATE_RELAY_PARAMS_REQ                   ,"ART_UPDATE_RELAY_PARAMS_REQ");
  AddOpcodeString(AUDIO_ENCODER_UPDATE_SEEN_IMAGE_SSRC          ,"AUDIO_ENCODER_UPDATE_SEEN_IMAGE_SSRC");
  AddOpcodeString(AUDIO_UPDATE_BITRATE_REQ						,"AUDIO_UPDATE_BITRATE_REQ");

  AddOpcodeString(AC_OPEN_CONF_REQ								,"AC_OPEN_CONF_REQ");
  AddOpcodeString(AC_CLOSE_CONF_REQ                             ,"AC_CLOSE_CONF_REQ");
  AddOpcodeString(AC_UPDATE_CONF_PARAMS_REQ                     ,"AC_UPDATE_CONF_PARAMS_REQ");
  AddOpcodeString(AC_OPEN_CONF_RESEND                           ,"AC_OPEN_CONF_RESEND");
  AddOpcodeString(AC_TYPE_REQ                           		,"AC_TYPE_REQ");
  AddOpcodeString(AC_LAYOUT_CHANGE_COMPLETE_REQ                 ,"AC_LAYOUT_CHANGE_COMPLETE_REQ");

  AddOpcodeString(VIDEO_ENCODER_CHANGE_LAYOUT_REQ				  ,"VIDEO_ENCODER_CHANGE_LAYOUT_REQ");
  AddOpcodeString(VIDEO_ENCODER_CHANGE_LAYOUT_ATTRIBUTES_REQ      ,"VIDEO_ENCODER_CHANGE_LAYOUT_ATTRIBUTES_REQ");
  AddOpcodeString(VIDEO_ENCODER_UPDATE_PARAM_REQ                  ,"VIDEO_ENCODER_UPDATE_PARAM_REQ");
  AddOpcodeString(VIDEO_DECODER_UPDATE_PARAM_REQ                  ,"VIDEO_DECODER_UPDATE_PARAM_REQ");
  AddOpcodeString(VIDEO_FAST_UPDATE_REQ                           ,"VIDEO_FAST_UPDATE_REQ");
  AddOpcodeString(VIDEO_GRAPHIC_OVERLAY_START_REQ                 ,"VIDEO_GRAPHIC_OVERLAY_START_REQ");
  AddOpcodeString(VIDEO_GRAPHIC_OVERLAY_STOP_REQ                  ,"VIDEO_GRAPHIC_OVERLAY_STOP_REQ");
  AddOpcodeString(VIDEO_ENCODER_SITE_NAMES_OFF                    ,"VIDEO_ENCODER_SITE_NAMES_OFF");
  AddOpcodeString(VIDEO_GRAPHICS_SHOW_TEXT_BOX_REQ                ,"VIDEO_GRAPHICS_SHOW_TEXT_BOX_REQ");
  AddOpcodeString(VIDEO_GRAPHICS_HIDE_TEXT_BOX_REQ                ,"VIDEO_GRAPHICS_HIDE_TEXT_BOX_REQ");
  AddOpcodeString(VIDEO_UPDATE_DECODER_RESOLUTION_REQ             ,"VIDEO_UPDATE_DECODER_RESOLUTION_REQ");
  AddOpcodeString(VIDEO_MASTER_ENCODER_OPEN_IND          		  ,"VIDEO_MASTER_ENCODER_OPEN_IND");
  AddOpcodeString(VIDEO_ENCODER_DSP_SMART_SWITCH_CHANGE_LAYOUT_REQ,"VIDEO_ENCODER_DSP_SMART_SWITCH_CHANGE_LAYOUT_REQ");
  AddOpcodeString(VIDEO_GRAPHICS_START_GATHERING_REQ            ,"VIDEO_GRAPHICS_START_GATHERING_REQ");
  AddOpcodeString(VIDEO_GRAPHICS_STOP_GATHERING_REQ             ,"VIDEO_GRAPHICS_STOP_GATHERING_REQ");
  AddOpcodeString(VIDEO_GRAPHICS_SHOW_ICON_REQ                  ,"VIDEO_GRAPHICS_SHOW_ICON_REQ");
  AddOpcodeString(MULTIPLE_PARTIES_CHANGE_LAYOUT_REQ			,"MULTIPLE_PARTIES_CHANGE_LAYOUT_REQ");		//Change Layout Improvement - Layout Shared Memory (CL-SM)

  AddOpcodeString(VIDEO_ENCODER_ICONS_DISPLAY_REQ               ,"VIDEO_ENCODER_ICONS_DISPLAY_REQ");
  AddOpcodeString(NET_SETUP_REQ									,"NET_SETUP_REQ");
  AddOpcodeString(NET_CLEAR_REQ                                 ,"NET_CLEAR_REQ");
  AddOpcodeString(NET_ALERT_REQ                                 ,"NET_ALERT_REQ");
  AddOpcodeString(NET_CONNECT_REQ                               ,"NET_CONNECT_REQ");
  AddOpcodeString(NET_DISCONNECT_ACK_IND                        ,"NET_DISCONNECT_ACK_IND");
  AddOpcodeString(NET_DISCONNECT_ACK_REQ                        ,"NET_DISCONNECT_ACK_REQ");
  AddOpcodeString(DNS_RESOLVE_DOMAIN_REQ						,"DNS_RESOLVE_DOMAIN_REQ");
  AddOpcodeString(SET_SIP_API                                   ,"SET_SIP_API");
  AddOpcodeString(DNS_MNGR_DUMP                                 ,"DNS_MNGR_DUMP");
  AddOpcodeString(DNS_SERVICE_REQ                               ,"DNS_SERVICE_REQ");
  AddOpcodeString(DNS_UPDATE_REQ                                ,"DNS_UPDATE_REQ");
  AddOpcodeString(DNS_UPDATE_IND                                ,"DNS_UPDATE_IND");
  AddOpcodeString(DNS_CLEAR_ALL                                 ,"DNS_CLEAR_ALL");
  AddOpcodeString(SET_GK_API                                    ,"SET_GK_API");
  AddOpcodeString(IVR_PLAY_MESSAGE_REQ							,"IVR_PLAY_MESSAGE_REQ");
  AddOpcodeString(IVR_STOP_PLAY_MESSAGE_REQ                     ,"IVR_STOP_PLAY_MESSAGE_REQ");
  AddOpcodeString(IVR_PLAY_MUSIC_REQ                            ,"IVR_PLAY_MUSIC_REQ");
  AddOpcodeString(IVR_STOP_PLAY_MUSIC_REQ                       ,"IVR_STOP_PLAY_MUSIC_REQ");
  AddOpcodeString(IVR_ADD_MUSIC_SOURCE_REQ                      ,"IVR_ADD_MUSIC_SOURCE_REQ");
  AddOpcodeString(IVR_REMOVE_MUSIC_SOURCE_REQ                   ,"IVR_REMOVE_MUSIC_SOURCE_REQ");
  AddOpcodeString(IVR_SET_PATH_REQ                              ,"IVR_SET_PATH_REQ");
  AddOpcodeString(IVR_RECORD_ROLL_CALL_REQ                      ,"IVR_RECORD_ROLL_CALL_REQ");
  AddOpcodeString(IVR_ERASE_FILE_REQ                            ,"IVR_ERASE_FILE_REQ");
  AddOpcodeString(IVR_SHOW_SLIDE_REQ                            ,"IVR_SHOW_SLIDE_REQ");
  AddOpcodeString(IVR_STOP_SHOW_SLIDE_REQ                       ,"IVR_STOP_SHOW_SLIDE_REQ");
  AddOpcodeString(IVR_PLAY_CLIP_REQ                             ,"IVR_PLAY_CLIP_REQ");
  AddOpcodeString(IVR_STOP_PLAY_CLIP_REQ                        ,"IVR_STOP_PLAY_CLIP_REQ");
  AddOpcodeString(IVR_START_IVR_REQ                             ,"IVR_START_IVR_REQ");
  AddOpcodeString(IVR_STOP_IVR_REQ                              ,"IVR_STOP_IVR_REQ");
  AddOpcodeString(IVR_FAST_UPDATE_REQ							,"IVR_FAST_UPDATE_REQ");
  AddOpcodeString(IVR_UPDATE_STANDALONE_REQ                     ,"IVR_UPDATE_STANDALONE_REQ");
  AddOpcodeString(NET_CONNECT_IND								,"NET_CONNECT_IND");
  AddOpcodeString(NET_CLEAR_IND                                 ,"NET_CLEAR_IND");
  AddOpcodeString(NET_PROGRESS_IND                              ,"NET_PROGRESS_IND");
  AddOpcodeString(NET_ALERT_IND                                 ,"NET_ALERT_IND");
  AddOpcodeString(NET_PROCEED_IND                               ,"NET_PROCEED_IND");
  AddOpcodeString(NET_SETUP_IND                                 ,"NET_SETUP_IND");
  AddOpcodeString(NET_DISCONNECT_IND                            ,"NET_DISCONNECT_IND");

  AddOpcodeString(VIDEO_DECODER_SYNC_IND						,"VIDEO_DECODER_SYNC_IND");
  AddOpcodeString(VIDEO_ENCODER_SYNC_IND						,"VIDEO_ENCODER_SYNC_IND");

  AddOpcodeString(AC_ACTIVE_SPEAKER_IND							,"AC_ACTIVE_SPEAKER_IND");
  AddOpcodeString(AC_AUDIO_SPEAKER_IND                          ,"AC_AUDIO_SPEAKER_IND");

  AddOpcodeString(AUD_DTMF_IND_VAL								,"AUD_DTMF_IND_VAL");
  AddOpcodeString(SIGNALLING_DTMF_INPUT_IND						,"SIGNALLING_DTMF_INPUT_IND");
  AddOpcodeString(RTP_DTMF_INPUT_IND							,"RTP_DTMF_INPUT_IND");
  AddOpcodeString(IP_DTMF_INPUT_IND								,"IP_DTMF_INPUT_IND");

  AddOpcodeString(IVR_RECORD_ROLL_CALL_IND                      ,"IVR_RECORD_ROLL_CALL_IND");
  AddOpcodeString(IVR_STOP_RECORD_ROLL_CALL_REQ                 ,"IVR_STOP_RECORD_ROLL_CALL_REQ");

  AddOpcodeString(CONFERENCE_SPREAD_REQ                         ,"CONFERENCE_SPREAD_REQ");
  AddOpcodeString(IVR_MUSIC_ADD_SOURCE_REQ                      ,"IVR_MUSIC_ADD_SOURCE_REQ");
  AddOpcodeString(MOVE_PARTY_RESOURCE_REQ                       ,"MOVE_PARTY_RESOURCE_REQ");

  //general SIP req
  AddOpcodeString( SIP_CS_SIG_OPTIONS_RESP_REQ				,"SIP_CS_SIG_OPTIONS_RESP_REQ");
  AddOpcodeString( SIP_CS_SIG_REFER_RESP_REQ					,"SIP_CS_SIG_REFER_RESP_REQ");
  AddOpcodeString( SIP_CS_SIG_REDIRECT_DATA_REQ				,"SIP_CS_SIG_REDIRECT_DATA_REQ");
  //general SIP ind
  AddOpcodeString( SIP_CS_SIG_OPTIONS_IND						,"SIP_CS_SIG_OPTIONS_IND");
  AddOpcodeString( SIP_CS_SIG_REFER_IND						,"SIP_CS_SIG_REFER_IND");
  AddOpcodeString( SIP_CS_SIG_SUBSCRIBE_IND					, "SIP_CS_SIG_SUBSCRIBE_IND");
   AddOpcodeString( SIP_CS_SIG_SUBSCRIBE_RESP_REQ			, "SIP_CS_SIG_SUBSCRIBE_RESP_REQ");
  AddOpcodeString( SIP_CS_SIG_NOTIFY_RESPONSE_IND			, "SIP_CS_SIG_NOTIFY_RESPONSE_IND");
  AddOpcodeString( SIP_CS_SIG_INFO_REQ						, "SIP_CS_SIG_INFO_REQ");

  AddOpcodeString( SIP_CS_SIG_TRACE_INFO_IND					,"SIP_CS_SIG_TRACE_INFO_IND");
  AddOpcodeString( SIP_CS_SIG_BAD_STATUS_IND					,"SIP_CS_SIG_BAD_STATUS_IND");
  AddOpcodeString( SIP_CS_SIG_TRANSPORT_ERROR_IND				,"SIP_CS_SIG_TRANSPORT_ERROR_IND");
  // Ip party - CS Req
  AddOpcodeString( H323_CS_SIG_GET_PORT_REQ							,"H323_CS_SIG_GET_PORT_REQ");
  AddOpcodeString( H323_CS_SIG_RELEASE_PORT_REQ						,"H323_CS_SIG_RELEASE_PORT_REQ");
  AddOpcodeString( H323_CS_SIG_CALL_SETUP_REQ						,"H323_CS_SIG_CALL_SETUP_REQ");
  AddOpcodeString( H323_CS_SIG_CALL_ANSWER_REQ						,"H323_CS_SIG_CALL_ANSWER_REQ");
  AddOpcodeString( H323_CS_SIG_RE_CAPABILITIES_REQ					,"H323_CS_SIG_RE_CAPABILITIES_REQ");
  AddOpcodeString( H323_CS_SIG_CREATE_CNTL_REQ						,"H323_CS_SIG_CREATE_CNTL_REQ");
  AddOpcodeString( H323_CS_SIG_INCOMING_CHNL_RESPONSE_REQ			,"H323_CS_SIG_INCOMING_CHNL_RESPONSE_REQ");
  AddOpcodeString( H323_CS_SIG_OUTGOING_CHNL_REQ					,"H323_CS_SIG_OUTGOING_CHNL_REQ");
  AddOpcodeString( H323_CS_SIG_FLOW_CNTL_REQ						,"H323_CS_SIG_FLOW_CNTL_REQ");
  AddOpcodeString( H323_CS_SIG_CHAN_MAX_SKEW_REQ					,"H323_CS_SIG_CHAN_MAX_SKEW_REQ");
  AddOpcodeString( H323_CS_SIG_VIDEO_UPDATE_PIC_REQ					,"H323_CS_SIG_VIDEO_UPDATE_PIC_REQ");
  AddOpcodeString( H323_CS_SIG_CHANNEL_OFF_REQ						,"H323_CS_SIG_CHANNEL_OFF_REQ");
  AddOpcodeString( H323_CS_SIG_MULTIPOINTMODECOM_TERMINALID_REQ		,"H323_CS_SIG_MULTIPOINTMODECOM_TERMINALID_REQ");
  AddOpcodeString( H323_CS_SIG_MEDIA_PRODUCER_STATUS_REQ			,"H323_CS_SIG_MEDIA_PRODUCER_STATUS_REQ");
  AddOpcodeString( H323_CS_SIG_CHANNEL_ON_REQ						,"H323_CS_SIG_CHANNEL_ON_REQ");
  AddOpcodeString( H323_CS_SIG_ROLE_TOKEN_REQ						,"H323_CS_SIG_ROLE_TOKEN_REQ");
  AddOpcodeString( H323_CS_SIG_UNEXPECTED_MESSAGE_REQ				,"H323_CS_SIG_UNEXPECTED_MESSAGE_REQ");
  AddOpcodeString( H323_CS_SIG_CALL_DROP_TIMER_EXPIRED_REQ			,"H323_CS_SIG_CALL_DROP_TIMER_EXPIRED_REQ");
  AddOpcodeString( H323_CS_SIG_CONFERENCE_RES_REQ					,"H323_CS_SIG_CONFERENCE_RES_REQ");
  AddOpcodeString( H323_CS_SIG_CONFERENCE_IND_REQ					,"H323_CS_SIG_CONFERENCE_IND_REQ");
  AddOpcodeString( H323_CS_SIG_VIDEO_NOT_DECODED_MBS_REQ			,"H323_CS_SIG_VIDEO_NOT_DECODED_MBS_REQ");
  AddOpcodeString( H323_CS_SIG_CHNL_DROP_REQ						,"H323_CS_SIG_CHNL_DROP_REQ");
  AddOpcodeString( H323_CS_SIG_CALL_DROP_REQ						,"H323_CS_SIG_CALL_DROP_REQ");
  AddOpcodeString( H323_CS_SIG_CALL_CLOSE_CONFIRM_REQ				,"H323_CS_SIG_CALL_CLOSE_CONFIRM_REQ");
  AddOpcodeString( H323_CS_SIG_DBC2_COMMAND_CT_ON_REQ				,"H323_CS_SIG_DBC2_COMMAND_CT_ON_REQ");
  AddOpcodeString( H323_CS_SIG_DBC2_COMMAND_CT_OFF_REQ				,"H323_CS_SIG_DBC2_COMMAND_CT_OFF_REQ");
  AddOpcodeString( H323_CS_SIG_CHNL_NEW_RATE_REQ					,"H323_CS_SIG_CHNL_NEW_RATE_REQ");
  AddOpcodeString( H323_CS_NON_STANDARD_REQ_REQ						,"H323_CS_NON_STANDARD_REQ_REQ");
  AddOpcodeString( H323_CS_NON_STANDARD_RES_REQ						,"H323_CS_NON_STANDARD_RES_REQ");
  AddOpcodeString( H323_CS_NON_STANDARD_IND_REQ						,"H323_CS_NON_STANDARD_IND_REQ");
  AddOpcodeString( H323_CS_NON_STANDARD_COM_REQ						,"H323_CS_NON_STANDARD_COM_REQ");
  AddOpcodeString( H323_CS_SIG_ROUND_TRIP_DELAY_REQ					,"H323_CS_SIG_ROUND_TRIP_DELAY_REQ");
  AddOpcodeString( H323_CS_SIG_CONFERENCE_REQ_REQ					,"H323_CS_SIG_CONFERENCE_REQ_REQ");
  AddOpcodeString( H323_CS_SIG_CONFERENCE_COM_REQ					,"H323_CS_SIG_CONFERENCE_COM_REQ");
  AddOpcodeString( H323_CS_SIG_H323_CT_AUTHENTICATION_REQ			,"H323_CS_SIG_H323_CT_AUTHENTICATION_REQ");
  AddOpcodeString( H323_CS_DTMF_INPUT_REQ							,"H323_CS_DTMF_INPUT_REQ");
  AddOpcodeString( H323_CS_SIG_CAPABILITIES_RES_REQ					,"H323_CS_SIG_CAPABILITIES_RES_REQ");
  AddOpcodeString( IP_CS_SIG_STOP_ALL_PROCESSES_REQ					,"IP_CS_SIG_STOP_ALL_PROCESSES_REQ");
  AddOpcodeString( H323_CS_PARTY_KEEP_ALIVE_REQ						,"H323_CS_PARTY_KEEP_ALIVE_REQ");
  AddOpcodeString( H323_CS_SIG_LPR_MODE_CHANGE_REQ					,"H323_CS_SIG_LPR_MODE_CHANGE_REQ");
  AddOpcodeString( H323_CS_SIG_LPR_MODE_CHANGE_RES_REQ				,"H323_CS_SIG_LPR_MODE_CHANGE_RES_REQ");
  AddOpcodeString( H323_CS_SIG_RSS_CMD_REQ							,"H323_CS_SIG_RSS_CMD_REQ");
  //added by Jason for ITP-Multiple channels begin
  AddOpcodeString( H323_CS_SIG_NEW_ITP_SPEAKER_REQ					,"H323_CS_SIG_NEW_ITP_SPEAKER_REQ");
  AddOpcodeString( H323_CS_SIG_NEW_ITP_SPEAKER_ACK_REQ				,"H323_CS_SIG_NEW_ITP_SPEAKER_ACK_REQ");
  //added by Jason for ITP-Multiple channels end

  AddOpcodeString( SIP_CS_SIG_INVITE_REQ							,"SIP_CS_SIG_INVITE_REQ");
  AddOpcodeString( SIP_CS_SIG_REINVITE_REQ							,"SIP_CS_SIG_REINVITE_REQ");
  AddOpcodeString( SIP_CS_SIG_INVITE_ACK_REQ						,"SIP_CS_SIG_INVITE_ACK_REQ");
  AddOpcodeString( SIP_CS_SIG_INVITE_RESPONSE_REQ					,"SIP_CS_SIG_INVITE_RESPONSE_REQ");
  AddOpcodeString( SIP_CS_SIG_RINGING_REQ							,"SIP_CS_SIG_RINGING_REQ");
  AddOpcodeString( SIP_CS_SIG_CANCEL_REQ							,"SIP_CS_SIG_CANCEL_REQ");
  AddOpcodeString( SIP_CS_SIG_BYE_REQ								,"SIP_CS_SIG_BYE_REQ");
  AddOpcodeString( SIP_CS_SIG_BYE_200_OK_REQ						,"SIP_CS_SIG_BYE_200_OK_REQ");
  AddOpcodeString( SIP_CS_SIG_VIDEO_FAST_UPDATE_REQ					,"SIP_CS_SIG_VIDEO_FAST_UPDATE_REQ");
  AddOpcodeString( SIP_CS_SIG_DEL_NEW_CALL_REQ						,"SIP_CS_SIG_DEL_NEW_CALL_REQ");
  AddOpcodeString( SIP_CS_SIG_INSTANT_MESSAGE_REQ					,"SIP_CS_SIG_INSTANT_MESSAGE_REQ");
  AddOpcodeString( SIP_CS_PARTY_KEEP_ALIVE_REQ						,"SIP_CS_PARTY_KEEP_ALIVE_REQ");
  AddOpcodeString( SIP_CS_SIG_INFO_RESP_REQ							,"SIP_CS_SIG_INFO_RESP_REQ");
  AddOpcodeString( SIP_CS_BFCP_MESSAGE_REQ							,"SIP_CS_BFCP_MESSAGE_REQ");
  AddOpcodeString( SIP_CS_SIG_DIALOG_RECOVERY_REQ,    "SIP_CS_SIG_DIALOG_RECOVERY_REQ");
  AddOpcodeString( SIP_CS_SIG_SEND_CRLF_REQ,    "SIP_CS_SIG_SEND_CRLF_REQ");
  AddOpcodeString( SIP_CS_SIG_SOCKET_ACTIVITY_REQ,    "SIP_CS_SIG_SOCKET_ACTIVITY_REQ");

  // Ip party CS Ind
  AddOpcodeString( H323_CS_SIG_GET_PORT_IND							,"H323_CS_SIG_GET_PORT_IND");
  AddOpcodeString( H323_CS_SIG_CALL_DIAL_TONE_IND					,"H323_CS_SIG_CALL_DIAL_TONE_IND");
  AddOpcodeString( H323_CS_SIG_CALL_PROCEEDING_IND					,"H323_CS_SIG_CALL_PROCEEDING_IND");
  AddOpcodeString( H323_CS_SIG_CALL_RING_BACK_IND					,"H323_CS_SIG_CALL_RING_BACK_IND");
  AddOpcodeString( H323_CS_SIG_CALL_CONNECTED_IND					,"H323_CS_SIG_CALL_CONNECTED_IND");
  AddOpcodeString( H323_CS_SIG_CALL_OFFERING_IND					,"H323_CS_SIG_CALL_OFFERING_IND");
  AddOpcodeString( H323_CS_SIG_CAPABILITIES_IND						,"H323_CS_SIG_CAPABILITIES_IND");
  AddOpcodeString( H323_CS_SIG_CALL_NEW_RATE_IND					,"H323_CS_SIG_CALL_NEW_RATE_IND");
  AddOpcodeString( H323_CS_SIG_CAP_RESPONSE_IND						,"H323_CS_SIG_CAP_RESPONSE_IND");
  AddOpcodeString( H323_CS_SIG_CALL_CNTL_CONNECTED_IND				,"H323_CS_SIG_CALL_CNTL_CONNECTED_IND");
  AddOpcodeString( H323_CS_SIG_INCOMING_CHANNEL_IND					,"H323_CS_SIG_INCOMING_CHANNEL_IND");
  AddOpcodeString( H323_CS_SIG_INCOMING_CHNL_CONNECTED_IND			,"H323_CS_SIG_INCOMING_CHNL_CONNECTED_IND");
  AddOpcodeString( H323_CS_SIG_OUTGOING_CHNL_RESPONSE_IND			,"H323_CS_SIG_OUTGOING_CHNL_RESPONSE_IND");
  AddOpcodeString( H323_CS_SIG_CHAN_NEW_RATE_IND					,"H323_CS_SIG_CHAN_NEW_RATE_IND");
  AddOpcodeString( H323_CS_SIG_CALL_IDLE_IND						,"H323_CS_SIG_CALL_IDLE_IND");
  AddOpcodeString( H323_CS_SIG_START_CHANNEL_CLOSE_IND				,"H323_CS_SIG_START_CHANNEL_CLOSE_IND");
  AddOpcodeString( H323_CS_SIG_CHANNEL_CLOSE_IND					,"H323_CS_SIG_CHANNEL_CLOSE_IND");
  AddOpcodeString( H323_CS_SIG_FLOW_CONTROL_IND_IND					,"H323_CS_SIG_FLOW_CONTROL_IND_IND");
  AddOpcodeString( H323_CS_SIG_DBC2_COMMAND_CT_ON_IND				,"H323_CS_SIG_DBC2_COMMAND_CT_ON_IND");
  AddOpcodeString( H323_CS_SIG_DBC2_COMMAND_CT_OFF_IND				,"H323_CS_SIG_DBC2_COMMAND_CT_OFF_IND");
  AddOpcodeString( H323_CS_SIG_MULTIPLE_VIDEO_UPDATE_PIC_IND		,"H323_CS_SIG_MULTIPLE_VIDEO_UPDATE_PIC_IND");
  AddOpcodeString( H323_CS_SIG_CHAN_MAX_SKEW_IND					,"H323_CS_SIG_CHAN_MAX_SKEW_IND");
  AddOpcodeString( IP_CS_VIDEO_UPDATE_PIC_IND						,"IP_CS_VIDEO_UPDATE_PIC_IND");
  AddOpcodeString( H323_CS_CHANNEL_OFF_IND							,"H323_CS_CHANNEL_OFF_IND");
  AddOpcodeString( H323_CS_CHANNEL_ON_IND							,"H323_CS_CHANNEL_ON_IND");
  AddOpcodeString( H323_CS_CONFERENCE_REQ_IND						,"H323_CS_CONFERENCE_REQ_IND");
  AddOpcodeString( H323_CS_CONFERENCE_COM_IND						,"H323_CS_CONFERENCE_COM_IND");
  AddOpcodeString( H323_CS_CONFERENCE_RES_IND						,"H323_CS_CONFERENCE_RES_IND");
  AddOpcodeString( H323_CS_CONFERENCE_IND_IND						,"H323_CS_CONFERENCE_IND_IND");
  AddOpcodeString( H323_CS_SIG_CALL_ROLE_TOKEN_IND					,"H323_CS_SIG_CALL_ROLE_TOKEN_IND");
  AddOpcodeString( H323_CS_NON_STANDARD_REQ_IND						,"H323_CS_NON_STANDARD_REQ_IND");
  AddOpcodeString( H323_CS_NON_STANDARD_COM_IND						,"H323_CS_NON_STANDARD_COM_IND");
  AddOpcodeString( H323_CS_NON_STANDARD_RES_IND						,"H323_CS_NON_STANDARD_RES_IND");
  AddOpcodeString( H323_CS_NON_STANDARD_IND_IND						,"H323_CS_NON_STANDARD_IND_IND");
  AddOpcodeString( H323_CS_DTMF_INPUT_IND							,"H323_CS_DTMF_INPUT_IND");
  AddOpcodeString( H323_CS_SIG_CALL_AUTHENTICATION_IND				,"H323_CS_SIG_CALL_AUTHENTICATION_IND");
  AddOpcodeString( H323_CS_SIG_CALL_BAD_SPONTAN_IND					,"H323_CS_SIG_CALL_BAD_SPONTAN_IND");
  AddOpcodeString( H323_CS_PARTY_KEEP_ALIVE_IND						,"H323_CS_PARTY_KEEP_ALIVE_IND");
  AddOpcodeString( H323_CS_SIG_LPR_MODE_CHANGE_IND					,"H323_CS_SIG_LPR_MODE_CHANGE_IND");
  AddOpcodeString( H323_CS_SIG_LPR_MODE_CHANGE_RES_IND				,"H323_CS_SIG_LPR_MODE_CHANGE_RES_IND");
  //added by Jason for ITP-Multiple channels begin	
  AddOpcodeString( H323_CS_SIG_NEW_ITP_SPEAKER_IND					,"H323_CS_SIG_NEW_ITP_SPEAKER_IND");
  AddOpcodeString( H323_CS_SIG_NEW_ITP_SPEAKER_ACK_IND				,"H323_CS_SIG_NEW_ITP_SPEAKER_ACK_IND");
  //added by Jason for ITP-Multiple channels end

  AddOpcodeString( SIP_CS_SIG_INVITE_IND							,"SIP_CS_SIG_INVITE_IND");
  AddOpcodeString( SIP_CS_SIG_REINVITE_IND							,"SIP_CS_SIG_REINVITE_IND");
  AddOpcodeString( SIP_CS_SIG_INVITE_ACK_IND						,"SIP_CS_SIG_INVITE_ACK_IND");
  AddOpcodeString( SIP_CS_SIG_INVITE_RESPONSE_IND					,"SIP_CS_SIG_INVITE_RESPONSE_IND");
  AddOpcodeString( SIP_CS_SIG_PROV_RESPONSE_IND						,"SIP_CS_SIG_PROV_RESPONSE_IND");
  AddOpcodeString( SIP_CS_SIG_BYE_IND								,"SIP_CS_SIG_BYE_IND");
  AddOpcodeString( SIP_CS_SIG_BYE_200_OK_IND						,"SIP_CS_SIG_BYE_200_OK_IND");
  AddOpcodeString( SIP_CS_SIG_CANCEL_IND							,"SIP_CS_SIG_CANCEL_IND");
  AddOpcodeString( SIP_CS_SIG_VIDEO_FAST_UPDATE_IND					,"SIP_CS_SIG_VIDEO_FAST_UPDATE_IND");
  AddOpcodeString( SIP_CS_SIG_DTMF_DIGIT_IND						,"SIP_CS_SIG_DTMF_DIGIT_IND");
  AddOpcodeString( SIP_CS_SIG_INSTANT_MESSAGE_IND					,"SIP_CS_SIG_INSTANT_MESSAGE_IND");
  AddOpcodeString( SIP_CS_SIG_SESSION_TIMER_EXPIRED_IND				,"SIP_CS_SIG_SESSION_TIMER_EXPIRED_IND");
  AddOpcodeString( SIP_CS_SIG_SESSION_TIMER_REINVITE_IND			,"SIP_CS_SIG_SESSION_TIMER_REINVITE_IND");
  AddOpcodeString( SIP_CS_SIG_CARD_DATA_IND							,"SIP_CS_SIG_CARD_DATA_IND");
  AddOpcodeString( SIP_CS_PARTY_KEEP_ALIVE_IND						,"SIP_CS_PARTY_KEEP_ALIVE_IND");
  AddOpcodeString( SIP_CS_SIG_INFO_IND 								,"SIP_CS_SIG_INFO_IND" );
  AddOpcodeString( SIP_CS_SIG_INFO_RESP_IND 						,"SIP_CS_SIG_INFO_RESP_IND" );
  AddOpcodeString( SIP_CS_BFCP_MESSAGE_IND 							,"SIP_CS_BFCP_MESSAGE_IND" );
  AddOpcodeString( SIP_CS_BFCP_TRANSPORT_IND						,"SIP_CS_BFCP_TRANSPORT_IND" );
  AddOpcodeString( SIP_CS_SIG_DIALOG_RECOVERY_IND       ,"SIP_CS_SIG_DIALOG_RECOVERY_IND" );
  AddOpcodeString( SIP_CS_SIG_SOCKET_ACTIVITY_IND       ,"SIP_CS_SIG_SOCKET_ACTIVITY_IND" );
  AddOpcodeString( SIP_CS_SIG_CRLF_ERR_IND       ,"SIP_CS_SIG_CRLF_ERR_IND" );

  // Ip Party Mfa Req
  AddOpcodeString( H323_RTP_FECC_TOKEN_RESPONSE_REQ              	,"H323_RTP_FECC_TOKEN_RESPONSE_REQ");
  AddOpcodeString( H323_RTP_UPDATE_MT_PAIR_REQ						,"H323_RTP_UPDATE_MT_PAIR_REQ");
  AddOpcodeString( H323_RTP_UPDATE_PORT_OPEN_CHANNEL_REQ			,"H323_RTP_UPDATE_PORT_OPEN_CHANNEL_REQ (SIP_RTP_UPDATE_PORT_OPEN_CHANNEL_REQ also use this opcode)");
  AddOpcodeString( H323_RTP_UPDATE_CHANNEL_REQ						,"H323_RTP_UPDATE_CHANNEL_REQ (SIP_RTP_UPDATE_CHANNEL_REQ also use this opcode)");
  AddOpcodeString( H323_RTP_UPDATE_CHANNEL_RATE_REQ					,"H323_RTP_UPDATE_CHANNEL_RATE_REQ");
  AddOpcodeString( H323_RTP_STREAM_OFF_REQ							,"H323_RTP_STREAM_OFF_REQ (SIP_RTP_STREAM_OFF_REQ also use this opcode)");
  AddOpcodeString( H323_RTP_STREAM_ON_REQ							,"H323_RTP_STREAM_ON_REQ (SIP_RTP_STREAM_ON_REQ also use this opcode)");

  AddOpcodeString( H323_RTP_PARTY_MONITORING_REQ					,"H323_RTP_PARTY_MONITORING_REQ (SIP_RTP_PARTY_MONITORING_REQ also use this opcode)");
  AddOpcodeString( RTP_PARTY_VIDEO_CHANNELS_STATISTICS_REQ          ,"RTP_PARTY_VIDEO_CHANNELS_STATISTICS_REQ"); //CDR_MCCF

  AddOpcodeString( H323_RTP_DBC2_COMMAND_ON_REQ						,"H323_RTP_DBC2_COMMAND_ON_REQ");
  AddOpcodeString( H323_RTP_DBC2_COMMAND_OFF_REQ					,"H323_RTP_DBC2_COMMAND_OFF_REQ");
  AddOpcodeString( ART_CONTENT_ON_REQ							    ,"ART_CONTENT_ON_REQ");
  AddOpcodeString( ART_CONTENT_OFF_REQ								,"ART_CONTENT_OFF_REQ");
  AddOpcodeString( ART_EVACUATE_REQ							    	,"ART_EVACUATE_REQ");
  AddOpcodeString( H323_RTP_LPR_MODE_CHANGE_REQ						,"H323_RTP_LPR_MODE_CHANGE_REQ (SIP_RTP_LPR_MODE_CHANGE_REQ also use this opcode)");
  AddOpcodeString( H323_RTP_LPR_MODE_RESET_REQ						,"H323_RTP_LPR_MODE_RESET_REQ (SIP_RTP_LPR_MODE_RESET_REQ also use this opcode)");

  AddOpcodeString( SIP_RTP_FECC_TOKEN_RESPONSE_REQ              	,"SIP_RTP_FECC_TOKEN_RESPONSE_REQ");
  AddOpcodeString( SIP_RTP_UPDATE_PORT_OPEN_CHANNEL_REQ				,"SIP_RTP_UPDATE_PORT_OPEN_CHANNEL_REQ");
  AddOpcodeString( SIP_RTP_UPDATE_CHANNEL_REQ						,"SIP_RTP_UPDATE_CHANNEL_REQ");
  AddOpcodeString( SIP_RTP_UPDATE_CHANNEL_RATE_REQ					,"SIP_RTP_UPDATE_CHANNEL_RATE_REQ");
  AddOpcodeString( SIP_RTP_STREAM_OFF_REQ							,"SIP_RTP_STREAM_OFF_REQ");
  AddOpcodeString( SIP_RTP_STREAM_ON_REQ							,"SIP_RTP_STREAM_ON_REQ");
  AddOpcodeString( SIP_RTP_PARTY_MONITORING_REQ						,"SIP_RTP_PARTY_MONITORING_REQ");
  AddOpcodeString( SIP_RTP_DBC2_COMMAND_ON_REQ						,"SIP_RTP_DBC2_COMMAND_ON_REQ");
  AddOpcodeString( SIP_RTP_DBC2_COMMAND_OFF_REQ						,"SIP_RTP_DBC2_COMMAND_OFF_REQ");

  //AddOpcodeString( IP_RTP_CHANGE_PARTY_TO_CHAIR						,"IP_RTP_CHANGE_PARTY_TO_CHAIR");
  //AddOpcodeString( IP_RTP_CHANGE_CHAIR_TO_PARTY						,"IP_RTP_CHANGE_CHAIR_TO_PARTY");
  AddOpcodeString( IP_RTP_SET_FECC_PARTY_TYPE						,"IP_RTP_SET_FECC_PARTY_TYPE");

  // Ip Party Mfa CM req
  AddOpcodeString( CONFPARTY_CM_OPEN_UDP_PORT_REQ						,"CONFPARTY_CM_OPEN_UDP_PORT_REQ");
  AddOpcodeString( CONF_PARTY_MRMP_OPEN_CHANNEL_REQ						,"CONF_PARTY_MRMP_OPEN_CHANNEL_REQ");
  AddOpcodeString( CONF_PARTY_MRMP_UPDATE_CHANNEL_REQ					,"CONF_PARTY_MRMP_UPDATE_CHANNEL_REQ");
  AddOpcodeString( CONF_PARTY_MRMP_CLOSE_CHANNEL_REQ					,"CONF_PARTY_MRMP_CLOSE_CHANNEL_REQ");

  AddOpcodeString( CONF_PARTY_MRMP_VIDEO_SOURCES_REQ                   ,"CONF_PARTY_MRMP_VIDEO_SOURCES_REQ");

  AddOpcodeString( CONFPARTY_CM_UPDATE_UDP_ADDR_REQ						,"CONFPARTY_CM_UPDATE_UDP_ADDR_REQ");
  AddOpcodeString( CONFPARTY_CM_CLOSE_UDP_PORT_REQ						,"CONFPARTY_CM_CLOSE_UDP_PORT_REQ");

  AddOpcodeString( SIP_CM_OPEN_UDP_PORT_REQ							,"SIP_CM_OPEN_UDP_PORT_REQ");
  AddOpcodeString( SIP_CM_UPDATE_UDP_ADDR_REQ						,"SIP_CM_UPDATE_UDP_ADDR_REQ");
  AddOpcodeString( SIP_CM_CLOSE_UDP_PORT_REQ						,"SIP_CM_CLOSE_UDP_PORT_REQ");

  AddOpcodeString( IP_CM_TIP_START_NEGOTIATION_REQ					,"IP_CM_TIP_START_NEGOTIATION_REQ");
  AddOpcodeString( IP_CM_TIP_END_NEGOTIATION_REQ 					,"IP_CM_TIP_END_NEGOTIATION_REQ");
  AddOpcodeString( IP_CM_TIP_CONTENT_MSG_REQ 					    ,"IP_CM_TIP_CONTENT_MSG_REQ");
  AddOpcodeString( IP_CM_TIP_KILL_TIP_CONTEXT_REQ 					,"IP_CM_TIP_KILL_TIP_CONTEXT_REQ");

  AddOpcodeString( IP_CM_START_PREVIEW_CHANNEL						,"IP_CM_START_PREVIEW_CHANNEL");
  AddOpcodeString( IP_CM_STOP_PREVIEW_CHANNEL						,"IP_CM_STOP_PREVIEW_CHANNEL");

  AddOpcodeString( IP_CM_RTCP_MSG_REQ             				,"IP_CM_RTCP_MSG_REQ");
  AddOpcodeString( IP_CM_RTCP_VIDEO_PREFERENCE_REQ             ,"IP_CM_RTCP_VIDEO_PREFERENCE_REQ");
  AddOpcodeString( IP_CM_RTCP_RTPFB_REQ             			,"IP_CM_RTCP_RTPFB_REQ");
  AddOpcodeString( IP_CM_RTCP_RECEIVER_BANDWIDTH_REQ           ,"IP_CM_RTCP_RECEIVER_BANDWIDTH_REQ");

  AddOpcodeString( IP_CM_BFCP_MESSAGE_REQ           				,"IP_CM_BFCP_MESSAGE_REQ");
  AddOpcodeString( IP_CM_BFCP_MESSAGE_IND 							,"IP_CM_BFCP_MESSAGE_IND" );
  AddOpcodeString( IP_CM_BFCP_TCP_TRANSPORT_IND 					,"IP_CM_BFCP_TCP_TRANSPORT_IND" );

  // Lync2013
  //=============================================================================================================
  // VSRControl
  AddOpcodeString( IP_CM_RTCP_VSR_REQ           				,"IP_CM_RTCP_VSR_REQ");
  AddOpcodeString( IP_CM_RTCP_VSR_IND           				,"IP_CM_RTCP_VSR_IND");
  AddOpcodeString( IP_CM_RTCP_DSH_IND           				,"IP_CM_RTCP_DSH_IND");

  // MS SVC PLI
  AddOpcodeString( IP_CM_RTCP_MS_SVC_PLI_REQ           				,"IP_CM_RTCP_MS_SVC_PLI_REQ");
  AddOpcodeString( IP_CM_RTCP_MS_SVC_PLI_IND           				,"IP_CM_RTCP_MS_SVC_PLI_IND");

  // Mux/Dmux
  AddOpcodeString( CONFPARTY_CM_INIT_ON_LYNC_CALL_REQ           	,"CONFPARTY_CM_INIT_ON_LYNC_CALL_REQ");
  AddOpcodeString( CONFPARTY_CM_INIT_ON_AVMCU_CALL_REQ           	,"CONFPARTY_CM_INIT_ON_AVMCU_CALL_REQ");
  AddOpcodeString( CONFPARTY_CM_MUX_ON_AVMCU_CALL_REQ           	,"CONFPARTY_CM_MUX_ON_AVMCU_CALL_REQ");
  AddOpcodeString( CONFPARTY_CM_DMUX_ON_AVMCU_CALL_REQ           	,"CONFPARTY_CM_DMUX_ON_AVMCU_CALL_REQ");
  AddOpcodeString( RTP_PARTY_MONITORING_AV_MCU_REQ              	,"RTP_PARTY_MONITORING_AV_MCU_REQ");

  //=============================================================================================================

  // Ip Party Mfa Ind
  AddOpcodeString( IP_RTP_VIDEO_UPDATE_PIC_IND						,"IP_RTP_VIDEO_UPDATE_PIC_IND");
  AddOpcodeString( IP_RTP_BAD_SPONTAN_IND							,"IP_RTP_BAD_SPONTAN_IND");
  AddOpcodeString( IP_RTP_DTMF_INPUT_IND							,"IP_RTP_DTMF_INPUT_IND");
  AddOpcodeString( IP_RTP_STREAM_STATUS_IND							,"IP_RTP_STREAM_STATUS_IND");
  AddOpcodeString( IP_CM_PARTY_MONITORING_IND						,"IP_CM_PARTY_MONITORING_IND");
  AddOpcodeString( IP_CM_PARTY_VIDEO_CHANNELS_STATISTICS_IND        ,"IP_CM_PARTY_VIDEO_CHANNELS_STATISTICS_IND"); //CDR_MCCF
  AddOpcodeString( IP_RTP_FECC_TOKEN_IND  							,"IP_RTP_FECC_TOKEN_IND");
  AddOpcodeString( IP_RTP_LPR_MODE_CHANGE_IND						,"IP_RTP_LPR_MODE_CHANGE_IND");
  AddOpcodeString( IP_RTP_DIFF_PAYLOAD_TYPE_IND  					,"IP_RTP_DIFF_PAYLOAD_TYPE_IND");
  AddOpcodeString( IP_RTP_FECC_MUTE_IND  							,"IP_RTP_FECC_MUTE_IND");
  AddOpcodeString( STARTUP_READ_MR_AND_PROFILE_DB_IND       		,"STARTUP_READ_MR_AND_PROFILE_DB_IND");
  AddOpcodeString( IP_RTP_DBA_IND									,"IP_RTP_DBA_IND");
  AddOpcodeString( IP_CM_TIP_NEGOTIATION_RESULT_IND					,"IP_CM_TIP_NEGOTIATION_RESULT_IND");
  AddOpcodeString( IP_CM_TIP_LAST_ACK_RECEIVED_IND					,"IP_CM_TIP_LAST_ACK_RECEIVED_IND");
  AddOpcodeString( IP_CM_TIP_CONTENT_MSG_IND						,"IP_CM_TIP_CONTENT_MSG_IND");
  AddOpcodeString( IP_CM_RTCP_MSG_IND						,		"IP_CM_RTCP_MSG_IND");
  AddOpcodeString( IP_RTP_ASK_ENCODER_FOR_INTRA_IND					,"IP_RTP_ASK_ENCODER_FOR_INTRA_IND");
  AddOpcodeString( IP_CM_TIP_EARLY_PACKET_IND					    ,"IP_CM_TIP_EARLY_PACKET_IND");
  AddOpcodeString( IP_MSG_UPDATE_ON_TIP_CALL_REQ 					,"IP_MSG_UPDATE_ON_TIP_CALL_REQ");
  AddOpcodeString( IP_MSG_CLOSE_TIP_CALL_REQ 					    ,"IP_MSG_CLOSE_TIP_CALL_REQ");
  //AddOpcodeString( IP_CM_TIP_KILL_OBJECT_REQ 					    ,"IP_CM_TIP_KILL_OBJECT_REQ");


//  AddOpcodeString( IP_CM_RTCP_GET_ESTIMATE_BANDWIDTH_IND			,"IP_CM_RTCP_GET_ESTIMATE_BANDWIDTH_IND");
  AddOpcodeString( IP_CM_RTCP_VIDEO_PREFERENCE_IND					,"IP_CM_RTCP_VIDEO_PREFERENCE_IND");
  AddOpcodeString( IP_CM_RTCP_RTPFB_IND								,"IP_CM_RTCP_RTPFB_IND");


  AddOpcodeString( IP_CM_RTCP_RECEIVER_BANDWIDTH_IND          		,"IP_CM_RTCP_RECEIVER_BANDWIDTH_IND");
  AddOpcodeString( IP_RTP_FECC_KEY_IND								,"IP_RTP_FECC_KEY_IND");

  AddOpcodeString( IP_CM_RTCP_PACKET_LOSS_STATUS_IND 				,"IP_CM_RTCP_PACKET_LOSS_STATUS_IND");

  AddOpcodeString( IVR_MUSIC_GET_SOURCE_REQ  						,"IVR_MUSIC_GET_SOURCE_REQ");
  AddOpcodeString( STARTUP_READ_MR_AND_PROFILE_DB_REQ  				,"STARTUP_READ_MR_AND_PROFILE_DB_REQ");
  AddOpcodeString( STARTUP_INIT_MR_DB_IND  							,"STARTUP_INIT_MR_DB_IND");
  AddOpcodeString( HW_NEW_IND 			 							,"HW_NEW_IND");
  AddOpcodeString( UPDATE_IVR_CNTR_IND 			 					,"UPDATE_IVR_CNTR_IND");
  AddOpcodeString( HW_REMOVED_PARTY_LIST_IND 			 			,"HW_REMOVED_PARTY_LIST_IND");


  AddOpcodeString( BND_CONNECTION_INIT  						,"BND_CONNECTION_INIT");
  AddOpcodeString( BND_ADD_CHANNEL  						    ,"BND_ADD_CHANNEL");
  AddOpcodeString( BND_ABORT_CALL  						        ,"BND_ABORT_CALL");
  AddOpcodeString( BND_ACK_PARAMS  						        ,"BND_ACK_PARAMS");

  AddOpcodeString( BND_END_NEGOTIATION  						,"BND_END_NEGOTIATION");
  AddOpcodeString( BND_REMOTE_LOCAL_ALIGNMENT                   ,"BND_REMOTE_LOCAL_ALIGNMENT");
  AddOpcodeString( BND_CALL_FAIL  						        ,"BND_CALL_FAIL");
  AddOpcodeString( BND_REQ_PARAMS  						        ,"BND_REQ_PARAMS");

  AddOpcodeString( H221_INIT_COMM  						        ,"H221_INIT_COMM");
  AddOpcodeString( END_INIT_COMM  						        ,"END_INIT_COMM");
  AddOpcodeString( SET_XMIT_MODE						        ,"SET_XMIT_MODE");
  AddOpcodeString( REMOTE_XMIT_MODE						        ,"REMOTE_XMIT_MODE");
  AddOpcodeString( RESTRICT_MODE  						        ,"RESTRICT_MODE");
  AddOpcodeString( EXCHANGE_CAPS  						        ,"EXCHANGE_CAPS");
  AddOpcodeString( REMOTE_BAS_CAPS						        ,"REMOTE_BAS_CAPS");
  AddOpcodeString( SET_ECS 						                ,"SET_ECS");
  AddOpcodeString( ENC_KEYS_INFO_REQ						        ,"ENC_KEYS_INFO_REQ");
  AddOpcodeString( AUDIO_COMFORT_NOISE_REQ  			        ,"AUDIO_COMFORT_NOISE_REQ");
  AddOpcodeString( SEND_H_230  						            ,"SEND_H_230");
  AddOpcodeString( REPEATED_H230  						        ,"REPEATED_H230");
  AddOpcodeString( H221_KILL_CONNECTION  						,"H221_KILL_CONNECTION");
  AddOpcodeString( H320_RTP_UPDATE_PORT_OPEN_CHANNEL_REQ		,"H320_RTP_UPDATE_PORT_OPEN_CHANNEL_REQ");
  AddOpcodeString( H320_RTP_UPDATE_CHANNEL_REQ					,"H320_RTP_UPDATE_CHANNEL_REQ");
  AddOpcodeString( H320_RTP_UPDATE_CHANNEL_RATE_REQ				,"H320_RTP_UPDATE_CHANNEL_RATE_REQ");
  AddOpcodeString( H320_RTP_VIDEO_UPDATE_PIC_IND				,"H320_RTP_VIDEO_UPDATE_PIC_IND");

  AddOpcodeString( REMOTE_MFRAME_SYNC				            ,"REMOTE_MFRAME_SYNC");
  AddOpcodeString( LOCAL_MFRAME_SYNC				            ,"LOCAL_MFRAME_SYNC");
  AddOpcodeString( REMOTE_CI        				            ,"REMOTE_CI");
  AddOpcodeString( SYNCH_LOST        				            ,"SYNCH_LOST");
  AddOpcodeString( SNMP_STATS_REQ                               ,"SNMP_STATS_REQ");
  AddOpcodeString( SNMP_CONNECTION_STATS                        ,"SNMP_CONNECTION_STATS");
  AddOpcodeString( REMOTE_ECS        				            ,"REMOTE_ECS");
  AddOpcodeString( SHARED_SECRET_INFO                           ,"SHARED_SECRET_INFO");
  AddOpcodeString( REMOTE_NS_CAPS                               ,"REMOTE_NS_CAPS");
  AddOpcodeString( BAD_REQUEST                                  ,"BAD_REQUEST");
  AddOpcodeString( SMART_RECOVERY_UPDATE                        ,"SMART_RECOVERY_UPDATE");

	AddOpcodeString(SYNC_DEL_RSRV_CONF_REQ		, "SYNC_DEL_RSRV_CONF_REQ");
	AddOpcodeString(SYNC_DEACTIVATE_MR_REQ		, "SYNC_DEACTIVATE_MR_REQ");
	AddOpcodeString(ACTIVATE_MR_REQ		        , "ACTIVATE_MR_REQ");
	AddOpcodeString(CDR_END_CONF		        , "CDR_END_CONF");

	AddOpcodeString(TERMINATE_CONF_RSRC_REQ		        , "TERMINATE_CONF_RSRC_REQ");
	AddOpcodeString(ALLOCATE_PARTY_RSRC_REQ		        , "ALLOCATE_PARTY_RSRC_REQ");
	AddOpcodeString(DEALLOCATE_PARTY_RSRC_REQ		        , "DEALLOCATE_PARTY_RSRC_REQ");
	AddOpcodeString(FORCE_DEALLOCATE_ALL_PARTIES_IN_CONF_RSRC_REQ , "FORCE_DEALLOCATE_ALL_PARTIES_IN_CONF_RSRC_REQ");
	AddOpcodeString(FORCE_DEALLOCATE_ALL_PARTIES_IN_CONF_RSRC_IND , "FORCE_DEALLOCATE_ALL_PARTIES_IN_CONF_RSRC_IND");



//  AddOpcodeString(H323_CS_SIG_GET_PORT_REQ				   		,"H323_CS_SIG_GET_PORT_REQ");
//  AddOpcodeString(H323_CS_SIG_CALL_SETUP_REQ				   	,"H323_CS_SIG_CALL_SETUP_REQ");
//  AddOpcodeString(H323_CS_SIG_GET_PORT_IND				   		,"H323_CS_SIG_GET_PORT_IND");
//  AddOpcodeString(H323_CS_SIG_CREATE_CNTL_REQ				   	,"H323_CS_SIG_CREATE_CNTL_REQ");


//	AddOpcodeString( SIP_CS_SIG_REFER_IND						,"SIP_CS_SIG_REFER_IND");
//	AddOpcodeString( SIP_CS_SIG_TRACE_INFO_IND					,"SIP_CS_SIG_TRACE_INFO_IND");
//	AddOpcodeString( SIP_CS_SIG_BAD_STATUS_IND					,"SIP_CS_SIG_BAD_STATUS_IND");


  //ice opcodes
  AddOpcodeString( ICE_MAKE_OFFER_REQ							,"ICE_MAKE_OFFER_REQ");
  AddOpcodeString( ICE_MAKE_ANSWER_REQ							,"ICE_MAKE_ANSWER_REQ");
  AddOpcodeString( ICE_PROCESS_ANSWER_REQ						,"ICE_PROCESS_ANSWER_REQ");
  AddOpcodeString( ICE_CLOSE_SESSION_REQ						,"ICE_CLOSE_SESSION_REQ");
  AddOpcodeString( ICE_MODIFY_SESSION_ANSWER_REQ				,"ICE_MODIFY_SESSION_ANSWER_REQ");
  AddOpcodeString( ICE_MODIFY_SESSION_OFFER_REQ			     	,"ICE_MODIFY_SESSION_OFFER_REQ");


  AddOpcodeString( ICE_MAKE_OFFER_IND							,"ICE_MAKE_OFFER_IND");
  AddOpcodeString( ICE_MAKE_ANSWER_IND 							,"ICE_MAKE_ANSWER_IND");
  AddOpcodeString( ICE_PROCESS_ANSWER_IND						,"ICE_PROCESS_ANSWER_IND");
  AddOpcodeString( ICE_CLOSE_SESSION_IND                       	,"ICE_CLOSE_SESSION_IND");
  AddOpcodeString( ICE_REINVITE_IND                            	,"ICE_REINVITE_IND");
  AddOpcodeString( ICE_ERR_IND                                 	,"ICE_ERR_IND");
  AddOpcodeString( ICE_MODIFY_SESSION_OFFER_IND                ,"ICE_MODIFY_SESSION_OFFER_IND");
  AddOpcodeString( ICE_MODIFY_SESSION_ANSWER_IND               ,"ICE_MODIFY_SESSION_ANSWER_IND");
  AddOpcodeString( ICE_CHECK_COMPLETE_IND                       ,"ICE_CHECK_COMPLETE_IND");
  AddOpcodeString( ICE_BANDWIDTH_EVENT_IND                       ,"ICE_BANDWIDTH_EVENT_IND");
  AddOpcodeString( ICE_INSUFFICIENT_BANDWIDTH_IND                ,"ICE_INSUFFICIENT_BANDWIDTH_IND");
  AddOpcodeString( ICE_SESSION_INDEX_IND                        ,"ICE_SESSION_INDEX_IND");

  AddOpcodeString( ALLOC_STATUS_PER_UNIT_REQ                    ,"ALLOC_STATUS_PER_UNIT_REQ");

  AddOpcodeString( CONF_FAILED_TASK                    		    ,"CONF_FAILED_TASK");
  AddOpcodeString( CONF_UPDATED_FAILED_TASK             	    ,"CONF_UPDATED_FAILED_TASK");
  AddOpcodeString(ADD_VIDEO_OPERATION_POINT_SET                 ,"ADD_VIDEO_OPERATION_POINT_SET");
  AddOpcodeString(REMOVE_VIDEO_OPERATION_POINT_SET              ,"REMOVE_VIDEO_OPERATION_POINT_SET");


  AddOpcodeString( CONF_DELETED_CONFERENCE                      ,"CONF_DELETED_CONFERENCE");
  AddOpcodeString( CONF_FAILED_CONFERENCE                       ,"CONF_FAILED_CONFERENCE");
  AddOpcodeString( CONF_UPDATED_FAILED_CONFERENCE               ,"CONF_UPDATED_FAILED_CONFERENCE");
  AddOpcodeString( GET_CONF_AND_PARTIES_RSRC_IDS_REQ            ,"GET_CONF_AND_PARTIES_RSRC_IDS_REQ");
  AddOpcodeString( GET_CONF_AND_PARTIES_RSRC_IDS_IND            ,"GET_CONF_AND_PARTIES_RSRC_IDS_IND");
  AddOpcodeString( GET_CONF_COP_RSRC_IDS_REQ             	    ,"GET_CONF_COP_RSRC_IDS_REQ");
  AddOpcodeString( GET_CONF_COP_RSRC_IDS_IND             	    ,"GET_CONF_COP_RSRC_IDS_IND");

  AddOpcodeString( GET_CONFS_AND_PARTIES_LIST_REQ               ,"GET_CONFS_AND_PARTIES_LIST_REQ");
  AddOpcodeString( GET_CONFS_AND_PARTIES_LIST_IND               ,"GET_CONFS_AND_PARTIES_LIST_IND");

  AddOpcodeString( ACTIVATE_PACKET_LOSS_REQ						,"ACTIVATE_PACKET_LOSS_REQ");
  AddOpcodeString( GET_PARTY_RSRC_ID_REQ          	,"GET_PARTY_RSRC_ID_REQ");
  AddOpcodeString( GET_PARTY_RSRC_ID_IND             	,"GET_PARTY_RSRC_ID_IND");

  /* FIR  */
  AddOpcodeString( CONF_PARTY_MRMP_RTCP_FIR_REQ					,"CONF_PARTY_MRMP_RTCP_FIR_REQ");
  AddOpcodeString( CONF_PARTY_MRMP_RTCP_FIR_IND					,"CONF_PARTY_MRMP_RTCP_FIR_IND");

  //AddOpcodeString(  CONF_PARTY_MRMP_RTCP_FIR_IND						,"CONF_PARTY_MRMP_RTCP_FIR_IND");
  //AddOpcodeString(  CONF_PARTY_MRMP_RTCP_FIR_REQ						,"CONF_PARTY_MRMP_RTCP_FIR_REQ");

  /* SCP */
  AddOpcodeString( CONF_PARTY_MRMP_SCP_STREAM_REQ_IND					,"CONF_PARTY_MRMP_SCP_STREAM_REQ_IND");
  AddOpcodeString( CONF_PARTY_MRMP_SCP_STREAM_ACK_REQ					,"CONF_PARTY_MRMP_SCP_STREAM_ACK_REQ");
  AddOpcodeString( CONF_PARTY_MRMP_SCP_STREAM_NOTIFICATION_REQ			,"CONF_PARTY_MRMP_SCP_STREAM_NOTIFICATION_REQ");
  AddOpcodeString( CONF_PARTY_MRMP_SCP_STREAM_NOTIFICATION_ACK_IND		,"CONF_PARTY_MRMP_SCP_STREAM_NOTIFICATION_ACK_IND");
  AddOpcodeString( CONF_PARTY_MRMP_SCP_STREAM_NOTIFICATION_IND			,"CONF_PARTY_MRMP_SCP_STREAM_NOTIFICATION_IND");
  AddOpcodeString( CONF_PARTY_MRMP_SCP_STREAM_NOTIFICATION_ACK_REQ		,"CONF_PARTY_MRMP_SCP_STREAM_NOTIFICATION_ACK_REQ");
  AddOpcodeString( CONF_PARTY_MRMP_SCP_IVR_STATE_NOTIFICATION_REQ		,"CONF_PARTY_MRMP_SCP_IVR_STATE_NOTIFICATION_REQ");
  AddOpcodeString( CONF_PARTY_MRMP_SCP_PIPES_MAPPING_NOTIFICATION_REQ	,"CONF_PARTY_MRMP_SCP_PIPES_MAPPING_NOTIFICATION_REQ");

  /* Party Monitoring */
  AddOpcodeString( CONF_PARTY_MRMP_PARTY_MONITORING_REQ					,"CONF_PARTY_MRMP_PARTY_MONITORING_REQ");
  AddOpcodeString( CONF_PARTY_MRMP_PARTY_MONITORING_IND					,"CONF_PARTY_MRMP_PARTY_MONITORING_IND");

  /*DTLS*/
  AddOpcodeString( IP_CM_DTLS_START_REQ									,"IP_CM_DTLS_START_REQ");
  AddOpcodeString( IP_CM_DTLS_END_IND									,"IP_CM_DTLS_END_IND");
  AddOpcodeString( IP_CM_DTLS_CLOSE_REQ									,"IP_CM_DTLS_CLOSE_REQ");

  AddOpcodeString( IP_CM_MEDIA_DISCONNECTED_IND							,"IP_CM_MEDIA_DISCONNECTED_IND");

  AddOpcodeString( CG_PLAY_AUDIO_REQ									,"CG_PLAY_AUDIO_REQ");

  // optimization for SVC
  AddOpcodeString(  CONF_PARTY_MRMP_STREAM_IS_MUST_REQ						," CONF_PARTY_MRMP_STREAM_IS_MUST_REQ");

	//CCCP
	AddOpcodeString(SIP_CS_SIG_BENOTIFY_IND   , "SIP_CS_SIG_BENOTIFY_IND");
	AddOpcodeString(SIP_CS_CCCP_SIG_INVITE_IND, "SIP_CS_CCCP_SIG_INVITE_IND");
	AddOpcodeString(SIP_CS_CCCP_SIG_INVITE_REQ, "SIP_CS_CCCP_SIG_INVITE_REQ");

  //WebRtc
  AddOpcodeString(IP_CM_WEBRTC_CONNECT_REQ , "IP_CM_WEBRTC_CONNECT_REQ ");
  AddOpcodeString(IP_CM_WEBRTC_DISCONNECT_REQ , "IP_CM_WEBRTC_DISCONNECT_REQ ");
  AddOpcodeString(IP_CM_WEBRTC_CONNECT_IND , "IP_CM_WEBRTC_CONNECT_IND ");
}

void COpcodeStringConverter::InitOpcodeStringProcessCS()
{}

void COpcodeStringConverter::InitOpcodeStringProcessCSApi()
{
	AddOpcodeString(CSAPI_MSG						   ,"CSAPI_MSG");
	AddOpcodeString(CS_TERMINAL_COMMAND_REQ			   ,"CS_TERMINAL_COMMAND_REQ");

	AddOpcodeString(BASIC_MSG_TO_CS_API, "BASIC_MSG_TO_CS_API");
	AddOpcodeString(CS_API_MSG_TO_CS, "CS_API_MSG_TO_CS");
}

void COpcodeStringConverter::InitOpcodeStringProcessCSMngr()
{
	// Central Signaling Module
	AddOpcodeString(CS_NEW_REQ				, "CS_NEW_REQ");
	AddOpcodeString(CS_CONFIG_PARAM_REQ		, "CS_CONFIG_PARAM_REQ");
	AddOpcodeString(CS_LAN_CFG_REQ			, "CS_LAN_CFG_REQ");
	AddOpcodeString(CS_RECONNECT_REQ		, "CS_RECONNECT_REQ");
	AddOpcodeString(CS_NEW_SERVICE_INIT_REQ	, "CS_NEW_SERVICE_INIT_REQ");
	AddOpcodeString(CS_COMMON_PARAM_REQ		, "CS_COMMON_PARAM_REQ");
	AddOpcodeString(CS_END_CONFIG_PARAM_REQ	, "CS_END_CONFIG_PARAM_REQ");
	AddOpcodeString(CS_END_SERVICE_INIT_REQ	, "CS_END_SERVICE_INIT_REQ");
	AddOpcodeString(CS_DEL_SERVICE_REQ		, "CS_DEL_SERVICE_REQ");
    AddOpcodeString(CS_PING_REQ		        , "CS_PING_REQ");
	AddOpcodeString(CS_NEW_IND				, "CS_NEW_IND");
	AddOpcodeString(CS_CONFIG_PARAM_IND		, "CS_CONFIG_PARAM_IND");
	AddOpcodeString(CS_END_CONFIG_PARAM_IND	, "CS_END_CONFIG_PARAM_IND");
	AddOpcodeString(CS_END_CS_STARTUP_IND	, "CS_END_CS_STARTUP_IND");
	AddOpcodeString(CS_RECONNECT_IND		, "CS_RECONNECT_IND");
	AddOpcodeString(CS_NEW_SERVICE_INIT_IND	, "CS_NEW_SERVICE_INIT_IND");
	AddOpcodeString(CS_COMMON_PARAM_IND		, "CS_COMMON_PARAM_IND");
	AddOpcodeString(CS_END_SERVICE_INIT_IND	, "CS_END_SERVICE_INIT_IND");
	AddOpcodeString(CS_DEL_SERVICE_IND		, "CS_DEL_SERVICE_IND");
	AddOpcodeString(CS_KEEP_ALIVE_REQ		, "CS_KEEP_ALIVE_REQ");
	AddOpcodeString(CS_LAST_STARTUP_REQ		, "CS_LAST_STARTUP_REQ");
	AddOpcodeString(CS_KEEP_ALIVE_IND		, "CS_KEEP_ALIVE_IND");
	AddOpcodeString(CS_COMP_STATUS_IND		, "CS_COMP_STATUS_IND");
	AddOpcodeString(CS_USER_MSG_IND			, "CS_USER_MSG_IND");
    AddOpcodeString(CS_PING_IND		        , "CS_PING_IND");
	AddOpcodeString(CS_LAST_STARTUP_IND		, "CS_LAST_STARTUP_IND");
	AddOpcodeString(SIGNALING_TASK_NOT_CREATED_REQ, "SIGNALING_TASK_NOT_CREATED_REQ");

	// McuMngr
//	AddOpcodeString(CS_MCU_NUM_OF_PORTS_REQ		, "CS_MCU_NUM_OF_PORTS_REQ");
//	AddOpcodeString(CS_MCU_NUM_OF_PORTS_IND		, "CS_MCU_NUM_OF_PORTS_IND");
	AddOpcodeString(CS_MCU_DELETE_IP_SERVICE_IND, "CS_MCU_DELETE_IP_SERVICE_IND");
	AddOpcodeString(CSMNGR_TO_MCUMNGR_IP_TYPE_REQ, "CSMNGR_TO_MCUMNGR_IP_TYPE_REQ");
	AddOpcodeString(CSMNGR_TO_MCUMNGR_V35GW_UPDATE_IND, "CSMNGR_TO_MCUMNGR_V35GW_UPDATE_IND");

	// Cards
	AddOpcodeString(CS_CARDS_MEDIA_IP_PARAMS_REQ	, "CS_CARDS_MEDIA_IP_PARAMS_REQ");
	AddOpcodeString(CS_CARDS_MEDIA_IP_PARAMS_IND	, "CS_CARDS_MEDIA_IP_PARAMS_IND");
	AddOpcodeString(CS_CARDS_MEDIA_IP_PARAMS_END_IND, "CS_CARDS_MEDIA_IP_PARAMS_END_IND");
	AddOpcodeString(CS_CARDS_MEDIA_IP_CONFIG_IND	, "CS_CARDS_MEDIA_IP_CONFIG_IND");
	AddOpcodeString(CS_CARDS_MS_CS_IP_CONFIG_END	, "CS_CARDS_MS_CS_IP_CONFIG_END");
	AddOpcodeString(CS_CARDS_DELETE_IP_SERVICE_IND	, "CS_CARDS_DELETE_IP_SERVICE_IND");
	AddOpcodeString(CS_ETH_SETTING_IND				, "CS_ETH_SETTING_IND");

	// ConfParty
	AddOpcodeString(CS_CONF_IP_SERVICE_PARAM_REQ	, "CS_CONF_IP_SERVICE_PARAM_REQ");
	AddOpcodeString(CS_CONF_IP_SERVICE_PARAM_IND	, "CS_CONF_IP_SERVICE_PARAM_IND");
	AddOpcodeString(CS_CONF_IP_SERVICE_PARAM_END_IND, "CS_CONF_IP_SERVICE_PARAM_END_IND");
	AddOpcodeString(CS_CONF_DELETE_IP_SERVICE_IND	, "CS_CONF_DELETE_IP_SERVICE_IND");

	// Rsrc
	AddOpcodeString(CS_RSRC_IP_SERVICE_PARAM_REQ	, "CS_RSRC_IP_SERVICE_PARAM_REQ");
	AddOpcodeString(CS_RSRC_IP_SERVICE_PARAM_IND	, "CS_RSRC_IP_SERVICE_PARAM_IND");
	AddOpcodeString(CS_RSRC_IP_SERVICE_PARAM_END_IND, "CS_RSRC_IP_SERVICE_PARAM_END_IND");
	AddOpcodeString(CS_RSRC_DELETE_IP_SERVICE_IND	, "CS_RSRC_DELETE_IP_SERVICE_IND");
    AddOpcodeString(CS_RSRC_UPDATE_IPV6_SERVICE_PARAM_REQ,      "CS_RSRC_UPDATE_IPV6_SERVICE_PARAM_REQ");

	// Proxy
	AddOpcodeString(CS_PROXY_IP_SERVICE_PARAM_REQ		, "CS_PROXY_IP_SERVICE_PARAM_REQ");
	AddOpcodeString(CS_PROXY_IP_SERVICE_PARAM_IND		, "CS_PROXY_IP_SERVICE_PARAM_IND");
	AddOpcodeString(CS_PROXY_IP_SERVICE_PARAM_END_IND	, "CS_PROXY_IP_SERVICE_PARAM_END_IND");
	AddOpcodeString(CS_PROXY_DELETE_IP_SERVICE_IND		, "CS_PROXY_DELETE_IP_SERVICE_IND");
	AddOpcodeString(CS_PROXY_CS_UP_IND					, "CS_PROXY_CS_UP_IND");
	AddOpcodeString(CS_PROXY_REGISTRAR_STATUS_UPDATE_IND	, "CS_PROXY_REGISTRAR_STATUS_UPDATE_IND");

	//ICE
	AddOpcodeString(ICE_IP_SERVICE_PARAM_REQ		, "ICE_IP_SERVICE_PARAM_REQ");


	// DNS Agent
	AddOpcodeString(CS_DNS_AGENT_RESOLVE_IND			, "CS_DNS_AGENT_RESOLVE_IND");
	AddOpcodeString(CS_DNS_AGENT_DELETE_IP_SERVICE_IND	, "CS_DNS_AGENT_DELETE_IP_SERVICE_IND");

	// GK
	AddOpcodeString(CS_GKMNGR_UPDATE_SERVICE_PROPERTIES_REQ				, "CS_GKMNGR_UPDATE_SERVICE_PROPERTIES_REQ");
	AddOpcodeString(CS_GKMNGR_CLEAR_GK_PARAMS_FROM_PROPERTIES_REQ	, "CS_GKMNGR_CLEAR_GK_PARAMS_FROM_PROPERTIES_REQ");
	AddOpcodeString(CS_GKMNGR_SET_GK_IP_IN_PROPERTIES_REQ				, "CS_GKMNGR_SET_GK_IP_IN_PROPERTIES_REQ");
	AddOpcodeString(CS_GKMNGR_SET_GK_ID_IN_PROPERTIES_REQ	, "CS_GKMNGR_SET_GK_ID_IN_PROPERTIES_REQ");
	AddOpcodeString(CS_GKMNGR_SET_GK_NAME_IN_PROPERTIES_REQ	, "CS_GKMNGR_SET_GK_NAME_IN_PROPERTIES_REQ");
	AddOpcodeString(CS_GKMNGR_IP_SERVICE_PARAM_IND	, "CS_GKMNGR_IP_SERVICE_PARAM_IND");

	AddOpcodeString(DNS_HOST_REGISTRATION_REQ, "DNS_HOST_REGISTRATION_REQ");
	AddOpcodeString(DNS_HOST_REGISTRATION_IND, "DNS_HOST_REGISTRATION_IND");
	AddOpcodeString(CS_SERVICE_CFG_UPDATE_IND, "CS_SERVICE_CFG_UPDATE_IND");

	AddOpcodeString(CS_RSRC_UDP_PORT_RANGE_IND, "CS_RSRC_UDP_PORT_RANGE_IND");
	AddOpcodeString(CS_RSRC_CFS_IND, "CS_RSRC_CFS_IND");

	AddOpcodeString(CS_TCPDUMP_IP_SERVICE_PARAM_IND, "CS_TCPDUMP_IP_SERVICE_PARAM_IND");
	AddOpcodeString(CS_TCPDUMP_IP_SERVICE_PARAM_END_IND, "CS_TCPDUMP_IP_SERVICE_PARAM_END_IND");
	AddOpcodeString(CS_TCPDUMP_DELETE_IP_SERVICE_IND, "CS_TCPDUMP_DELETE_IP_SERVICE_IND");
	AddOpcodeString(CS_TCPDUMP_IP_SERVICE_PARAM_REQ, "CS_TCPDUMP_IP_SERVICE_PARAM_REQ");
	AddOpcodeString(TCPDUMP_REQUEST_IP_SERVICE_TIMER, "TCPDUMP_REQUEST_IP_SERVICE_TIMER");

	// 16980115
	AddOpcodeString(CS_MCUMNGR_IP_SERVICE_PARAM_IND,		"CS_MCUMNGR_IP_SERVICE_PARAM_IND");
	// 16980118
	AddOpcodeString(CSMNGR_MCUMNGR_IP_SERVICE_PARAM_REQ,	"CSMNGR_MCUMNGR_IP_SERVICE_PARAM_REQ");
	// 16980124
	AddOpcodeString(CSMNGR_TO_MCMSDAEMON_START_SIGNALING,	"CSMNGR_TO_MCMSDAEMON_START_SIGNALING");
	//16980125
	AddOpcodeString(CSMNGR_CERTMNGR_IP_SERVICE_PARAM_REQ,	"CSMNGR_CERTMNGR_IP_SERVICE_PARAM_REQ");
	// 16980126
	AddOpcodeString(CS_CERTMNGR_IP_SERVICE_PARAM_IND,		"CS_CERTMNGR_IP_SERVICE_PARAM_IND");
	// 16980127
	AddOpcodeString(CS_CERTMNGR_IP_SERVICE_PARAM_END_IND,	"CS_CERTMNGR_IP_SERVICE_PARAM_END_IND");
	// 16980128
	AddOpcodeString(CS_CERTMNGR_DELETE_IP_SERVICE_IND,		"CS_CERTMNGR_DELETE_IP_SERVICE_IND");
	// 16980129
	AddOpcodeString(CSMNGR_SIP_SERVER_TYPE_IND,				"CSMNGR_SIP_SERVER_TYPE_IND");
	// 16980130
	AddOpcodeString(CS_UTILITY_MEDIA_IP_PARAMS_IND	, "CS_UTILITY_MEDIA_IP_PARAMS_IND");

	AddOpcodeString(CS_UTILITY_IS_UP_TIMER	, "CS_UTILITY_IS_UP_TIMER");
	AddOpcodeString(CHECK_ETH2_CS_TIMER	, "CHECK_ETH2_CS_TIMER");
	AddOpcodeString(FIRE_CHECK_ETH2_CS	, "FIRE_CHECK_ETH2_CS");
	
	
	AddOpcodeString(SIGNALINGTASK_TO_CSMNGR_SERVICE_UP_IND	, "SIGNALINGTASK_TO_CSMNGR_SERVICE_UP_IND");
	AddOpcodeString(CSMNGR_GET_SERVICE_INFO_TIMER	, "CSMNGR_GET_SERVICE_INFO_TIMER");
}

void COpcodeStringConverter::InitOpcodeStringProcessDemo()
{}

void COpcodeStringConverter::InitOpcodeStringProcessDiagnostics()
{}

void COpcodeStringConverter::InitOpcodeStringProcessDNSAgent()
{
	AddOpcodeString(DNS_RESOLVE_IND								, "DNS_RESOLVE_IND");
	AddOpcodeString(DNS_SERVICE_IND								, "DNS_SERVICE_IND");
	AddOpcodeString(DNSAGENT_MCUMNGR_CONFIGURATION_IND			, "DNSAGENT_MCUMNGR_CONFIGURATION_IND");

	AddOpcodeString(DNS_CS_RESOLVE_REQ, 				"DNS_CS_RESOLVE_REQ");
	AddOpcodeString(DNS_CS_SERVICE_REQ, 				"DNS_CS_SERVICE_REQ");
	AddOpcodeString(DNS_CS_RESOLVE_IND, 				"DNS_CS_RESOLVE_IND");
	AddOpcodeString(DNS_CS_SERVICE_IND, 				"DNS_CS_SERVICE_IND");
    //-S-PLCM_DNS---------------------------------------------//
	ADD_OPCODE(DNSAGENT_TO_CSMNGR_GET_IPCONFIG);    // 18980028 
	ADD_OPCODE(CSMNGR_TO_DNSAGENT_CS_CONFIGURED);   // 18980029
	//-E-PLCM_DNS---------------------------------------------//
}

void COpcodeStringConverter::InitOpcodeStringProcessEncryptionKeyServer()
{
	AddOpcodeString(GET_HALF_KEY_IND, "GET_HALF_KEY_IND");
	AddOpcodeString(START_CREATE_KEYS_REQ, "START_CREATE_KEYS_REQ");
	AddOpcodeString(START_FILLING_ENCRYP_KEY_POLYCOM_DH_GEN_TABLE_TOUT,"START_FILLING_ENCRYP_KEY_POLYCOM_DH_GEN_TABLE_TOUT");
	AddOpcodeString(START_FILLING_ENCRYP_KEY_TANBERG_H323_DH_GEN_TABLE_TOUT , "START_FILLING_ENCRYP_KEY_TANBERG_H323_DH_GEN_TABLE_TOUT");
	AddOpcodeString(START_FILLING_ENCRYP_KEY_TANBERG_H320_DH_GEN_TABLE_TOUT, "START_FILLING_ENCRYP_KEY_TANBERG_H320_DH_GEN_TABLE_TOUT");
	AddOpcodeString(DELAY_BETWEEN_GENERATE_ENC_KEY_TOUT, "DELAY_BETWEEN_GENERATE_ENC_KEY_TOUT");
	AddOpcodeString(DELAY_BETWEEN_ENC_KEY_CHECK_TH_TOUT, "DELAY_BETWEEN_ENC_KEY_CHECK_TH_TOUT");	
}

void COpcodeStringConverter::InitOpcodeStringProcessEndpointsSim()
{
	if (IsTarget())
		return;
	AddOpcodeString(GIDEON_MSG, "GIDEON_MSG");
	AddOpcodeString(CONNECT_CS_SOCKET, "CONNECT_CS_SOCKET");
	AddOpcodeString(GUI_SOCKET_RCV_MSG, "GUI_SOCKET_RCV_MSG");
	AddOpcodeString(SIM_CS_RCV_MSG, "SIM_CS_RCV_MSG");
	AddOpcodeString(BATCH_COMMAND, 	"BATCH_COMMAND");


	AddOpcodeString(UPDATE_ENDPS_MBX, "UPDATE_ENDPS_MBX");
	AddOpcodeString(UPDATE_CS_MBX, "UPDATE_CS_MBX");
	AddOpcodeString(SEND_TO_CSAPI, "SEND_TO_CSAPI");
	AddOpcodeString(GUI_TO_ENDPOINTS, "GUI_TO_ENDPOINTS");
	AddOpcodeString(GUI_TO_MANAGER, "GUI_TO_MANAGER");
	AddOpcodeString(ENDPOINTS_TO_GUI, "ENDPOINTS_TO_GUI");

	AddOpcodeString(CSAPI_TO_PROXY, "CSAPI_TO_PROXY");
	AddOpcodeString(UPDATE_PROXY_MBX, "UPDATE_PROXY_MBX");
	AddOpcodeString(PROXY_REMOVE_CONF, "PROXY_REMOVE_CONF");
	AddOpcodeString(GUI_TO_SCRIPTS, "GUI_TO_SCRIPTS");
	AddOpcodeString(SCRIPTS_TO_GUI, "SCRIPTS_TO_GUI");
	AddOpcodeString(GK_REMOVE_SERVICE, "GK_REMOVE_SERVICE");
	AddOpcodeString(UPDATE_GK_MBX, "UPDATE_GK_MBX");
	AddOpcodeString(SC_MSG_TO_MNGR, "SC_MSG_TO_MNGR");

	AddOpcodeString(GUI_TO_GATEKEEPER, "GUI_TO_GATEKEEPER");

	AddOpcodeString(BATCH_ADD_PARTY, "BATCH_ADD_PARTY");
	AddOpcodeString(BATCH_DEL_PARTY, "BATCH_DEL_PARTY");
	AddOpcodeString(BATCH_CONNECT_PARTY, "BATCH_CONNECT_PARTY");
	AddOpcodeString(BATCH_DISCONNECT_PARTY, "BATCH_DISCONNECT_PARTY");
	AddOpcodeString(BATCH_DTMF_PARTY, "BATCH_DTMF_PARTY");
	AddOpcodeString(BATCH_ACTIVE_SPEAKER, "BATCH_ACTIVE_SPEAKER");
	AddOpcodeString(BATCH_MUTE, "BATCH_MUTE");
	AddOpcodeString(BATCH_UNMUTE, "BATCH_UNMUTE");
	AddOpcodeString(BATCH_FECC_TOKEN_REQUEST, "BATCH_FECC_TOKEN_REQUEST");
	AddOpcodeString(BATCH_FECC_TOKEN_RELEASE, "BATCH_FECC_TOKEN_RELEASE");
	AddOpcodeString(BATCH_AUDIO_SPEAKER, "BATCH_AUDIO_SPEAKER");
	AddOpcodeString(BATCH_CHANGEMODE_PARTY, "BATCH_CHANGEMODE_PARTY");
	AddOpcodeString(BATCH_ADD_CAPSET, "BATCH_ADD_CAPSET");
	AddOpcodeString(BATCH_DEL_CAPSET, "BATCH_DEL_CAPSET");
	AddOpcodeString(BATCH_H239_TOKEN_REQUEST, "BATCH_H239_TOKEN_REQUEST");
	AddOpcodeString(BATCH_H239_TOKEN_RELEASE, "BATCH_H239_TOKEN_RELEASE");
	AddOpcodeString(BATCH_CHANNELS_UPDATE, "BATCH_CHANNELS_UPDATE");
	AddOpcodeString(BATCH_SET_PARTY_CAPSET, "BATCH_SET_PARTY_CAPSET");
	AddOpcodeString(BATCH_LPR_MODE_CHANGE_REQUEST, "BATCH_LPR_MODE_CHANGE_REQUEST");
	AddOpcodeString(BATCH_FECC_KEY_REQUEST, "BATCH_FECC_KEY_REQUEST");

}

void COpcodeStringConverter::InitOpcodeStringProcessExchangeModule()
{}

void COpcodeStringConverter::InitOpcodeStringProcessFailover()
{
	AddOpcodeString(MASTER_KEEP_ALIVE_TIMER_SEND,				"MASTER_KEEP_ALIVE_TIMER_SEND");
	AddOpcodeString(MASTER_KEEP_ALIVE_TIMER_FAILURE,			"MASTER_KEEP_ALIVE_TIMER_FAILURE");
	AddOpcodeString(MASTER_DOWN_IND,							"MASTER_DOWN_IND");
	AddOpcodeString(FAILOVER_MCUMNGR_CONFIG_REQ,				"FAILOVER_MCUMNGR_CONFIG_REQ");
	AddOpcodeString(FAILOVER_MCUMNGR_CONFIG_IND,				"FAILOVER_MCUMNGR_CONFIG_IND");
	AddOpcodeString(FAILOVER_AUTHENTICATION_CONFIG_REQ,			"FAILOVER_AUTHENTICATION_CONFIG_REQ");
	AddOpcodeString(FAILOVER_AUTHENTICATION_CONFIG_IND,			"FAILOVER_AUTHENTICATION_CONFIG_IND");
	AddOpcodeString(FAILOVER_START_SLAVE,						"FAILOVER_START_SLAVE");
	AddOpcodeString(FAILOVER_START_MASTER,						"FAILOVER_START_MASTER");
	AddOpcodeString(FAILOVER_SOCKET_RCV_IND,					"FAILOVER_SOCKET_RCV_IND");
	AddOpcodeString(FAILOVER_CONFPARTY_ADD_OR_UPDATE_CONF_IND,	"FAILOVER_CONFPARTY_ADD_OR_UPDATE_CONF_IND");
	AddOpcodeString(FAILOVER_CONFPARTY_TERMINATE_CONF_IND,		"FAILOVER_CONFPARTY_TERMINATE_CONF_IND");
	AddOpcodeString(FAILOVER_CSMNGR_UPDATE_SERVICE_IND,			"FAILOVER_CSMNGR_UPDATE_SERVICE_IND");
	AddOpcodeString(FAILOVER_MCUMNGR_UPDATE_MNGMNT_IND,			"FAILOVER_MCUMNGR_UPDATE_MNGMNT_IND");
	AddOpcodeString(FAILOVER_CONFPARTY_ADD_OR_UPDATE_PROFILE_IND,"FAILOVER_CONFPARTY_ADD_OR_UPDATE_PROFILE_IND");
	AddOpcodeString(FAILOVER_CONFPARTY_TERMINATE_PROFILE_IND,	 "FAILOVER_CONFPARTY_TERMINATE_PROFILE_IND");
	AddOpcodeString(SYNC_ONGOING_CONFERENCES_TIMER,				 "SYNC_ONGOING_CONFERENCES_TIMER");
	AddOpcodeString(FAILOVER_LOGIN_ARRIVED,				 		 "FAILOVER_LOGIN_ARRIVED");
	AddOpcodeString(WHOLE_SYNC_COMPLETED_IND,				 	 "WHOLE_SYNC_COMPLETED_IND");
	AddOpcodeString(FAILOVER_SET_PARAMS_IND,				 	 "FAILOVER_SET_PARAMS_IND");
}

void COpcodeStringConverter::InitOpcodeStringProcessGideonSim()
{
	AddOpcodeString(SIM_WAIT_TIMER 		  		  ,"SIM_WAIT_TIMER");
	AddOpcodeString(SIM_GUI_SOCKET_RCV_MSG 		  ,"SIM_GUI_SOCKET_RCV_MSG");
	AddOpcodeString(SIM_MESSAGE_FOR_LOGGER 		  ,"SIM_MESSAGE_FOR_LOGGER");
	AddOpcodeString(SIM_PCM_SOCKET_RCV_MSG 		  ,"SIM_PCM_SOCKET_RCV_MSG");
	AddOpcodeString(SIM_PCM_TIMER 		  		  ,"SIM_PCM_TIMER");
	AddOpcodeString(EPGUI_PCM_SOCKET_RCV_MSG 	  ,"EPGUI_PCM_SOCKET_RCV_MSG");
}

void COpcodeStringConverter::InitOpcodeStringProcessGatekeeper()
{
	AddOpcodeString(H323_CS_RAS_GRQ_REQ,     		"H323_CS_RAS_GRQ_REQ");
	AddOpcodeString(H323_CS_RAS_RRQ_REQ,     		"H323_CS_RAS_RRQ_REQ");
	AddOpcodeString(H323_CS_RAS_URQ_REQ,     		"H323_CS_RAS_URQ_REQ");
	AddOpcodeString(H323_CS_RAS_URQ_RESPONSE_REQ,   "H323_CS_RAS_URQ_RESPONSE_REQ");
	AddOpcodeString(H323_CS_RAS_DRQ_RESPONSE_REQ,   "H323_CS_RAS_DRQ_RESPONSE_REQ");
	AddOpcodeString(H323_CS_RAS_ARQ_REQ,            "H323_CS_RAS_ARQ_REQ");
	AddOpcodeString(H323_CS_RAS_BRQ_REQ,            "H323_CS_RAS_BRQ_REQ");
	AddOpcodeString(H323_CS_RAS_IRR_REQ,            "H323_CS_RAS_IRR_REQ");
	AddOpcodeString(H323_CS_RAS_IRR_RESPONSE_REQ,   "H323_CS_RAS_IRR_RESPONSE_REQ");
	AddOpcodeString(H323_CS_RAS_DRQ_REQ,            "H323_CS_RAS_DRQ_REQ");
	AddOpcodeString(H323_CS_RAS_LRQ_RESPONSE_REQ,   "H323_CS_RAS_LRQ_RESPONSE_REQ");
	AddOpcodeString(H323_CS_RAS_REMOVE_GK_CALL_REQ, "H323_CS_RAS_REMOVE_GK_CALL_REQ");
	AddOpcodeString(H323_CS_RAS_BRQ_RESPONSE_REQ,   "H323_CS_RAS_BRQ_RESPONSE_REQ");
    AddOpcodeString(H323_CS_RAS_RAI_REQ,            "H323_CS_RAS_RAI_REQ");

	AddOpcodeString(H323_CS_RAS_GRQ_IND, 			"H323_CS_RAS_GRQ_IND");
	AddOpcodeString(H323_CS_RAS_RRQ_IND, 			"H323_CS_RAS_RRQ_IND");
	AddOpcodeString(H323_CS_RAS_URQ_IND, 			"H323_CS_RAS_URQ_IND");
	AddOpcodeString(H323_CS_RAS_ARQ_IND, 			"H323_CS_RAS_ARQ_IND");
	AddOpcodeString(H323_CS_RAS_BRQ_IND, 			"H323_CS_RAS_BRQ_IND");
	AddOpcodeString(H323_CS_RAS_DRQ_IND, 			"H323_CS_RAS_DRQ_IND");
	AddOpcodeString(H323_CS_RAS_FAIL_IND, 			"H323_CS_RAS_FAIL_IND");
	AddOpcodeString(H323_CS_RAS_TIMEOUT_IND, 		"H323_CS_RAS_TIMEOUT_IND");
	AddOpcodeString(H323_CS_RAS_GKURQ_IND, 			"H323_CS_RAS_GKURQ_IND");
	AddOpcodeString(H323_CS_RAS_GKDRQ_IND, 			"H323_CS_RAS_GKDRQ_IND");
	AddOpcodeString(H323_CS_RAS_GKBRQ_IND, 			"H323_CS_RAS_GKBRQ_IND");
	AddOpcodeString(H323_CS_RAS_GKLRQ_IND, 			"H323_CS_RAS_GKLRQ_IND");
	AddOpcodeString(H323_CS_RAS_GKIRQ_IND, 			"H323_CS_RAS_GKIRQ_IND");
    AddOpcodeString(H323_CS_RAS_RAC_IND , 			"H323_CS_RAS_RAC_IND");
}

void COpcodeStringConverter::InitOpcodeStringProcessInstaller()
{
	AddOpcodeString(INSTALLER_KEYCODE_UPDATE_IND,		"INSTALLER_KEYCODE_UPDATE_IND");
	AddOpcodeString(INSTALLER_AUTHETICATION_REMOVE_ENC_OPERATOR_FILE,		"INSTALLER_AUTHETICATION_REMOVE_ENC_OPERATOR_FILE");
	AddOpcodeString(INSTALLER_AUTHENTICATION_STRUCT_REQ,		"INSTALLER_AUTHENTICATION_STRUCT_REQ");
}

void COpcodeStringConverter::InitOpcodeStringProcessIPMCInterface(void)
{
	AddOpcodeString(IPMC_INITIALIZE_LEDS, "IPMC_INITIALIZE_LEDS");
	AddOpcodeString(IPMC_CHANGE_LED_STATE, "IPMC_CHANGE_LED_STATE");
	AddOpcodeString(IPMC_SET_WATCHDOG, "IPMC_SET_WATCHDOG");
	AddOpcodeString(IPMC_TRIGGER_WATCHDOG, "IPMC_TRIGGER_WATCHDOG");
	AddOpcodeString(IPMC_TURN_OFF_WATCHDOG, "IPMC_TURN_OFF_WATCHDOG");
	AddOpcodeString(IPMC_SET_POST_COMMAND, "IPMC_SET_POST_COMMAND");
	AddOpcodeString(IPMC_CPU_TEMPERATURE, "IPMC_CPU_TEMPERATURE");
	AddOpcodeString(IPMC_HDD_TEMPERATURE, "IPMC_HDD_TEMPERATURE");
	AddOpcodeString(IPMC_UPGRADE_VERSION, "IPMC_UPGRADE_VERSION");
}

void COpcodeStringConverter::InitOpcodeStringProcessLdapModule()
{
	// 31090001
	AddOpcodeString(LDAP_MODULE_AD_SERVER_AVAILABE_REQ,		"LDAP_MODULE_AD_SERVER_AVAILABE_REQ");

	AddOpcodeString(LDAP_MODULE_AD_SERVER_AVAILABE_IND , "LDAP_MODULE_AD_SERVER_AVAILABE_IND");
	AddOpcodeString(LDAP_AUTHENTICATION_LOGIN_REQ, "LDAP_AUTHENTICATION_LOGIN_REQ");
	AddOpcodeString(LDAP_AUTHENTICATION_LOGIN_IND, "LDAP_AUTHENTICATION_LOGIN_IND");
	AddOpcodeString(LDAP_AUTHENTICATION_LOGIN_RESPONSE_TIMER, "LDAP_AUTHENTICATION_LOGIN_RESPONSE_TIMER");
	AddOpcodeString(LDAP_CLIENT_CHECK_SERVER_AVAILABILITY_TIMER, "LDAP_CLIENT_CHECK_SERVER_AVAILABILITY_TIMER");
	AddOpcodeString(CHECK_USER_LIST_FOR_LDAP_REQ, "CHECK_USER_LIST_FOR_LDAP_REQ");
	AddOpcodeString(CHECK_USER_LIST_FOR_LDAP_IND, "CHECK_USER_LIST_FOR_LDAP_IND");
	AddOpcodeString(LDAP_ADD_ACTIVE_ALARM, "LDAP_ADD_ACTIVE_ALARM");
	AddOpcodeString(CHECK_AD_SERVER_AVAILABILITY, "CHECK_AD_SERVER_AVAILABILITY");
	AddOpcodeString(LDAP_MONITOR_UPDATE_AVAILIBILITY_STATUS, "LDAP_MONITOR_UPDATE_AVAILIBILITY_STATUS");
}

void COpcodeStringConverter::InitOpcodeStringProcessLogger()
{
	// 3980010
	AddOpcodeString(LOGGER_BUSY_TIMER,						"LOGGER_BUSY_TIMER");
	// 3980011
	AddOpcodeString(LOGGER_FILE_SYSTEM_WARNING_TIMER,		"LOGGER_FILE_SYSTEM_WARNING_TIMER");
	// 3980012
	AddOpcodeString(LOGGER_SYSTEM_LOAD_AVERAGE, 			"LOGGER_SYSTEM_LOAD_AVERAGE");
	// 3980013
	AddOpcodeString(LOGGER_DROP_MESSAGE_FLAG_ON_TIMER,		"LOGGER_DROP_MESSAGE_FLAG_ON_TIMER");
	// 3980014
	AddOpcodeString(LOGGER_ALL_MAX_TRACE_LEVEL, 			"LOGGER_ALL_MAX_TRACE_LEVEL");
	// 3980015
	AddOpcodeString(LOGGER_CARDS_MAX_TRACE_LEVEL,			"LOGGER_CARDS_MAX_TRACE_LEVEL");
	// 3980016
	AddOpcodeString(LOGGER_UDPAPPENDER_TIMER,				"LOGGER_UDPAPPENDER_TIMER");
	// 3980017
	AddOpcodeString(LOGGER_MSG_AVG_COUNT_TIMER, 			"LOGGER_MSG_AVG_COUNT_TIMER");

	// 3990001 OUT_TRACE_MESSAGE
	AddOpcodeString(3990001,								"OUT_TRACE_MESSAGE");
}

void COpcodeStringConverter::InitOpcodeStringProcessMcmsDaemon()
{
  ADD_OPCODE(PROCESS_UP);
  ADD_OPCODE(TO_MCMS_DAEMON_RESET_MCMS_REQ);
  ADD_OPCODE(TO_MCMS_DAEMON_RESET_PROCESS_REQ);
  ADD_OPCODE(CONFIG_APACHE_FINISHED_IND);
  ADD_OPCODE(WD_KEEP_ALIVE);
}

void COpcodeStringConverter::InitOpcodeStringProcessMcmsFaults()
{
  ADD_OPCODE(HLOG_LOGGER);
  ADD_OPCODE(HLOG_LOGGER_FULL_ONLY);
  ADD_OPCODE(ON_ASSERT_IND);
  ADD_OPCODE(NEW_CORE_DUMP_IND);
  ADD_OPCODE(AUDIT_EVENT_MCMS);
  ADD_OPCODE(DUMP_FAULTS_FILE_REQ);

}

void COpcodeStringConverter::InitOpcodeStringProcessMcuCmd()
{}

void COpcodeStringConverter::InitOpcodeStringProcessMcuMngr()
{
	AddOpcodeString(MCUMNGR_AUTHENTICATION_FAILURE_REQ    ,"MCUMNGR_AUTHENTICATION_FAILURE_REQ");
	AddOpcodeString(MCUMNGR_FIRST_OPCODE_IN_RANGE 		  ,"MCUMNGR_FIRST_OPCODE_IN_RANGE");
	AddOpcodeString(MPL_SW_LOCATION_UPDATE_REQ            ,"MPL_SW_LOCATION_UPDATE_REQ");
	AddOpcodeString(FAULT_GENERAL_IND                     ,"FAULT_GENERAL_IND");
	AddOpcodeString(MPL_MNGMNT_IP_PARAMS_UPDATE_REQ       ,"MPL_MNGMNT_IP_PARAMS_UPDATE_REQ");
	AddOpcodeString(MPL_SHELF_MNGMNT_IP_PARAMS_UPDATE_REQ ,"MPL_SHELF_MNGMNT_IP_PARAMS_UPDATE_REQ");
	AddOpcodeString(MPL_AUTHENTICATION_IND                ,"MPL_AUTHENTICATION_IND");
	AddOpcodeString(MPL_AUTHENTICATION_REQ				  ,"MPL_AUTHENTICATION_REQ");
	AddOpcodeString(MPL_MNGMNT_IP_CONFIG_IND              ,"MPL_MNGMNT_IP_CONFIG_IND");
	AddOpcodeString(MPL_SW_LOCATION_IND                   ,"MPL_SW_LOCATION_IND");
	AddOpcodeString(MPL_SW_LOCATION_UPDATE_IND            ,"MPL_SW_LOCATION_UPDATE_IND");
	AddOpcodeString(CS_MCU_NUM_OF_PORTS_IND               ,"CS_MCU_NUM_OF_PORTS_IND");
	AddOpcodeString(CS_MCU_NUM_OF_PORTS_REQ               ,"CS_MCU_NUM_OF_PORTS_REQ");
	AddOpcodeString(MCUMNGR_LAST_OPCODE_IN_RANGE  		  ,"MCUMNGR_LAST_OPCODE_IN_RANGE");
	AddOpcodeString(MCUMNGR_SET_SYSTEM_TIME_REQ  		  ,"MCUMNGR_SET_SYSTEM_TIME_REQ");
	AddOpcodeString(MCUMNGR_UPDATE_CFS_KEYCODE_REQ		  ,"MCUMNGR_UPDATE_CFS_KEYCODE_REQ");
	AddOpcodeString(MCUMNGR_RESET_MNGMNT_SERVICE_PARAMS_REQ,"MCUMNGR_RESET_MNGMNT_SERVICE_PARAMS_REQ");
	AddOpcodeString(MCUMNGR_RESET_USR_LIST_PARAMS_REQ     ,"MCUMNGR_RESET_USR_LIST_PARAMS_REQ");
	AddOpcodeString(MCUMNGR_RESET_ALL_PARAMS_REQ          ,"MCUMNGR_RESET_ALL_PARAMS_REQ");
	AddOpcodeString(MPL_SHELF_ENTER_DIAGNOSTICS_IND       ,"MPL_SHELF_ENTER_DIAGNOSTICS_IND");
	AddOpcodeString(MPL_MNGMNT_IP_PARAMS_UPDATE_IND       ,"MPL_MNGMNT_IP_PARAMS_UPDATE_IND");

	AddOpcodeString(MCUMNGR_RESET_ALL_MFA_BOARDS_REQ	  ,"MCUMNGR_RESET_ALL_MFA_BOARDS_REQ");
	AddOpcodeString(MCUMNGR_AUTHENTICATION_STRUCT_REQ	  ,"MCUMNGR_AUTHENTICATION_STRUCT_REQ");
	AddOpcodeString(MCUMNGR_AUTHENTICATION_SUCCESS_REQ	  ,"MCUMNGR_AUTHENTICATION_SUCCESS_REQ");
	AddOpcodeString(MCUMNGR_TO_RSRCALLOC_LICENSING_IND	  ,"MCUMNGR_TO_RSRCALLOC_LICENSING_IND");
	AddOpcodeString(MCUMNGR_TO_CONFPARTY_LICENSING_IND    ,"MCUMNGR_TO_CONFPARTY_LICENSING_IND");
	AddOpcodeString(MCUMNGR_TO_GK_LICENSING_IND    ,"MCUMNGR_TO_GK_LICENSING_IND");

	AddOpcodeString(MCUMNGR_TO_APACHEMODULE_LICENSING_IND ,"MCUMNGR_TO_APACHEMODULE_LICENSING_IND");
	AddOpcodeString(MCUMNGR_TO_INSTALLER_CFS_PARAMS_IND   ,"MCUMNGR_TO_INSTALLER_CFS_PARAMS_IND");

	AddOpcodeString(RESTORE_FACTORY_DEFAULT_IND           ,"RESTORE_FACTORY_DEFAULT_IND");
    AddOpcodeString(RESTORE_FACTORY_DEFAULT_REQ           ,"RESTORE_FACTORY_DEFAULT_REQ");

    AddOpcodeString(OUT_OF_SECURE_MODE_IND				  ,"OUT_OF_SECURE_MODE_IND");

	AddOpcodeString(MCUMNGR_STARTUP_TIMER				  ,"MCUMNGR_STARTUP_TIMER");

    AddOpcodeString(MCUMNGR_AUT_SET_DEFAULT_USER_LIST     ,"MCUMNGR_AUT_SET_DEFAULT_USER_LIST");

    AddOpcodeString(MCUMNGR_GK_MNGMNT_REQ, "MCUMNGR_GK_MNGMNT_REQ");
    AddOpcodeString(MCUMNGR_GK_MNGMNT_IND, "MCUMNGR_GK_MNGMNT_IND");

    AddOpcodeString(MCUMNGR_TO_CSMNGR_END_IP_CONFIG_IND, "MCUMNGR_TO_CSMNGR_END_IP_CONFIG_IND");
    AddOpcodeString(MCUMNGR_IP_TYPE_IND, "MCUMNGR_IP_TYPE_IND");

    AddOpcodeString(CONF_BLOCK_IND, "CONF_BLOCK_IND");
    AddOpcodeString(MCUMNGR_TO_CERTMNGR_HOST_NAME_UPDATE, "MCUMNGR_TO_CERTMNGR_HOST_NAME_UPDATE");

    AddOpcodeString(GET_CONF_NUM_REQ,			"GET_CONF_NUM_REQ");
    AddOpcodeString(GET_CONF_NUM_IND,			"GET_CONF_NUM_IND");
    AddOpcodeString(RECONFIG_CS_INERFACE_REQ,	"RECONFIG_CS_INERFACE_REQ");

    AddOpcodeString(RESOURCE_SYSTEM_RAM_SIZE_REQ,		"RESOURCE_SYSTEM_RAM_SIZE_REQ");
    AddOpcodeString(RESOURCE_SYSTEM_CPU_PROFILE_REQ,		"RESOURCE_SYSTEM_CPU_PROFILE_REQ");
    AddOpcodeString(CONFPARTY_SYSTEM_RAM_SIZE_REQ,		"CONFPARTY_SYSTEM_RAM_SIZE_REQ");
    AddOpcodeString(SYSTEM_RAM_SIZE_IND,				"SYSTEM_RAM_SIZE_IND");
    AddOpcodeString(MCUMNGR_INIT_KEYCODE_FAILURE_IND,	"MCUMNGR_INIT_KEYCODE_FAILURE_IND");
    AddOpcodeString(MCUMNGR_TO_RSRCALLOC_TIME_CHANGED_IND,	"MCUMNGR_TO_RSRCALLOC_TIME_CHANGED_IND");
    AddOpcodeString(MCUMNGR_TO_CARDS_LICENSING_IND,			"MCUMNGR_TO_CARDS_LICENSING_IND");
    AddOpcodeString(SYSTEM_STARTUP_REMAINING_TIME_TIMER,	"SYSTEM_STARTUP_REMAINING_TIME_TIMER");
    AddOpcodeString(MCUMNGR_TIME_SET,						"MCUMNGR_TIME_SET");

    AddOpcodeString(ETHERNET_SETTINGS_CONFIG_IND,		"ETHERNET_SETTINGS_CONFIG_IND");
    AddOpcodeString(ETHERNET_SETTINGS_CONFIG_REQ,		"ETHERNET_SETTINGS_CONFIG_REQ");
    AddOpcodeString(Op802_1x_NEW_CONFIG_REQ     ,       "Op802_1x_NEW_CONFIG_REQ");
    AddOpcodeString(MCUMNGR_TO_EXCHANGE_STARTUP_END,	"MCUMNGR_TO_EXCHANGE_STARTUP_END");
    AddOpcodeString(MCUMNGR_PRECEDENCE_SETTINGS,				"MCUMNGR_PRECEDENCE_SETTINGS");
    AddOpcodeString(MCUMNGR_PRECEDENCE_SETTINGS_REQ,			"MCUMNGR_PRECEDENCE_SETTINGS_REQ");

    AddOpcodeString(MCUMNGR_SYSTEM_IS_OUT_OF_STARTUP_IND, "MCUMNGR_SYSTEM_IS_OUT_OF_STARTUP_IND");
    AddOpcodeString(MCUMNGR_TO_AUTHENTICATION_MULTIPLE_SERVICES_IND , "MCUMNGR_TO_AUTHENTICATION_MULTIPLE_SERVICES_IND");
    AddOpcodeString(MCUMNGR_TO_APACHE_MULTIPLE_SERVICES_IND, "MCUMNGR_TO_APACHE_MULTIPLE_SERVICES_IND");
    AddOpcodeString(MCUMNGR_TO_CSMNGR_MULTIPLE_SERVICES_IND, "MCUMNGR_TO_CSMNGR_MULTIPLE_SERVICES_IND");
    AddOpcodeString(MCUMNGR_TO_RSRC_MULTIPLE_SERVICES_IND,   "MCUMNGR_TO_RSRC_MULTIPLE_SERVICES_IND");
    AddOpcodeString(MCUMNGR_TO_CERTMNGR_MULTIPLE_SERVICES_IND, "MCUMNGR_TO_CERTMNGR_MULTIPLE_SERVICES_IND");
    AddOpcodeString(MCUMNGR_TO_SIPPROXY_MULTIPLE_SERVICES_IND,   "MCUMNGR_TO_SIPPROXY_MULTIPLE_SERVICES_IND");
    AddOpcodeString(MCUMNGR_SECURITY_MODE_IND , "MCUMNGR_SECURITY_MODE_IND");
    AddOpcodeString(MCUMNGR_CSMNGR_V35GW_PARAMS_REQ, "MCUMNGR_CSMNGR_V35GW_PARAMS_REQ");

    AddOpcodeString(ENC_TO_MCUMNGR_IS_NTP_SYNC_REQ, "ENC_TO_MCUMNGR_IS_NTP_SYNC_REQ");

	// 301 MEMORY_REPORT_TIMER
	AddOpcodeString(301/*MEMORY_REPORT_TIMER*/,					"MEMORY_REPORT_TIMER");
	// 4980025
	AddOpcodeString(SYSTEM_MEMORY_USAGE_TIMER,						"SYSTEM_MEMORY_USAGE_TIMER");
	// 4980041
	AddOpcodeString(BACKUPRESTORE_TO_MCUMNGR_SYS_VERSION_REQ,		"BACKUPRESTORE_TO_MCUMNGR_SYS_VERSION_REQ");
	// 4980042
	AddOpcodeString(MCUMNGR_TO_BACKUPRESTORE_SYS_VERSION_IND,		"MCUMNGR_TO_BACKUPRESTORE_SYS_VERSION_IND");
	// 4980108
	AddOpcodeString(BACKUP_IDLE_TIMER,			"BACKUP_IDLE_TIMER");
	// 4980064
	AddOpcodeString(MCUMNGR_CONF_GMT_UPDATE , "MCUMNGR_CONF_GMT_UPDATE");
	// 4980064
	AddOpcodeString(GMT_OFFSET_SET_TIMER , "GMT_OFFSET_SET_TIMER");
	AddOpcodeString(MCUMNGR_GENERATE_CONF_FILE_802_1X, "MCUMNGR_GENERATE_CONF_FILE_802_1X");

	AddOpcodeString(OpInt802_1x_CONNECTION_STATUS_CHANGE_EVENT, "OpInt802_1x_CONNECTION_STATUS_CHANGE_EVENT");
}

void COpcodeStringConverter::InitOpcodeStringProcessMediaMngr()
{}

void COpcodeStringConverter::InitOpcodeStringProcessMplApi()
{
  	AddOpcodeString(ACK_IND									   ,"ACK_IND");
	AddOpcodeString(MPLAPI_MSG									,"MPLAPI_MSG");

  	AddOpcodeString(MPLAPI_FIRST_OPCODE_IN_RANGE				,"MPLAPI_FIRST_OPCODE_IN_RANGE");
  	AddOpcodeString(BASIC_MSG_TO_MPL_API						   ,"BASIC_MSG_TO_MPL_API");
  	AddOpcodeString(MPLAPI_MSG_TO_MPL							   ,"MPLAPI_MSG_TO_MPL");
  	AddOpcodeString(ESTABLISH_CONNECTION						   ,"ESTABLISH_CONNECTION");
  	AddOpcodeString(REESTABLISH_CONNECTION						   ,"REESTABLISH_CONNECTION");
  	AddOpcodeString(MPLAPI_LAST_OPCODE_IN_RANGE				   ,"MPLAPI_LAST_OPCODE_IN_RANGE");
	AddOpcodeString(MPL_CTRL_IP_CONFIG_IND					   ,"MPL_CTRL_IP_CONFIG_IND");
	AddOpcodeString(MOVE_RSRC_REQ					   			,"MOVE_RSRC_REQ");
}

void COpcodeStringConverter::InitOpcodeStringProcessQAAPI()
{
	AddOpcodeString(CQAAPI_MNGMNT_INTERFACE_IP_IND,		"CQAAPI_MNGMNT_INTERFACE_IP_IND");
	AddOpcodeString(SERVER_KEEP_ALIVE_TIMER, "SERVER_KEEP_ALIVE_TIMER");
	AddOpcodeString(SEND_REQ_TO_EXT_DB, "SEND_REQ_TO_EXT_DB");
	AddOpcodeString(CONFIGURATOR_ADD_PORTS_IPTABLES, "CONFIGURATOR_ADD_PORTS_IPTABLES");
	AddOpcodeString(EXT_DB_USER_LOGIN_CONFIRM, "EXT_DB_USER_LOGIN_CONFIRM");
	AddOpcodeString(EXT_DB_RESPONSE_TOUT, "EXT_DB_RESPONSE_TOUT");
	AddOpcodeString(CQAAPI_MNGMNT_INTERFACE_IP_REQ, "CQAAPI_MNGMNT_INTERFACE_IP_REQ");
	AddOpcodeString(AD_AUTHENTICATION_RESPONSE_TOUT, "AD_AUTHENTICATION_RESPONSE_TOUT");
}

void COpcodeStringConverter::InitOpcodeStringProcessResource()
{
	AddOpcodeString(CDR_RSRC_GET_LAST_CONF_ID_REQ, "CDR_RSRC_GET_LAST_CONF_ID_REQ");
	AddOpcodeString(CDR_RSRC_SET_LAST_CONF_ID_IND, "CDR_RSRC_SET_LAST_CONF_ID_IND");
	AddOpcodeString(KILL_PORT_REQ			, "KILL_PORT_REQ");
	AddOpcodeString(KILL_UDP_PORT_REQ		, "KILL_UDP_PORT_REQ");
	AddOpcodeString(RSRC_DEL_RSRV_CONF_IND		, "RSRC_DEL_RSRV_CONF_IND");
	AddOpcodeString(RESOURCE_READ_RES_DB		, "RESOURCE_READ_RES_DB");


	AddOpcodeString(PORT_NOT_RESPONDING_REQ		, "PORT_NOT_RESPONDING_REQ");

	AddOpcodeString(UNIT_RECOVERY_IND,				"UNIT_RECOVERY_IND");
	AddOpcodeString(UNIT_RECOVERY_END_IND,			"UNIT_RECOVERY_END_IND");
	AddOpcodeString(RECOVERY_REPLACEMENT_UNIT_REQ,	"RECOVERY_REPLACEMENT_UNIT_REQ");

	AddOpcodeString(PARTY_DEBUG_INFO_REQ,	"PARTY_DEBUG_INFO_REQ");
	AddOpcodeString(PARTY_DEBUG_INFO_IND,	"PARTY_DEBUG_INFO_IND");
	AddOpcodeString(PARTY_CM_DEBUG_INFO_IND,	"PARTY_CM_DEBUG_INFO_IND");
	AddOpcodeString(CONF_DEBUG_INFO_REQ,	"CONF_DEBUG_INFO_REQ");
	AddOpcodeString(CONF_DEBUG_INFO_IND ,	"CONF_DEBUG_INFO_IND ");

	AddOpcodeString(UNIT_FATAL_IND,		"UNIT_FATAL_IND");
	AddOpcodeString(UNIT_UNFATAL_IND,	"UNIT_UNFATAL_IND");


    AddOpcodeString(RESOURCE_READY_IND, "RESOURCE_READY_IND");
    AddOpcodeString(RESOURCE_NUMERIC_ID_REQ, "RESOURCE_NUMERIC_ID_REQ");
    AddOpcodeString(RESOURCE_NUMERIC_ID_IND, "RESOURCE_NUMERIC_ID_IND");
    AddOpcodeString(RSRC_CARD_TYPE_IND, "RSRC_CARD_TYPE_IND");
    AddOpcodeString(SYSMNTR_TO_RSRC_STOP_ALL_MEDIA_RECORDING_REQ, "SYSMNTR_TO_RSRC_STOP_ALL_MEDIA_RECORDING_REQ");
    AddOpcodeString(CM_HIGH_CPU_USAGE_IND, "CM_HIGH_CPU_USAGE_IND");
}

void COpcodeStringConverter::InitOpcodeStringProcessRtmIsdnMngr(void)
{
	AddOpcodeString(RTM_ISDN_PARAMS_IND,					"RTM_ISDN_PARAMS_IND");
	AddOpcodeString(RTM_ISDN_PARAMS_END_IND,				"RTM_ISDN_PARAMS_END_IND");
	AddOpcodeString(RTM_ISDN_DEFAULT_SERVICE_NAME_IND,		"RTM_ISDN_DEFAULT_SERVICE_NAME_IND");
	AddOpcodeString(RTM_ISDN_SPAN_MAPS_IND,					"RTM_ISDN_SPAN_MAPS_IND");
	AddOpcodeString(RTM_ISDN_SPAN_ENABLED_IND,				"RTM_ISDN_SPAN_ENABLED_IND");
	AddOpcodeString(RTM_ISDN_ATTACH_SPAN_MAP_IND,			"RTM_ISDN_ATTACH_SPAN_MAP_IND");
	AddOpcodeString(RTM_ISDN_DETACH_SPAN_MAP_IND,			"RTM_ISDN_DETACH_SPAN_MAP_IND");
	AddOpcodeString(RTM_ISDN_SPAN_DISABLE_IF_UPDATABLE_REQ,	"RTM_ISDN_SPAN_DISABLE_IF_UPDATABLE_REQ");
	AddOpcodeString(RTM_ISDN_SPAN_DISABLE_IF_UPDATABLE_IND,	"RTM_ISDN_SPAN_DISABLE_IF_UPDATABLE_IND");
	AddOpcodeString(RTM_ISDN_ENTITY_LOADED_IND,				"RTM_ISDN_ENTITY_LOADED_IND");
	AddOpcodeString(RTM_ISDN_SPAN_STATUS_MCMS_IND,			"RTM_ISDN_SPAN_STATUS_MCMS_IND");
	AddOpcodeString(RTM_ISDN_DISABLE_ALL_SPANS_IND,			"RTM_ISDN_DISABLE_ALL_SPANS_IND");
	AddOpcodeString(RTM_ISDN_ADD_PHONE_RANGE_REQ,			"RTM_ISDN_ADD_PHONE_RANGE_REQ");
	AddOpcodeString(RTM_ISDN_PHONE_RANGE_DELETE_IF_UPDATABLE_REQ,"RTM_ISDN_PHONE_RANGE_DELETE_IF_UPDATABLE_REQ");
	AddOpcodeString(RTM_ISDN_PHONE_RANGE_DELETE_IF_UPDATABLE_IND,"RTM_ISDN_PHONE_RANGE_DELETE_IF_UPDATABLE_IND");
	AddOpcodeString(RTM_ISDN_SERVICE_CANCEL_IF_UPDATABLE_REQ,"RTM_ISDN_SERVICE_CANCEL_IF_UPDATABLE_REQ");
	AddOpcodeString(RTM_ISDN_SERVICE_CANCEL_IF_UPDATABLE_IND,"RTM_ISDN_SERVICE_CANCEL_IF_UPDATABLE_IND");
	AddOpcodeString(RTM_ISDN_DELETE_SERVICE_IND,			"RTM_ISDN_DELETE_SERVICE_IND");
	AddOpcodeString(UPDATE_RTM_PORT_REQ,			        "UPDATE_RTM_PORT_REQ");
	AddOpcodeString(RTM_ISDN_GET_SERVICE_INFO_TIMER,	    "RTM_ISDN_GET_SERVICE_INFO_TIMER");
	AddOpcodeString(RTM_ISDN_NUM_PRI_CARD,                     "RTM_ISDN_NUM_PRI_CARD");
}

void COpcodeStringConverter::InitOpcodeStringProcessSipProxy()
{
	AddOpcodeString(SIP_CS_PROXY_REGISTER_RESPONSE_IND			, "SIP_CS_PROXY_REGISTER_RESPONSE_IND");
	AddOpcodeString(SIP_CS_PROXY_SUBSCRIBE_RESPONSE_IND			, "SIP_CS_PROXY_SUBSCRIBE_RESPONSE_IND");
	AddOpcodeString(SIP_CS_PROXY_NOTIFY_IND						, "SIP_CS_PROXY_NOTIFY_IND");
	AddOpcodeString( SIP_CS_PROXY_TRANSPORT_ERROR_IND			, "SIP_CS_PROXY_TRANSPORT_ERROR_IND");
	AddOpcodeString( SIP_CS_PROXY_CARD_DATA_IND					, "SIP_CS_PROXY_CARD_DATA_IND");
	AddOpcodeString( SIP_CS_PROXY_SERVICE_RESPONSE_IND			, "SIP_CS_PROXY_SERVICE_RESPONSE_IND");

	AddOpcodeString( SIP_CS_PROXY_REGISTER_REQ					, "SIP_CS_PROXY_REGISTER_REQ");
	AddOpcodeString( SIP_CS_PROXY_SUBSCRIBE_REQ					, "SIP_CS_PROXY_SUBSCRIBE_REQ");
	AddOpcodeString( SIP_CS_PROXY_UNKNOWN_METHOD_REQ			, "SIP_CS_PROXY_UNKNOWN_METHOD_REQ");
	AddOpcodeString( SIP_CS_PROXY_NOTIFY_REQ					, "SIP_CS_PROXY_NOTIFY_REQ");
	AddOpcodeString( SIP_CS_PROXY_SERVICE_REQ					, "SIP_CS_PROXY_SERVICE_REQ");

	AddOpcodeString( SIP_PROXY_TO_CONF_PARTY_DB_REQ  			, "SIP_PROXY_TO_CONF_PARTY_DB_REQ");
	AddOpcodeString( START_CONF_REG  							, "START_CONF_REG");
	AddOpcodeString( TERMINATE_CONF_REG  						, "TERMINATE_CONF_REG");
	AddOpcodeString(SIP_CS_PROXY_TRACE_INFO_IND					, "SIP_CS_PROXY_TRACE_INFO_IND");
    AddOpcodeString(SIP_CS_PROXY_BAD_STATUS_IND					, "SIP_CS_PROXY_BAD_STATUS_IND");
   AddOpcodeString(DEALLOCATE_PARTY_RSRC_IND					, "DEALLOCATE_PARTY_RSRC_IND");
    AddOpcodeString( SIP_PROXY_CHANGE_PRESENCE_STATE  			, "SIP_PROXY_CHANGE_PRESENCE_STATE");
    AddOpcodeString( SIP_CS_PROXY_SEND_CRLF_REQ        , "SIP_CS_PROXY_SEND_CRLF_REQ");
    AddOpcodeString( SIP_CS_PROXY_CRLF_ERR_IND       ,"SIP_CS_PROXY_CRLF_ERR_IND" );
}

void COpcodeStringConverter::InitOpcodeStringProcessSNMPProcess()
{
  ADD_OPCODE(SNMPD_WD);
  ADD_OPCODE(SNMPD_FIX_SNMPD_TIMER);
  ADD_OPCODE(SNMPD_STARTUP_RESET);
  ADD_OPCODE(SNMP_CS_INTERFACE_IP_REQ);
  ADD_OPCODE(SNMP_CS_INTERFACE_IP_IND);
  ADD_OPCODE(SNMP_MFA_INTERFACE_IP_REQ);
  ADD_OPCODE(SNMP_MFA_INTERFACE_IP_IND);
  ADD_OPCODE(SNMP_MNGMNT_INTERFACE_IP_REQ);
  ADD_OPCODE(SNMP_MNGMNT_INTERFACE_IP_IND);
  ADD_OPCODE(SNMP_MNGMNT_IP_CONFIG_IND);
  ADD_OPCODE(SNMP_AGENT_READY_IND);
  ADD_OPCODE(EP_PROCESS_STARTED);
  ADD_OPCODE(SNMP_UPDATE_TELEMETRY_DATA_IND);
  ADD_OPCODE(SNMP_GET_TELEMETRY_DATA_REQ);
  ADD_OPCODE(SNMP_CONFIG_TO_OTHER_PROGRESS);
  ADD_OPCODE(SNMP_UPDATE_MULTIPLE_TELEMETRY_DATA_IND);
  ADD_OPCODE(SNMP_OTHER_PROCESS_READY);
  ADD_OPCODE(SNMP_CM_CARD_MNGR_NEW_CARD_IND);
  ADD_OPCODE(SNMP_MFA_LINK_STATUS_IND);
  ADD_OPCODE(SNMP_CS_LINK_STATUS_IND);

}

void COpcodeStringConverter::InitOpcodeStringProcessSystemMonitoring()
{
  ADD_OPCODE(CORE_DUMP_MANAGER_TIMER);
  ADD_OPCODE(SMART_MONITOR_TIMER);
  ADD_OPCODE(ETHERNET_SETTINGS_MONITORING_TIMER);
  ADD_OPCODE(SYSMONITOR_CARDS_ETHERNET_SETTINGS_MONITORING_IND);
  ADD_OPCODE(SMART_SELFTEST_TIMER);
  ADD_OPCODE(SYSTEM_IS_STARTUP_FINISHED_TIMER);
  ADD_OPCODE(SYSTEM_SYSTEM_CPU_USAGE_TIMER);
  ADD_OPCODE(SYSTEM_MEMORY_SCAN_TIMER);
  ADD_OPCODE(SYSTEM_CHECK_SYSTEM_CPU_USAGE_REQ);
  ADD_OPCODE(SYSTEM_PROCESS_STAT_TIMER);
  ADD_OPCODE(SYSTEM_PROCESS_TEMP_SENSORS_TIMER);
  ADD_OPCODE(SYSTEM_CHECK_MEDIA_RECORDING_FOLDER_SIZE_TIMER);
  ADD_OPCODE(SYSTEM_CHECK_FREE_DISK_SPACE_TIMER);
  ADD_OPCODE(SYSTEM_SCHED_LATENCY_TIMER);
}

void COpcodeStringConverter::InitOpcodeStringProcessTestClient()
{}

void COpcodeStringConverter::InitOpcodeStringProcessTestServer()
{}

void COpcodeStringConverter::InitOpcodeStringProcessUtility()
{
	ADD_OPCODE(UTILITY_DOWNLOAD_FILE);
	ADD_OPCODE(UTILITY_INTERFACES_CONFIGURATION_REQ);
	ADD_OPCODE(UTILITY_START_TCP_DUMP);
	ADD_OPCODE(UTILITY_STOP_TCP_DUMP);
	ADD_OPCODE(UTILITY_CLEAR_TCP_DUMP_STORAGE);
	ADD_OPCODE(UTILITY_TO_CARDS_START_TCP_DUMP_REQ);
	ADD_OPCODE(UTILITY_TO_CARDS_STOP_TCP_DUMP_REQ);
	ADD_OPCODE(START_TCP_DUMP_REQ);
	ADD_OPCODE(START_TCP_DUMP_IND);
	ADD_OPCODE(STOP_TCP_DUMP_REQ);
	ADD_OPCODE(STOP_TCP_DUMP_IND);
	ADD_OPCODE(UTILITY_CONVERT_SLIDE);
}

void COpcodeStringConverter::InitOpcodeStringProcessMCCFMngr()
{
	ADD_OPCODE(MCCF_MNGMNT_INTERFACE_IP_REQ);
	ADD_OPCODE(MCCF_MNGMNT_INTERFACE_IP_IND);

	ADD_OPCODE(MCCF_CS_KEEP_ALIVE_TIMER);

	ADD_OPCODE(MCCF_REQUEST_ACK);
	ADD_OPCODE(MCCF_APP_SERVER_ACK);

	ADD_OPCODE(MCCF_CHANNEL_OPENED);
	ADD_OPCODE(MCCF_CHANNEL_CLOSED);

	ADD_OPCODE(MCCF_CHANNEL_SYNC);
	ADD_OPCODE(MCCF_CHANNEL_DROP);

	ADD_OPCODE(MCCF_IVR_PACKAGE_REQUEST);
	ADD_OPCODE(MCCF_IVR_PACKAGE_RESPONSE);
	ADD_OPCODE(MCCF_IVR_FILE_DOWNLOADED);

	ADD_OPCODE(MCCF_CDR_PACKAGE_RESPONSE);

	ADD_OPCODE(SIP_CS_MCCF_SIG_INVITE_IND);
	ADD_OPCODE(SIP_CS_MCCF_SIG_INVITE_ACK_IND);
	ADD_OPCODE(SIP_CS_MCCF_SIG_BYE_IND);
	ADD_OPCODE(SIP_CS_MCCF_SIG_BYE_200_OK_IND);
	ADD_OPCODE(SIP_CS_MCCF_SIG_SESSION_TIMER_EXPIRED_IND);
	ADD_OPCODE(SIP_CS_MCCF_SIG_TRANSPORT_ERROR_IND);
	ADD_OPCODE(SIP_CS_MCCF_SIG_BAD_STATUS_IND);
	ADD_OPCODE(SIP_CS_MCCF_SIG_INVITE_RESPONSE_REQ);
	ADD_OPCODE(SIP_CS_MCCF_SIG_BYE_200_OK_REQ);
	ADD_OPCODE(SIP_CS_MCCF_SIG_BYE_REQ);
}

void COpcodeStringConverter::InitOpcodeStringProcessLicenseServer()
{
	ADD_OPCODE(SYSTEM_LICENSE_REFRESH_TIMER);
	ADD_OPCODE(LICENSE_SERVER_PARAMS_REQ);
	ADD_OPCODE(LICENSE_SERVER_PARAMS_IND);
	ADD_OPCODE(LICENSE_SERVER_FIRST_UPDATE_PARAMS_REQ);
	ADD_OPCODE(LICENSE_SERVER_UPDATE_PARAMS_REQ);
}
