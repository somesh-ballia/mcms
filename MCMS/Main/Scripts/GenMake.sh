#!/bin/sh

cd Processes/$1 || exit 0

. ./make.in || exit 0


####   NOT THIS FILE...
echo "################################################"
echo "# THIS FILE WAS GENERATED BY GenMake.sh        #"
echo "#  do not edit delete or add to source control #"
echo "################################################"
####   NOT THIS FILE...


#input variables (example)
#PROCESS_NAME="ConfParty"
#COMMON_INCLUDES="\$(COMMONINCPATH) \$(CSAPIINC) \$(MPLAPIINC)"
#UNIQUE_INCLUDES_VARS="ENCRYPTINC ZLIBINC SNMPINC"
#ADDITIONAL_TEST_INCLUDES="-I Libs/Mocks"
#PLATFORMS="RMX SOFT"
#UNIQUE_DEPEND="libMcmsEncryption.so libBFCP.so libSNMP.so"
#ADDITIONAL_LINK="-lBFCP"
#ADDITIONAL_LINK_UNIQUE="ENCRYPTLIB SNMPLIB"
#ADDITIONAL_TEST_LINK="Mocks"
#UNIQUE_STATIC_LIBRARIES="Libs/CsXmlEngine/CsXmlLib"




#local variables
SOURCE_FOLDER="Processes/"$PROCESS_NAME"/"$PROCESS_NAME"Lib"
INCLUDEPATHVAR="INCLUDE_PATH_"$PROCESS_NAME
TARGET_NAME="TARGET_"$PROCESS_NAME
UNIQUE_INCLUDES_LINES=($UNIQUE_INCLUDES_VARS)
PLATFORMS_LINES=($PLATFORMS)
UNIQUE_DEPEND_LINES=($UNIQUE_DEPEND)
ADDITIONAL_LINK_UNIQUE_LINES=($ADDITIONAL_LINK_UNIQUE)
TEST_LINK_UNIQUE_LINES=($ADDITIONAL_TEST_LINK)
UNIQUE_STATIC_LIBRARIES_LINES=($UNIQUE_STATIC_LIBRARIES_LINK)


echo "# include folders"
echo $INCLUDEPATHVAR"  = -I $SOURCE_FOLDER "$COMMON_INCLUDES

for platform in ${PLATFORMS_LINES[@]} 
do
	echo -n $INCLUDEPATHVAR"_"$platform" = \$("$INCLUDEPATHVAR") "
	for word in ${UNIQUE_INCLUDES_LINES[@]}; do echo -n "\$("$word"_"$platform") "; done
	echo

	echo $TARGET_NAME"_"$platform" = \$(BIN_"$platform")/"$PROCESS_NAME""
done


echo "# lists of sources objects and depend files"
echo "ifndef SKIP_TESTS"
echo "TEST_"$TARGET_NAME"      = \$(BIN_SOFT)/"$PROCESS_NAME".Test"
echo "endif"

echo "CSOURCES"$PROCESS_NAME" := \$(shell find $SOURCE_FOLDER | grep -v /Tests/ | grep \"\.c\$\$\")"
echo "CPPSOURCES"$PROCESS_NAME" := \$(shell find $SOURCE_FOLDER |  grep -v /Tests/ | grep \"\.cpp\$\$\")"
echo "SOURCES"$PROCESS_NAME" := \$(CSOURCES"$PROCESS_NAME") \$(CPPSOURCES"$PROCESS_NAME")"

for platform in ${PLATFORMS_LINES[@]} 
do
	echo "OBJECTS"$PROCESS_NAME"_"$platform" := \$(CSOURCES"$PROCESS_NAME":.c=.o) \$(CPPSOURCES"$PROCESS_NAME":.cpp=.\$("$platform"_PLATFORM).o)"
done

echo "ifndef SKIP_DEPEND"
echo "DEPENDS"$PROCESS_NAME" := \$(CSOURCES"$PROCESS_NAME":.c=.depend) \$(CPPSOURCES"$PROCESS_NAME":.cpp=.depend)"
echo "endif"



echo "# lists of sources objects and depend files for tests"
for platform in ${PLATFORMS_LINES[@]} ; do echo "TARGETS_"$platform" += \$("$TARGET_NAME"_"$platform")" ; done


echo "ifndef SKIP_TESTS"
echo "TESTCPPSOURCES"$PROCESS_NAME" := \$(shell find Processes/"$PROCESS_NAME"/Tests | grep \"\.cpp\$\$\")"
echo "TESTOBJECTS"$PROCESS_NAME" := \$(TESTCPPSOURCES"$PROCESS_NAME":.cpp=.o)"
echo "ifndef SKIP_DEPEND"
echo "TESTDEPENDS"$PROCESS_NAME" := \$(TESTCPPSOURCES"$PROCESS_NAME":.cpp=.depend)"
echo "endif"
echo "endif"

echo
#echo "ifndef SKIP_DEPEND"
#echo "ifneq (\$(MAKECMDGOALS) , clean)"
#echo "-include \$(TESTDEPENDS"$PROCESS_NAME")"
#echo "endif"
#echo "endif"
#echo


echo "ifndef SKIP_TESTS"
echo "TEST_TARGETS += \$(TEST_"$TARGET_NAME")"
echo "endif"
echo 

echo "ifndef SKIP_TESTS"
echo "# rules to create object files for tests"
echo "Processes/"$PROCESS_NAME"/Tests/%.o: Processes/"$PROCESS_NAME"/Tests/%.cpp"
echo "	@echo Building \$@"
echo "	\$(Q)\$(DISTCXX_SOFT) -c \$(CXXFLAGS_SOFT) \$("$INCLUDEPATHVAR"_SOFT)  \$(CPPUNITINC_SOFT) "$ADDITIONAL_TEST_INCLUDES" -o\$@ \$<"
echo

echo "ifndef SKIP_DEPEND"
echo "# runs to make depend files for tests"
echo "Processes/"$PROCESS_NAME"/Tests/%.depend: Processes/"$PROCESS_NAME"/Tests/%.cpp"
echo "	@echo Building \$(patsubst %.o,%.depend,\$@)"
echo -n "	\$(Q)\$(CXX_SOFT) -MM -MF \$(patsubst %.o,%.depend,\$@) "
echo " -MT \$(patsubst %.o,%.depend,\$@) -MT \$@ \$(CXXFLAGS_SOFT) \$("$INCLUDEPATHVAR"_SOFT) \$(CPPUNITINC_SOFT)  "$ADDITIONAL_TEST_INCLUDES" \$<"
echo "endif"
echo "endif"
echo


echo "ifndef SKIP_DEPEND"
echo "DEPENDS += DEPENDS"$PROCESS_NAME
echo "ifndef SKIP_TESTS"
echo "DEPENDS += TESTDEPENDS"$PROCESS_NAME
echo "endif"


echo

echo "-include $SOURCE_FOLDER/*depend"

echo "ifndef SKIP_TESTS"
echo "-include $SOURCE_FOLDER/../Tests/*depend"
echo "endif"
echo "endif"

echo


echo "# rules to create object files"
for platform in ${PLATFORMS_LINES[@]} 
do	
	echo "$SOURCE_FOLDER/%.\$("$platform"_PLATFORM).o: $SOURCE_FOLDER/%.cpp"
	echo "	@echo Building \$@"
	echo "	\$(Q)\$(DISTCXX_"$platform") -c \$(CXXFLAGS_"$platform") \$("$INCLUDEPATHVAR"_"$platform") -o \$@ $<"
	echo

	echo "$SOURCE_FOLDER/%.\$("$platform"_PLATFORM).o: $SOURCE_FOLDER/%.c"
	echo "	@echo Building \$@"
	echo "	\$(Q)\$(DISTCC_"$platform") -c \$(CFLAGS_"$platform") \$("$INCLUDEPATHVAR"_"$platform") -o \$@ $<"
	echo
done

echo


echo "ifndef SKIP_DEPEND"
echo "# rules to create depend files"
echo "$SOURCE_FOLDER/%.depend: $SOURCE_FOLDER/%.cpp"
echo "	@echo Building \$@"

echo -n "	\$(Q)\$(CXX_SOFT) -MM -MT \$@"
for platform in ${PLATFORMS_LINES[@]}  ;do echo -n " -MT \$(patsubst %.depend,%.\$("$platform"_PLATFORM).o,\$@)" ; done
echo " -MF \$@ \$(CXXFLAGS_SOFT) \$("$INCLUDEPATHVAR"_SOFT) $<"
echo
echo "$SOURCE_FOLDER/%.depend: $SOURCE_FOLDER/%.c"
echo "	@echo Building \$@"
echo -n "	\$(Q)\$(CC_SOFT) -MM -MT \$@"
for platform in ${PLATFORMS_LINES[@]}  ;do echo -n " -MT \$(patsubst %.depend,%.\$("$platform"_PLATFORM).o,\$@)" ; done
echo " -MF \$@ \$(CFLAGS_SOFT) \$("$INCLUDEPATHVAR"_SOFT) $<"
echo
echo
echo "endif"


echo "# binaries"
for platform in ${PLATFORMS_LINES[@]} 
do	
	echo -n "\$("$TARGET_NAME"_"$platform"):  \$(OBJECTS"$PROCESS_NAME"_"$platform") \$(DEPENDS"$PROCESS_NAME") \$(BASE_DEPEND_"$platform") \$(MAINOBJ_"$platform") "

	for depend in ${UNIQUE_DEPEND_LINES[@]} ; do echo  -n "\$(BIN_"$platform")/$depend " ; done
	for link in ${UNIQUE_STATIC_LIBRARIES[@]}  ;do echo -n $link".\$("$platform"_PLATFORM).a " ; done

	echo
	echo "	@echo Building \$@"
	echo -n "	\$(Q)\$(LINK_"$platform") \$(LFLAGS_"$platform") \$(OBJECTS"$PROCESS_NAME"_"$platform") \$(MAINOBJ_"$platform")  \$(BASE_LIBS_"$platform") "

	for link in ${ADDITIONAL_LINK_UNIQUE_LINES[@]}  ;do echo -n "\$("$link"_"$platform") " ; done
	for link in ${UNIQUE_STATIC_LIBRARIES[@]}  ;do echo -n $link".\$("$platform"_PLATFORM).a " ; done
	echo  $ADDITIONAL_LINK" -o \$@"

	echo
done

platform="SOFT"

echo "ifndef SKIP_TESTS"

echo "# test binary"
echo -n "\$(TEST_"$TARGET_NAME"): \$(OBJECTS"$PROCESS_NAME"_SOFT) \$(TESTDEPENDS"$PROCESS_NAME") \$(BASE_DEPEND_"$platform") \$(TESTMAINOBJ) \$(TESTOBJECTS"$PROCESS_NAME") "
for depend in ${UNIQUE_DEPEND_LINES[@]}; do echo  -n "\$(BIN_SOFT)/$depend " ; done
for test_depend in ${TEST_LINK_UNIQUE_LINES[@]}  ;do echo  -n "\$(BIN_SOFT)/lib"$test_depend".so " ;done
for link in ${UNIQUE_STATIC_LIBRARIES[@]}  ;do echo -n $link".\$("$platform"_PLATFORM).a " ; done

echo

echo "	@echo Building \$@"
echo -n "	\$(Q)\$(LINK_SOFT) \$(LFLAGS_SOFT) \$(OBJECTS"$PROCESS_NAME"_SOFT) \$(TESTMAINOBJ) \$(TESTOBJECTS"$PROCESS_NAME") \$(BASE_LIBS_SOFT) "
for link in ${ADDITIONAL_LINK_UNIQUE_LINES[@]} ; do echo -n "\$("$link"_"$platform") " ; done
for link in ${UNIQUE_STATIC_LIBRARIES[@]}  ;do echo -n $link".\$("$platform"_PLATFORM).a " ; done
echo -n  $ADDITIONAL_LINK
for test_depend in ${TEST_LINK_UNIQUE_LINES[@]}  ;do echo -n " -l"$test_depend" " ;done
echo " \$(CPPUNITLIB_SOFT) -o \$@"

echo "endif"




